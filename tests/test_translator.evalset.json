{
    "eval_set_id": "translator_direct_tests",
    "name": "Direct Tests for the CodeTranslator Agent",
    "eval_cases": [
      {
        "eval_id": "test_commit_a1b2c3d4",
        "session_input": {
          "app_name": "CodePorter",
          "user_id": "eval-user",
          "state": {
            "gathered_context": {
                "commit_info": {
                  "commit_sha": "795605a37e1141e37d86c9b3fa484a3a03e7e9a6",
                  "diff": "diff --git a/src/google/adk/models/google_llm.py b/src/google/adk/models/google_llm.py\nindex 20b747c80..42dc96478 100644\n--- a/src/google/adk/models/google_llm.py\n+++ b/src/google/adk/models/google_llm.py\n@@ -97,6 +97,7 @@ async def generate_content_async(\n           config=llm_request.config,\n       )\n       response = None\n+      thought_text = ''\n       text = ''\n       usage_metadata = None\n       # for sse, similar as bidi (see receive method in gemini_llm_connecton.py),\n@@ -113,32 +114,43 @@ async def generate_content_async(\n             and llm_response.content.parts\n             and llm_response.content.parts[0].text\n         ):\n-          text += llm_response.content.parts[0].text\n+          part0 = llm_response.content.parts[0]\n+          if part0.thought:\n+            thought_text += part0.text\n+          else:\n+            text += part0.text\n           llm_response.partial = True\n-        elif text and (\n+        elif (thought_text or text) and (\n             not llm_response.content\n             or not llm_response.content.parts\n             # don't yield the merged text event when receiving audio data\n             or not llm_response.content.parts[0].inline_data\n         ):\n+          parts = []\n+          if thought_text:\n+            parts.append(types.Part(text=thought_text, thought=True))\n+          if text:\n+            parts.append(types.Part.from_text(text=text))\n           yield LlmResponse(\n-              content=types.ModelContent(\n-                  parts=[types.Part.from_text(text=text)],\n-              ),\n-              usage_metadata=usage_metadata,\n+              content=types.ModelContent(parts=parts),\n+              usage_metadata=llm_response.usage_metadata,\n           )\n+          thought_text = ''\n           text = ''\n         yield llm_response\n       if (\n-          text\n+          (text or thought_text)\n           and response\n           and response.candidates\n           and response.candidates[0].finish_reason == types.FinishReason.STOP\n       ):\n+        parts = []\n+        if thought_text:\n+          parts.append(types.Part(text=thought_text, thought=True))\n+        if text:\n+          parts.append(types.Part.from_text(text=text))\n         yield LlmResponse(\n-            content=types.ModelContent(\n-                parts=[types.Part.from_text(text=text)],\n-            ),\n+            content=types.ModelContent(parts=parts),\n             usage_metadata=usage_metadata,\n         )\n \ndiff --git a/tests/unittests/models/test_google_llm.py b/tests/unittests/models/test_google_llm.py\nindex 07c22bb2a..3b3e5701e 100644\n--- a/tests/unittests/models/test_google_llm.py\n+++ b/tests/unittests/models/test_google_llm.py\n@@ -206,6 +206,80 @@ async def mock_coro():\n     mock_client.aio.models.generate_content_stream.assert_called_once()\n \n \n+@pytest.mark.asyncio\n+async def test_generate_content_async_stream_preserves_thinking_and_text_parts(\n+    gemini_llm, llm_request\n+):\n+    with mock.patch.object(gemini_llm, \"api_client\") as mock_client:\n+        class MockAsyncIterator:\n+            def __init__(self, seq):\n+                self._iter = iter(seq)\n+\n+            def __aiter__(self):\n+                return self\n+\n+            async def __anext__(self):\n+                try:\n+                    return next(self._iter)\n+                except StopIteration:\n+                    raise StopAsyncIteration\n+\n+        response1 = types.GenerateContentResponse(\n+            candidates=[\n+                types.Candidate(\n+                    content=Content(\n+                        role=\"model\",\n+                        parts=[Part(text=\"Think1\", thought=True)],\n+                    ),\n+                    finish_reason=None,\n+                )\n+            ]\n+        )\n+        response2 = types.GenerateContentResponse(\n+            candidates=[\n+                types.Candidate(\n+                    content=Content(\n+                        role=\"model\",\n+                        parts=[Part(text=\"Think2\", thought=True)],\n+                    ),\n+                    finish_reason=None,\n+                )\n+            ]\n+        )\n+        response3 = types.GenerateContentResponse(\n+            candidates=[\n+                types.Candidate(\n+                    content=Content(\n+                        role=\"model\",\n+                        parts=[Part.from_text(text=\"Answer.\")],\n+                    ),\n+                    finish_reason=types.FinishReason.STOP,\n+                )\n+            ]\n+        )\n+\n+        async def mock_coro():\n+            return MockAsyncIterator([response1, response2, response3])\n+\n+        mock_client.aio.models.generate_content_stream.return_value = mock_coro()\n+\n+        responses = [\n+            resp\n+            async for resp in gemini_llm.generate_content_async(\n+                llm_request, stream=True\n+            )\n+        ]\n+\n+        assert len(responses) == 4\n+        assert responses[0].partial is True\n+        assert responses[1].partial is True\n+        assert responses[2].partial is True\n+        assert responses[3].content.parts[0].text == \"Think1Think2\"\n+        assert responses[3].content.parts[0].thought is True\n+        assert responses[3].content.parts[1].text == \"Answer.\"\n+        mock_client.aio.models.generate_content_stream.assert_called_once()\n+\n+\n @pytest.mark.asyncio\n async def test_connect(gemini_llm, llm_request):\n   # Create a mock connection\n",
                  "changed_files": [
                    "src/google/adk/models/google_llm.py",
                    "tests/unittests/models/test_google_llm.py"
                  ]
                },
                "python_repo_structure": [
                  {
                    "path": ".github",
                    "type": "dir",
                    "size": 0,
                    "name": ".github",
                    "contents": [
                      {
                        "path": ".github/ISSUE_TEMPLATE",
                        "type": "dir",
                        "size": 0,
                        "name": "ISSUE_TEMPLATE",
                        "contents": [
                          {
                            "path": ".github/ISSUE_TEMPLATE/bug_report.md",
                            "type": "file",
                            "size": 838,
                            "name": "bug_report.md"
                          },
                          {
                            "path": ".github/ISSUE_TEMPLATE/feature_request.md",
                            "type": "file",
                            "size": 768,
                            "name": "feature_request.md"
                          }
                        ]
                      },
                      {
                        "path": ".github/workflows",
                        "type": "dir",
                        "size": 0,
                        "name": "workflows",
                        "contents": [
                          {
                            "path": ".github/workflows/check-file-contents.yml",
                            "type": "file",
                            "size": 5023,
                            "name": "check-file-contents.yml"
                          },
                          {
                            "path": ".github/workflows/isort.yml",
                            "type": "file",
                            "size": 2018,
                            "name": "isort.yml"
                          },
                          {
                            "path": ".github/workflows/pyink.yml",
                            "type": "file",
                            "size": 2080,
                            "name": "pyink.yml"
                          },
                          {
                            "path": ".github/workflows/python-unit-tests.yml",
                            "type": "file",
                            "size": 1943,
                            "name": "python-unit-tests.yml"
                          },
                          {
                            "path": ".github/workflows/triage.yml",
                            "type": "file",
                            "size": 1240,
                            "name": "triage.yml"
                          }
                        ]
                      },
                      {
                        "path": ".github/release-please.yml",
                        "type": "file",
                        "size": 108,
                        "name": "release-please.yml"
                      },
                      {
                        "path": ".github/release-trigger.yml",
                        "type": "file",
                        "size": 13,
                        "name": "release-trigger.yml"
                      }
                    ]
                  },
                  {
                    "path": "assets",
                    "type": "dir",
                    "size": 0,
                    "name": "assets",
                    "contents": [
                      {
                        "path": "assets/adk-web-dev-ui-function-call.png",
                        "type": "file",
                        "size": 422814,
                        "name": "adk-web-dev-ui-function-call.png"
                      },
                      {
                        "path": "assets/agent-development-kit.png",
                        "type": "file",
                        "size": 11976,
                        "name": "agent-development-kit.png"
                      }
                    ]
                  },
                  {
                    "path": "contributing",
                    "type": "dir",
                    "size": 0,
                    "name": "contributing",
                    "contents": [
                      {
                        "path": "contributing/samples",
                        "type": "dir",
                        "size": 0,
                        "name": "samples",
                        "contents": [
                          {
                            "path": "contributing/samples/adk_triaging_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "adk_triaging_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/adk_triaging_agent/README.md",
                                "type": "file",
                                "size": 3542,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/adk_triaging_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/adk_triaging_agent/agent.py",
                                "type": "file",
                                "size": 4584,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/adk_triaging_agent/main.py",
                                "type": "file",
                                "size": 5789,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/application_integration_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "application_integration_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/application_integration_agent/README.md",
                                "type": "file",
                                "size": 2010,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/application_integration_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/application_integration_agent/agent.py",
                                "type": "file",
                                "size": 2260,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/artifact_save_text",
                            "type": "dir",
                            "size": 0,
                            "name": "artifact_save_text",
                            "contents": [
                              {
                                "path": "contributing/samples/artifact_save_text/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/artifact_save_text/agent.py",
                                "type": "file",
                                "size": 1576,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/bigquery",
                            "type": "dir",
                            "size": 0,
                            "name": "bigquery",
                            "contents": [
                              {
                                "path": "contributing/samples/bigquery/README.md",
                                "type": "file",
                                "size": 3284,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/bigquery/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/bigquery/agent.py",
                                "type": "file",
                                "size": 2853,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/bigquery_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "bigquery_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/bigquery_agent/README.md",
                                "type": "file",
                                "size": 1886,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/bigquery_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/bigquery_agent/agent.py",
                                "type": "file",
                                "size": 2449,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/callbacks",
                            "type": "dir",
                            "size": 0,
                            "name": "callbacks",
                            "contents": [
                              {
                                "path": "contributing/samples/callbacks/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/callbacks/agent.py",
                                "type": "file",
                                "size": 6244,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/callbacks/main.py",
                                "type": "file",
                                "size": 2608,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/code_execution",
                            "type": "dir",
                            "size": 0,
                            "name": "code_execution",
                            "contents": [
                              {
                                "path": "contributing/samples/code_execution/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/code_execution/agent.py",
                                "type": "file",
                                "size": 4241,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/fields_output_schema",
                            "type": "dir",
                            "size": 0,
                            "name": "fields_output_schema",
                            "contents": [
                              {
                                "path": "contributing/samples/fields_output_schema/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/fields_output_schema/agent.py",
                                "type": "file",
                                "size": 1199,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/fields_planner",
                            "type": "dir",
                            "size": 0,
                            "name": "fields_planner",
                            "contents": [
                              {
                                "path": "contributing/samples/fields_planner/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/fields_planner/agent.py",
                                "type": "file",
                                "size": 4173,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/fields_planner/main.py",
                                "type": "file",
                                "size": 2409,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/generate_image",
                            "type": "dir",
                            "size": 0,
                            "name": "generate_image",
                            "contents": [
                              {
                                "path": "contributing/samples/generate_image/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/generate_image/agent.py",
                                "type": "file",
                                "size": 1822,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/generate_image/sample.session.json",
                                "type": "file",
                                "size": 5426058,
                                "name": "sample.session.json"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/google_search_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "google_search_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/google_search_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/google_search_agent/agent.py",
                                "type": "file",
                                "size": 1105,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/hello_world",
                            "type": "dir",
                            "size": 0,
                            "name": "hello_world",
                            "contents": [
                              {
                                "path": "contributing/samples/hello_world/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/hello_world/agent.py",
                                "type": "file",
                                "size": 4101,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/hello_world/main.py",
                                "type": "file",
                                "size": 3434,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/hello_world_anthropic",
                            "type": "dir",
                            "size": 0,
                            "name": "hello_world_anthropic",
                            "contents": [
                              {
                                "path": "contributing/samples/hello_world_anthropic/__init__.py",
                                "type": "file",
                                "size": 596,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/hello_world_anthropic/agent.py",
                                "type": "file",
                                "size": 3346,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/hello_world_anthropic/main.py",
                                "type": "file",
                                "size": 2377,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/hello_world_litellm",
                            "type": "dir",
                            "size": 0,
                            "name": "hello_world_litellm",
                            "contents": [
                              {
                                "path": "contributing/samples/hello_world_litellm/__init__.py",
                                "type": "file",
                                "size": 596,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/hello_world_litellm/agent.py",
                                "type": "file",
                                "size": 3580,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/hello_world_litellm/main.py",
                                "type": "file",
                                "size": 2432,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/hello_world_ma",
                            "type": "dir",
                            "size": 0,
                            "name": "hello_world_ma",
                            "contents": [
                              {
                                "path": "contributing/samples/hello_world_ma/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/hello_world_ma/agent.py",
                                "type": "file",
                                "size": 5206,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/hello_world_ollama",
                            "type": "dir",
                            "size": 0,
                            "name": "hello_world_ollama",
                            "contents": [
                              {
                                "path": "contributing/samples/hello_world_ollama/README.md",
                                "type": "file",
                                "size": 3171,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/hello_world_ollama/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/hello_world_ollama/agent.py",
                                "type": "file",
                                "size": 3361,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/hello_world_ollama/main.py",
                                "type": "file",
                                "size": 2503,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/human_in_loop",
                            "type": "dir",
                            "size": 0,
                            "name": "human_in_loop",
                            "contents": [
                              {
                                "path": "contributing/samples/human_in_loop/README.md",
                                "type": "file",
                                "size": 2644,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/human_in_loop/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/human_in_loop/agent.py",
                                "type": "file",
                                "size": 1890,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/human_in_loop/main.py",
                                "type": "file",
                                "size": 6835,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/integration_connector_euc_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "integration_connector_euc_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/integration_connector_euc_agent/README.md",
                                "type": "file",
                                "size": 3423,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/integration_connector_euc_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/integration_connector_euc_agent/agent.py",
                                "type": "file",
                                "size": 3323,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/jira_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "jira_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/jira_agent/README.md",
                                "type": "file",
                                "size": 1543,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/jira_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/jira_agent/agent.py",
                                "type": "file",
                                "size": 2934,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/jira_agent/image-app-intg-editor.png",
                                "type": "file",
                                "size": 143919,
                                "name": "image-app-intg-editor.png"
                              },
                              {
                                "path": "contributing/samples/jira_agent/image-application-integration.png",
                                "type": "file",
                                "size": 119045,
                                "name": "image-application-integration.png"
                              },
                              {
                                "path": "contributing/samples/jira_agent/image-connection-tool.png",
                                "type": "file",
                                "size": 51232,
                                "name": "image-connection-tool.png"
                              },
                              {
                                "path": "contributing/samples/jira_agent/tools.py",
                                "type": "file",
                                "size": 1222,
                                "name": "tools.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/langchain_structured_tool_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "langchain_structured_tool_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/langchain_structured_tool_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/langchain_structured_tool_agent/agent.py",
                                "type": "file",
                                "size": 1406,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/langchain_youtube_search_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "langchain_youtube_search_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/langchain_youtube_search_agent/README.md",
                                "type": "file",
                                "size": 190,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/langchain_youtube_search_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/langchain_youtube_search_agent/agent.py",
                                "type": "file",
                                "size": 1269,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/langchain_youtube_search_agent/requirements.txt",
                                "type": "file",
                                "size": 15,
                                "name": "requirements.txt"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/live_bidi_streaming_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "live_bidi_streaming_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/live_bidi_streaming_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/live_bidi_streaming_agent/agent.py",
                                "type": "file",
                                "size": 3971,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/live_bidi_streaming_agent/readme.md",
                                "type": "file",
                                "size": 1329,
                                "name": "readme.md"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/mcp_sse_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "mcp_sse_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/mcp_sse_agent/README.md",
                                "type": "file",
                                "size": 151,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/mcp_sse_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/mcp_sse_agent/agent.py",
                                "type": "file",
                                "size": 1858,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/mcp_sse_agent/filesystem_server.py",
                                "type": "file",
                                "size": 2464,
                                "name": "filesystem_server.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/mcp_stdio_notion_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "mcp_stdio_notion_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/mcp_stdio_notion_agent/README.md",
                                "type": "file",
                                "size": 592,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/mcp_stdio_notion_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/mcp_stdio_notion_agent/agent.py",
                                "type": "file",
                                "size": 1542,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/mcp_stdio_server_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "mcp_stdio_server_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/mcp_stdio_server_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/mcp_stdio_server_agent/agent.py",
                                "type": "file",
                                "size": 2123,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/mcp_streamablehttp_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "mcp_streamablehttp_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/mcp_streamablehttp_agent/README.md",
                                "type": "file",
                                "size": 162,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/mcp_streamablehttp_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/mcp_streamablehttp_agent/agent.py",
                                "type": "file",
                                "size": 1815,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/mcp_streamablehttp_agent/filesystem_server.py",
                                "type": "file",
                                "size": 2476,
                                "name": "filesystem_server.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/memory",
                            "type": "dir",
                            "size": 0,
                            "name": "memory",
                            "contents": [
                              {
                                "path": "contributing/samples/memory/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/memory/agent.py",
                                "type": "file",
                                "size": 1318,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/memory/main.py",
                                "type": "file",
                                "size": 3845,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/non_llm_sequential",
                            "type": "dir",
                            "size": 0,
                            "name": "non_llm_sequential",
                            "contents": [
                              {
                                "path": "contributing/samples/non_llm_sequential/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/non_llm_sequential/agent.py",
                                "type": "file",
                                "size": 1095,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/oauth_calendar_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "oauth_calendar_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/oauth_calendar_agent/README.md",
                                "type": "file",
                                "size": 1647,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/oauth_calendar_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/oauth_calendar_agent/agent.py",
                                "type": "file",
                                "size": 7808,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/quickstart",
                            "type": "dir",
                            "size": 0,
                            "name": "quickstart",
                            "contents": [
                              {
                                "path": "contributing/samples/quickstart/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/quickstart/agent.py",
                                "type": "file",
                                "size": 2306,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/rag_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "rag_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/rag_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/rag_agent/agent.py",
                                "type": "file",
                                "size": 1700,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/session_state_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "session_state_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/session_state_agent/README.md",
                                "type": "file",
                                "size": 3538,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/session_state_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/session_state_agent/agent.py",
                                "type": "file",
                                "size": 5612,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/session_state_agent/input.json",
                                "type": "file",
                                "size": 49,
                                "name": "input.json"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/simple_sequential_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "simple_sequential_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/simple_sequential_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/simple_sequential_agent/agent.py",
                                "type": "file",
                                "size": 3051,
                                "name": "agent.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/telemetry",
                            "type": "dir",
                            "size": 0,
                            "name": "telemetry",
                            "contents": [
                              {
                                "path": "contributing/samples/telemetry/agent.py",
                                "type": "file",
                                "size": 4105,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/telemetry/main.py",
                                "type": "file",
                                "size": 3673,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/token_usage",
                            "type": "dir",
                            "size": 0,
                            "name": "token_usage",
                            "contents": [
                              {
                                "path": "contributing/samples/token_usage/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/token_usage/agent.py",
                                "type": "file",
                                "size": 3311,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/token_usage/main.py",
                                "type": "file",
                                "size": 3360,
                                "name": "main.py"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/toolbox_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "toolbox_agent",
                            "contents": [
                              {
                                "path": "contributing/samples/toolbox_agent/README.md",
                                "type": "file",
                                "size": 2266,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/toolbox_agent/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/toolbox_agent/agent.py",
                                "type": "file",
                                "size": 958,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/toolbox_agent/tool_box.db",
                                "type": "file",
                                "size": 8192,
                                "name": "tool_box.db"
                              },
                              {
                                "path": "contributing/samples/toolbox_agent/tools.yaml",
                                "type": "file",
                                "size": 2773,
                                "name": "tools.yaml"
                              }
                            ]
                          },
                          {
                            "path": "contributing/samples/workflow_agent_seq",
                            "type": "dir",
                            "size": 0,
                            "name": "workflow_agent_seq",
                            "contents": [
                              {
                                "path": "contributing/samples/workflow_agent_seq/README.md",
                                "type": "file",
                                "size": 292,
                                "name": "README.md"
                              },
                              {
                                "path": "contributing/samples/workflow_agent_seq/__init__.py",
                                "type": "file",
                                "size": 595,
                                "name": "__init__.py"
                              },
                              {
                                "path": "contributing/samples/workflow_agent_seq/agent.py",
                                "type": "file",
                                "size": 4554,
                                "name": "agent.py"
                              },
                              {
                                "path": "contributing/samples/workflow_agent_seq/main.py",
                                "type": "file",
                                "size": 2753,
                                "name": "main.py"
                              },
                              {
                                "path": "contributing/samples/workflow_agent_seq/sample.output",
                                "type": "file",
                                "size": 3006,
                                "name": "sample.output"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "path": "contributing/README.md",
                        "type": "file",
                        "size": 439,
                        "name": "README.md"
                      }
                    ]
                  },
                  {
                    "path": "src",
                    "type": "dir",
                    "size": 0,
                    "name": "src",
                    "contents": [
                      {
                        "path": "src/google",
                        "type": "dir",
                        "size": 0,
                        "name": "google",
                        "contents": [
                          {
                            "path": "src/google/adk",
                            "type": "dir",
                            "size": 0,
                            "name": "adk",
                            "contents": [
                              {
                                "path": "src/google/adk/a2a",
                                "type": "dir",
                                "size": 0,
                                "name": "a2a",
                                "contents": [
                                  {
                                    "path": "src/google/adk/a2a/converters",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "converters",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/a2a/converters/__init__.py",
                                        "type": "file",
                                        "size": 574,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/a2a/converters/part_converter.py",
                                        "type": "file",
                                        "size": 5286,
                                        "name": "part_converter.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/a2a/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/agents",
                                "type": "dir",
                                "size": 0,
                                "name": "agents",
                                "contents": [
                                  {
                                    "path": "src/google/adk/agents/__init__.py",
                                    "type": "file",
                                    "size": 1041,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/active_streaming_tool.py",
                                    "type": "file",
                                    "size": 1194,
                                    "name": "active_streaming_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/base_agent.py",
                                    "type": "file",
                                    "size": 12168,
                                    "name": "base_agent.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/callback_context.py",
                                    "type": "file",
                                    "size": 3428,
                                    "name": "callback_context.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/invocation_context.py",
                                    "type": "file",
                                    "size": 6345,
                                    "name": "invocation_context.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/langgraph_agent.py",
                                    "type": "file",
                                    "size": 4287,
                                    "name": "langgraph_agent.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/live_request_queue.py",
                                    "type": "file",
                                    "size": 2109,
                                    "name": "live_request_queue.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/llm_agent.py",
                                    "type": "file",
                                    "size": 16660,
                                    "name": "llm_agent.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/loop_agent.py",
                                    "type": "file",
                                    "size": 1935,
                                    "name": "loop_agent.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/parallel_agent.py",
                                    "type": "file",
                                    "size": 3525,
                                    "name": "parallel_agent.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/readonly_context.py",
                                    "type": "file",
                                    "size": 1659,
                                    "name": "readonly_context.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/run_config.py",
                                    "type": "file",
                                    "size": 3629,
                                    "name": "run_config.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/sequential_agent.py",
                                    "type": "file",
                                    "size": 2725,
                                    "name": "sequential_agent.py"
                                  },
                                  {
                                    "path": "src/google/adk/agents/transcription_entry.py",
                                    "type": "file",
                                    "size": 1178,
                                    "name": "transcription_entry.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/artifacts",
                                "type": "dir",
                                "size": 0,
                                "name": "artifacts",
                                "contents": [
                                  {
                                    "path": "src/google/adk/artifacts/__init__.py",
                                    "type": "file",
                                    "size": 846,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/artifacts/base_artifact_service.py",
                                    "type": "file",
                                    "size": 3452,
                                    "name": "base_artifact_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/artifacts/gcs_artifact_service.py",
                                    "type": "file",
                                    "size": 5608,
                                    "name": "gcs_artifact_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/artifacts/in_memory_artifact_service.py",
                                    "type": "file",
                                    "size": 4059,
                                    "name": "in_memory_artifact_service.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/auth",
                                "type": "dir",
                                "size": 0,
                                "name": "auth",
                                "contents": [
                                  {
                                    "path": "src/google/adk/auth/credential_service",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "credential_service",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/auth/credential_service/__init__.py",
                                        "type": "file",
                                        "size": 574,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/credential_service/base_credential_service.py",
                                        "type": "file",
                                        "size": 2325,
                                        "name": "base_credential_service.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/credential_service/in_memory_credential_service.py",
                                        "type": "file",
                                        "size": 2161,
                                        "name": "in_memory_credential_service.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/auth/exchanger",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "exchanger",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/auth/exchanger/__init__.py",
                                        "type": "file",
                                        "size": 720,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/exchanger/base_credential_exchanger.py",
                                        "type": "file",
                                        "size": 1644,
                                        "name": "base_credential_exchanger.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/exchanger/credential_exchanger_registry.py",
                                        "type": "file",
                                        "size": 1855,
                                        "name": "credential_exchanger_registry.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/exchanger/oauth2_credential_exchanger.py",
                                        "type": "file",
                                        "size": 3649,
                                        "name": "oauth2_credential_exchanger.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/auth/refresher",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "refresher",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/auth/refresher/__init__.py",
                                        "type": "file",
                                        "size": 720,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/refresher/base_credential_refresher.py",
                                        "type": "file",
                                        "size": 2192,
                                        "name": "base_credential_refresher.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/refresher/credential_refresher_registry.py",
                                        "type": "file",
                                        "size": 1877,
                                        "name": "credential_refresher_registry.py"
                                      },
                                      {
                                        "path": "src/google/adk/auth/refresher/oauth2_credential_refresher.py",
                                        "type": "file",
                                        "size": 4035,
                                        "name": "oauth2_credential_refresher.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/auth/__init__.py",
                                    "type": "file",
                                    "size": 908,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/auth/auth_credential.py",
                                    "type": "file",
                                    "size": 7012,
                                    "name": "auth_credential.py"
                                  },
                                  {
                                    "path": "src/google/adk/auth/auth_handler.py",
                                    "type": "file",
                                    "size": 6828,
                                    "name": "auth_handler.py"
                                  },
                                  {
                                    "path": "src/google/adk/auth/auth_preprocessor.py",
                                    "type": "file",
                                    "size": 4309,
                                    "name": "auth_preprocessor.py"
                                  },
                                  {
                                    "path": "src/google/adk/auth/auth_schemes.py",
                                    "type": "file",
                                    "size": 2260,
                                    "name": "auth_schemes.py"
                                  },
                                  {
                                    "path": "src/google/adk/auth/auth_tool.py",
                                    "type": "file",
                                    "size": 3674,
                                    "name": "auth_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/auth/credential_manager.py",
                                    "type": "file",
                                    "size": 9503,
                                    "name": "credential_manager.py"
                                  },
                                  {
                                    "path": "src/google/adk/auth/oauth2_credential_util.py",
                                    "type": "file",
                                    "size": 3340,
                                    "name": "oauth2_credential_util.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/cli",
                                "type": "dir",
                                "size": 0,
                                "name": "cli",
                                "contents": [
                                  {
                                    "path": "src/google/adk/cli/browser",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "browser",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/cli/browser/assets",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "assets",
                                        "contents": [
                                          {
                                            "path": "src/google/adk/cli/browser/assets/config",
                                            "type": "dir",
                                            "size": 0,
                                            "name": "config",
                                            "contents": [
                                              {
                                                "path": "src/google/adk/cli/browser/assets/config/runtime-config.json",
                                                "type": "file",
                                                "size": 22,
                                                "name": "runtime-config.json"
                                              }
                                            ]
                                          },
                                          {
                                            "path": "src/google/adk/cli/browser/assets/ADK-512-color.svg",
                                            "type": "file",
                                            "size": 2402,
                                            "name": "ADK-512-color.svg"
                                          },
                                          {
                                            "path": "src/google/adk/cli/browser/assets/audio-processor.js",
                                            "type": "file",
                                            "size": 1769,
                                            "name": "audio-processor.js"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "src/google/adk/cli/browser/adk_favicon.svg",
                                        "type": "file",
                                        "size": 3132,
                                        "name": "adk_favicon.svg"
                                      },
                                      {
                                        "path": "src/google/adk/cli/browser/index.html",
                                        "type": "file",
                                        "size": 18492,
                                        "name": "index.html"
                                      },
                                      {
                                        "path": "src/google/adk/cli/browser/main-JAAWEV7F.js",
                                        "type": "file",
                                        "size": 2640561,
                                        "name": "main-JAAWEV7F.js"
                                      },
                                      {
                                        "path": "src/google/adk/cli/browser/polyfills-B6TNHZQ6.js",
                                        "type": "file",
                                        "size": 35174,
                                        "name": "polyfills-B6TNHZQ6.js"
                                      },
                                      {
                                        "path": "src/google/adk/cli/browser/styles-4VDSPQ37.css",
                                        "type": "file",
                                        "size": 5522,
                                        "name": "styles-4VDSPQ37.css"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/cli/utils",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "utils",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/cli/utils/__init__.py",
                                        "type": "file",
                                        "size": 1528,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/cli/utils/agent_loader.py",
                                        "type": "file",
                                        "size": 6130,
                                        "name": "agent_loader.py"
                                      },
                                      {
                                        "path": "src/google/adk/cli/utils/cleanup.py",
                                        "type": "file",
                                        "size": 1296,
                                        "name": "cleanup.py"
                                      },
                                      {
                                        "path": "src/google/adk/cli/utils/common.py",
                                        "type": "file",
                                        "size": 788,
                                        "name": "common.py"
                                      },
                                      {
                                        "path": "src/google/adk/cli/utils/envs.py",
                                        "type": "file",
                                        "size": 1684,
                                        "name": "envs.py"
                                      },
                                      {
                                        "path": "src/google/adk/cli/utils/evals.py",
                                        "type": "file",
                                        "size": 6600,
                                        "name": "evals.py"
                                      },
                                      {
                                        "path": "src/google/adk/cli/utils/logs.py",
                                        "type": "file",
                                        "size": 2296,
                                        "name": "logs.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/cli/__init__.py",
                                    "type": "file",
                                    "size": 609,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/__main__.py",
                                    "type": "file",
                                    "size": 646,
                                    "name": "__main__.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/agent_graph.py",
                                    "type": "file",
                                    "size": 9879,
                                    "name": "agent_graph.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/cli.py",
                                    "type": "file",
                                    "size": 6724,
                                    "name": "cli.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/cli_create.py",
                                    "type": "file",
                                    "size": 8010,
                                    "name": "cli_create.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/cli_deploy.py",
                                    "type": "file",
                                    "size": 12990,
                                    "name": "cli_deploy.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/cli_eval.py",
                                    "type": "file",
                                    "size": 10208,
                                    "name": "cli_eval.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/cli_tools_click.py",
                                    "type": "file",
                                    "size": 27814,
                                    "name": "cli_tools_click.py"
                                  },
                                  {
                                    "path": "src/google/adk/cli/fast_api.py",
                                    "type": "file",
                                    "size": 31867,
                                    "name": "fast_api.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/code_executors",
                                "type": "dir",
                                "size": 0,
                                "name": "code_executors",
                                "contents": [
                                  {
                                    "path": "src/google/adk/code_executors/__init__.py",
                                    "type": "file",
                                    "size": 1641,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/code_executors/base_code_executor.py",
                                    "type": "file",
                                    "size": 3030,
                                    "name": "base_code_executor.py"
                                  },
                                  {
                                    "path": "src/google/adk/code_executors/built_in_code_executor.py",
                                    "type": "file",
                                    "size": 1895,
                                    "name": "built_in_code_executor.py"
                                  },
                                  {
                                    "path": "src/google/adk/code_executors/code_execution_utils.py",
                                    "type": "file",
                                    "size": 7372,
                                    "name": "code_execution_utils.py"
                                  },
                                  {
                                    "path": "src/google/adk/code_executors/code_executor_context.py",
                                    "type": "file",
                                    "size": 6732,
                                    "name": "code_executor_context.py"
                                  },
                                  {
                                    "path": "src/google/adk/code_executors/container_code_executor.py",
                                    "type": "file",
                                    "size": 6560,
                                    "name": "container_code_executor.py"
                                  },
                                  {
                                    "path": "src/google/adk/code_executors/unsafe_local_code_executor.py",
                                    "type": "file",
                                    "size": 2763,
                                    "name": "unsafe_local_code_executor.py"
                                  },
                                  {
                                    "path": "src/google/adk/code_executors/vertex_ai_code_executor.py",
                                    "type": "file",
                                    "size": 7202,
                                    "name": "vertex_ai_code_executor.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/errors",
                                "type": "dir",
                                "size": 0,
                                "name": "errors",
                                "contents": [
                                  {
                                    "path": "src/google/adk/errors/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/errors/not_found_error.py",
                                    "type": "file",
                                    "size": 983,
                                    "name": "not_found_error.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/evaluation",
                                "type": "dir",
                                "size": 0,
                                "name": "evaluation",
                                "contents": [
                                  {
                                    "path": "src/google/adk/evaluation/__init__.py",
                                    "type": "file",
                                    "size": 1020,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/_eval_set_results_manager_utils.py",
                                    "type": "file",
                                    "size": 1497,
                                    "name": "_eval_set_results_manager_utils.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/_eval_sets_manager_utils.py",
                                    "type": "file",
                                    "size": 3417,
                                    "name": "_eval_sets_manager_utils.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/agent_evaluator.py",
                                    "type": "file",
                                    "size": 13014,
                                    "name": "agent_evaluator.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/eval_case.py",
                                    "type": "file",
                                    "size": 3201,
                                    "name": "eval_case.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/eval_metrics.py",
                                    "type": "file",
                                    "size": 1975,
                                    "name": "eval_metrics.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/eval_result.py",
                                    "type": "file",
                                    "size": 2766,
                                    "name": "eval_result.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/eval_set.py",
                                    "type": "file",
                                    "size": 1143,
                                    "name": "eval_set.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/eval_set_results_manager.py",
                                    "type": "file",
                                    "size": 1610,
                                    "name": "eval_set_results_manager.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/eval_sets_manager.py",
                                    "type": "file",
                                    "size": 2380,
                                    "name": "eval_sets_manager.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/evaluation_constants.py",
                                    "type": "file",
                                    "size": 857,
                                    "name": "evaluation_constants.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/evaluation_generator.py",
                                    "type": "file",
                                    "size": 8188,
                                    "name": "evaluation_generator.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/evaluator.py",
                                    "type": "file",
                                    "size": 1673,
                                    "name": "evaluator.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/gcs_eval_set_results_manager.py",
                                    "type": "file",
                                    "size": 4444,
                                    "name": "gcs_eval_set_results_manager.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/gcs_eval_sets_manager.py",
                                    "type": "file",
                                    "size": 7431,
                                    "name": "gcs_eval_sets_manager.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/local_eval_set_results_manager.py",
                                    "type": "file",
                                    "size": 3703,
                                    "name": "local_eval_set_results_manager.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/local_eval_sets_manager.py",
                                    "type": "file",
                                    "size": 10414,
                                    "name": "local_eval_sets_manager.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/response_evaluator.py",
                                    "type": "file",
                                    "size": 8398,
                                    "name": "response_evaluator.py"
                                  },
                                  {
                                    "path": "src/google/adk/evaluation/trajectory_evaluator.py",
                                    "type": "file",
                                    "size": 8235,
                                    "name": "trajectory_evaluator.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/events",
                                "type": "dir",
                                "size": 0,
                                "name": "events",
                                "contents": [
                                  {
                                    "path": "src/google/adk/events/__init__.py",
                                    "type": "file",
                                    "size": 688,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/events/event.py",
                                    "type": "file",
                                    "size": 4719,
                                    "name": "event.py"
                                  },
                                  {
                                    "path": "src/google/adk/events/event_actions.py",
                                    "type": "file",
                                    "size": 2275,
                                    "name": "event_actions.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/examples",
                                "type": "dir",
                                "size": 0,
                                "name": "examples",
                                "contents": [
                                  {
                                    "path": "src/google/adk/examples/__init__.py",
                                    "type": "file",
                                    "size": 851,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/examples/base_example_provider.py",
                                    "type": "file",
                                    "size": 1074,
                                    "name": "base_example_provider.py"
                                  },
                                  {
                                    "path": "src/google/adk/examples/example.py",
                                    "type": "file",
                                    "size": 868,
                                    "name": "example.py"
                                  },
                                  {
                                    "path": "src/google/adk/examples/example_util.py",
                                    "type": "file",
                                    "size": 4271,
                                    "name": "example_util.py"
                                  },
                                  {
                                    "path": "src/google/adk/examples/vertex_ai_example_store.py",
                                    "type": "file",
                                    "size": 3632,
                                    "name": "vertex_ai_example_store.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/flows",
                                "type": "dir",
                                "size": 0,
                                "name": "flows",
                                "contents": [
                                  {
                                    "path": "src/google/adk/flows/llm_flows",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "llm_flows",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/flows/llm_flows/__init__.py",
                                        "type": "file",
                                        "size": 729,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/_base_llm_processor.py",
                                        "type": "file",
                                        "size": 1770,
                                        "name": "_base_llm_processor.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/_code_execution.py",
                                        "type": "file",
                                        "size": 15093,
                                        "name": "_code_execution.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/_nl_planning.py",
                                        "type": "file",
                                        "size": 4078,
                                        "name": "_nl_planning.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/agent_transfer.py",
                                        "type": "file",
                                        "size": 3888,
                                        "name": "agent_transfer.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/audio_transcriber.py",
                                        "type": "file",
                                        "size": 3541,
                                        "name": "audio_transcriber.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/auto_flow.py",
                                        "type": "file",
                                        "size": 1714,
                                        "name": "auto_flow.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/base_llm_flow.py",
                                        "type": "file",
                                        "size": 22660,
                                        "name": "base_llm_flow.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/basic.py",
                                        "type": "file",
                                        "size": 2848,
                                        "name": "basic.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/contents.py",
                                        "type": "file",
                                        "size": 13055,
                                        "name": "contents.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/functions.py",
                                        "type": "file",
                                        "size": 17512,
                                        "name": "functions.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/identity.py",
                                        "type": "file",
                                        "size": 1651,
                                        "name": "identity.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/instructions.py",
                                        "type": "file",
                                        "size": 2879,
                                        "name": "instructions.py"
                                      },
                                      {
                                        "path": "src/google/adk/flows/llm_flows/single_flow.py",
                                        "type": "file",
                                        "size": 1904,
                                        "name": "single_flow.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/flows/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/memory",
                                "type": "dir",
                                "size": 0,
                                "name": "memory",
                                "contents": [
                                  {
                                    "path": "src/google/adk/memory/__init__.py",
                                    "type": "file",
                                    "size": 1148,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/memory/_utils.py",
                                    "type": "file",
                                    "size": 797,
                                    "name": "_utils.py"
                                  },
                                  {
                                    "path": "src/google/adk/memory/base_memory_service.py",
                                    "type": "file",
                                    "size": 1987,
                                    "name": "base_memory_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/memory/in_memory_memory_service.py",
                                    "type": "file",
                                    "size": 3024,
                                    "name": "in_memory_memory_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/memory/memory_entry.py",
                                    "type": "file",
                                    "size": 1092,
                                    "name": "memory_entry.py"
                                  },
                                  {
                                    "path": "src/google/adk/memory/vertex_ai_rag_memory_service.py",
                                    "type": "file",
                                    "size": 6817,
                                    "name": "vertex_ai_rag_memory_service.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/models",
                                "type": "dir",
                                "size": 0,
                                "name": "models",
                                "contents": [
                                  {
                                    "path": "src/google/adk/models/__init__.py",
                                    "type": "file",
                                    "size": 929,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/anthropic_llm.py",
                                    "type": "file",
                                    "size": 8135,
                                    "name": "anthropic_llm.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/base_llm.py",
                                    "type": "file",
                                    "size": 4017,
                                    "name": "base_llm.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/base_llm_connection.py",
                                    "type": "file",
                                    "size": 2254,
                                    "name": "base_llm_connection.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/gemini_llm_connection.py",
                                    "type": "file",
                                    "size": 7349,
                                    "name": "gemini_llm_connection.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/google_llm.py",
                                    "type": "file",
                                    "size": 11926,
                                    "name": "google_llm.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/lite_llm.py",
                                    "type": "file",
                                    "size": 23181,
                                    "name": "lite_llm.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/llm_request.py",
                                    "type": "file",
                                    "size": 3008,
                                    "name": "llm_request.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/llm_response.py",
                                    "type": "file",
                                    "size": 4563,
                                    "name": "llm_response.py"
                                  },
                                  {
                                    "path": "src/google/adk/models/registry.py",
                                    "type": "file",
                                    "size": 2542,
                                    "name": "registry.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/planners",
                                "type": "dir",
                                "size": 0,
                                "name": "planners",
                                "contents": [
                                  {
                                    "path": "src/google/adk/planners/__init__.py",
                                    "type": "file",
                                    "size": 788,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/planners/base_planner.py",
                                    "type": "file",
                                    "size": 1961,
                                    "name": "base_planner.py"
                                  },
                                  {
                                    "path": "src/google/adk/planners/built_in_planner.py",
                                    "type": "file",
                                    "size": 2450,
                                    "name": "built_in_planner.py"
                                  },
                                  {
                                    "path": "src/google/adk/planners/plan_re_act_planner.py",
                                    "type": "file",
                                    "size": 8478,
                                    "name": "plan_re_act_planner.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/platform",
                                "type": "dir",
                                "size": 0,
                                "name": "platform",
                                "contents": [
                                  {
                                    "path": "src/google/adk/platform/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/platform/thread.py",
                                    "type": "file",
                                    "size": 1028,
                                    "name": "thread.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/sessions",
                                "type": "dir",
                                "size": 0,
                                "name": "sessions",
                                "contents": [
                                  {
                                    "path": "src/google/adk/sessions/__init__.py",
                                    "type": "file",
                                    "size": 1264,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/sessions/_session_util.py",
                                    "type": "file",
                                    "size": 1271,
                                    "name": "_session_util.py"
                                  },
                                  {
                                    "path": "src/google/adk/sessions/base_session_service.py",
                                    "type": "file",
                                    "size": 3045,
                                    "name": "base_session_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/sessions/database_session_service.py",
                                    "type": "file",
                                    "size": 19992,
                                    "name": "database_session_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/sessions/in_memory_session_service.py",
                                    "type": "file",
                                    "size": 9080,
                                    "name": "in_memory_session_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/sessions/session.py",
                                    "type": "file",
                                    "size": 1861,
                                    "name": "session.py"
                                  },
                                  {
                                    "path": "src/google/adk/sessions/state.py",
                                    "type": "file",
                                    "size": 2299,
                                    "name": "state.py"
                                  },
                                  {
                                    "path": "src/google/adk/sessions/vertex_ai_session_service.py",
                                    "type": "file",
                                    "size": 12870,
                                    "name": "vertex_ai_session_service.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/tools",
                                "type": "dir",
                                "size": 0,
                                "name": "tools",
                                "contents": [
                                  {
                                    "path": "src/google/adk/tools/apihub_tool",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "apihub_tool",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/tools/apihub_tool/clients",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "clients",
                                        "contents": [
                                          {
                                            "path": "src/google/adk/tools/apihub_tool/clients/__init__.py",
                                            "type": "file",
                                            "size": 574,
                                            "name": "__init__.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/apihub_tool/clients/apihub_client.py",
                                            "type": "file",
                                            "size": 11376,
                                            "name": "apihub_client.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/apihub_tool/clients/secret_client.py",
                                            "type": "file",
                                            "size": 4127,
                                            "name": "secret_client.py"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "src/google/adk/tools/apihub_tool/__init__.py",
                                        "type": "file",
                                        "size": 653,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/apihub_tool/apihub_toolset.py",
                                        "type": "file",
                                        "size": 7034,
                                        "name": "apihub_toolset.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/tools/application_integration_tool",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "application_integration_tool",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/tools/application_integration_tool/clients",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "clients",
                                        "contents": [
                                          {
                                            "path": "src/google/adk/tools/application_integration_tool/clients/connections_client.py",
                                            "type": "file",
                                            "size": 31428,
                                            "name": "connections_client.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/application_integration_tool/clients/integration_client.py",
                                            "type": "file",
                                            "size": 10654,
                                            "name": "integration_client.py"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "src/google/adk/tools/application_integration_tool/__init__.py",
                                        "type": "file",
                                        "size": 799,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/application_integration_tool/application_integration_toolset.py",
                                        "type": "file",
                                        "size": 10371,
                                        "name": "application_integration_toolset.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/application_integration_tool/integration_connector_tool.py",
                                        "type": "file",
                                        "size": 7569,
                                        "name": "integration_connector_tool.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/tools/bigquery",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "bigquery",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/tools/bigquery/__init__.py",
                                        "type": "file",
                                        "size": 1446,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/bigquery/bigquery_credentials.py",
                                        "type": "file",
                                        "size": 8690,
                                        "name": "bigquery_credentials.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/bigquery/bigquery_tool.py",
                                        "type": "file",
                                        "size": 4208,
                                        "name": "bigquery_tool.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/bigquery/bigquery_toolset.py",
                                        "type": "file",
                                        "size": 2831,
                                        "name": "bigquery_toolset.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/bigquery/client.py",
                                        "type": "file",
                                        "size": 1166,
                                        "name": "client.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/bigquery/config.py",
                                        "type": "file",
                                        "size": 1390,
                                        "name": "config.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/bigquery/metadata_tool.py",
                                        "type": "file",
                                        "size": 8263,
                                        "name": "metadata_tool.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/bigquery/query_tool.py",
                                        "type": "file",
                                        "size": 6156,
                                        "name": "query_tool.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/tools/google_api_tool",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "google_api_tool",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/tools/google_api_tool/__init__.py",
                                        "type": "file",
                                        "size": 1385,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/google_api_tool/google_api_tool.py",
                                        "type": "file",
                                        "size": 2029,
                                        "name": "google_api_tool.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/google_api_tool/google_api_toolset.py",
                                        "type": "file",
                                        "size": 3773,
                                        "name": "google_api_toolset.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/google_api_tool/google_api_toolsets.py",
                                        "type": "file",
                                        "size": 3551,
                                        "name": "google_api_toolsets.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/google_api_tool/googleapi_to_openapi_converter.py",
                                        "type": "file",
                                        "size": 16377,
                                        "name": "googleapi_to_openapi_converter.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/tools/mcp_tool",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "mcp_tool",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/tools/mcp_tool/__init__.py",
                                        "type": "file",
                                        "size": 1515,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/mcp_tool/conversion_utils.py",
                                        "type": "file",
                                        "size": 5339,
                                        "name": "conversion_utils.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/mcp_tool/mcp_session_manager.py",
                                        "type": "file",
                                        "size": 12946,
                                        "name": "mcp_session_manager.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/mcp_tool/mcp_tool.py",
                                        "type": "file",
                                        "size": 6081,
                                        "name": "mcp_tool.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/mcp_tool/mcp_toolset.py",
                                        "type": "file",
                                        "size": 6323,
                                        "name": "mcp_toolset.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/tools/openapi_tool",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "openapi_tool",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/tools/openapi_tool/auth",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "auth",
                                        "contents": [
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/auth/credential_exchangers",
                                            "type": "dir",
                                            "size": 0,
                                            "name": "credential_exchangers",
                                            "contents": [
                                              {
                                                "path": "src/google/adk/tools/openapi_tool/auth/credential_exchangers/__init__.py",
                                                "type": "file",
                                                "size": 1002,
                                                "name": "__init__.py"
                                              },
                                              {
                                                "path": "src/google/adk/tools/openapi_tool/auth/credential_exchangers/auto_auth_credential_exchanger.py",
                                                "type": "file",
                                                "size": 3398,
                                                "name": "auto_auth_credential_exchanger.py"
                                              },
                                              {
                                                "path": "src/google/adk/tools/openapi_tool/auth/credential_exchangers/base_credential_exchanger.py",
                                                "type": "file",
                                                "size": 1781,
                                                "name": "base_credential_exchanger.py"
                                              },
                                              {
                                                "path": "src/google/adk/tools/openapi_tool/auth/credential_exchangers/oauth2_exchanger.py",
                                                "type": "file",
                                                "size": 3869,
                                                "name": "oauth2_exchanger.py"
                                              },
                                              {
                                                "path": "src/google/adk/tools/openapi_tool/auth/credential_exchangers/service_account_exchanger.py",
                                                "type": "file",
                                                "size": 3463,
                                                "name": "service_account_exchanger.py"
                                              }
                                            ]
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/auth/__init__.py",
                                            "type": "file",
                                            "size": 637,
                                            "name": "__init__.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/auth/auth_helpers.py",
                                            "type": "file",
                                            "size": 15901,
                                            "name": "auth_helpers.py"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "src/google/adk/tools/openapi_tool/common",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "common",
                                        "contents": [
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/common/__init__.py",
                                            "type": "file",
                                            "size": 625,
                                            "name": "__init__.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/common/common.py",
                                            "type": "file",
                                            "size": 7915,
                                            "name": "common.py"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "src/google/adk/tools/openapi_tool/openapi_spec_parser",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "openapi_spec_parser",
                                        "contents": [
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/openapi_spec_parser/__init__.py",
                                            "type": "file",
                                            "size": 1229,
                                            "name": "__init__.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/openapi_spec_parser/openapi_spec_parser.py",
                                            "type": "file",
                                            "size": 7926,
                                            "name": "openapi_spec_parser.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/openapi_spec_parser/openapi_toolset.py",
                                            "type": "file",
                                            "size": 5532,
                                            "name": "openapi_toolset.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/openapi_spec_parser/operation_parser.py",
                                            "type": "file",
                                            "size": 9078,
                                            "name": "operation_parser.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/openapi_spec_parser/rest_api_tool.py",
                                            "type": "file",
                                            "size": 14650,
                                            "name": "rest_api_tool.py"
                                          },
                                          {
                                            "path": "src/google/adk/tools/openapi_tool/openapi_spec_parser/tool_auth_handler.py",
                                            "type": "file",
                                            "size": 10013,
                                            "name": "tool_auth_handler.py"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "src/google/adk/tools/openapi_tool/__init__.py",
                                        "type": "file",
                                        "size": 724,
                                        "name": "__init__.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/tools/retrieval",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "retrieval",
                                    "contents": [
                                      {
                                        "path": "src/google/adk/tools/retrieval/__init__.py",
                                        "type": "file",
                                        "size": 1188,
                                        "name": "__init__.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/retrieval/base_retrieval_tool.py",
                                        "type": "file",
                                        "size": 1174,
                                        "name": "base_retrieval_tool.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/retrieval/files_retrieval.py",
                                        "type": "file",
                                        "size": 1271,
                                        "name": "files_retrieval.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/retrieval/llama_index_retrieval.py",
                                        "type": "file",
                                        "size": 1304,
                                        "name": "llama_index_retrieval.py"
                                      },
                                      {
                                        "path": "src/google/adk/tools/retrieval/vertex_ai_rag_retrieval.py",
                                        "type": "file",
                                        "size": 3356,
                                        "name": "vertex_ai_rag_retrieval.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/google/adk/tools/__init__.py",
                                    "type": "file",
                                    "size": 1752,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/_automatic_function_calling_util.py",
                                    "type": "file",
                                    "size": 11100,
                                    "name": "_automatic_function_calling_util.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/_forwarding_artifact_service.py",
                                    "type": "file",
                                    "size": 3022,
                                    "name": "_forwarding_artifact_service.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/_function_parameter_parse_util.py",
                                    "type": "file",
                                    "size": 11120,
                                    "name": "_function_parameter_parse_util.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/_gemini_schema_util.py",
                                    "type": "file",
                                    "size": 5321,
                                    "name": "_gemini_schema_util.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/_memory_entry_utils.py",
                                    "type": "file",
                                    "size": 967,
                                    "name": "_memory_entry_utils.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/agent_tool.py",
                                    "type": "file",
                                    "size": 4719,
                                    "name": "agent_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/authenticated_function_tool.py",
                                    "type": "file",
                                    "size": 3806,
                                    "name": "authenticated_function_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/base_authenticated_tool.py",
                                    "type": "file",
                                    "size": 3551,
                                    "name": "base_authenticated_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/base_tool.py",
                                    "type": "file",
                                    "size": 4397,
                                    "name": "base_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/base_toolset.py",
                                    "type": "file",
                                    "size": 2976,
                                    "name": "base_toolset.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/crewai_tool.py",
                                    "type": "file",
                                    "size": 2293,
                                    "name": "crewai_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/enterprise_search_tool.py",
                                    "type": "file",
                                    "size": 2192,
                                    "name": "enterprise_search_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/example_tool.py",
                                    "type": "file",
                                    "size": 1947,
                                    "name": "example_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/exit_loop_tool.py",
                                    "type": "file",
                                    "size": 784,
                                    "name": "exit_loop_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/function_tool.py",
                                    "type": "file",
                                    "size": 5671,
                                    "name": "function_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/get_user_choice_tool.py",
                                    "type": "file",
                                    "size": 994,
                                    "name": "get_user_choice_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/google_search_tool.py",
                                    "type": "file",
                                    "size": 2224,
                                    "name": "google_search_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/langchain_tool.py",
                                    "type": "file",
                                    "size": 4813,
                                    "name": "langchain_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/load_artifacts_tool.py",
                                    "type": "file",
                                    "size": 3733,
                                    "name": "load_artifacts_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/load_memory_tool.py",
                                    "type": "file",
                                    "size": 2611,
                                    "name": "load_memory_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/load_web_page.py",
                                    "type": "file",
                                    "size": 1263,
                                    "name": "load_web_page.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/long_running_tool.py",
                                    "type": "file",
                                    "size": 1309,
                                    "name": "long_running_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/preload_memory_tool.py",
                                    "type": "file",
                                    "size": 2440,
                                    "name": "preload_memory_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/tool_context.py",
                                    "type": "file",
                                    "size": 3618,
                                    "name": "tool_context.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/toolbox_toolset.py",
                                    "type": "file",
                                    "size": 3634,
                                    "name": "toolbox_toolset.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/transfer_to_agent_tool.py",
                                    "type": "file",
                                    "size": 985,
                                    "name": "transfer_to_agent_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/url_context_tool.py",
                                    "type": "file",
                                    "size": 2049,
                                    "name": "url_context_tool.py"
                                  },
                                  {
                                    "path": "src/google/adk/tools/vertex_ai_search_tool.py",
                                    "type": "file",
                                    "size": 4030,
                                    "name": "vertex_ai_search_tool.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/utils",
                                "type": "dir",
                                "size": 0,
                                "name": "utils",
                                "contents": [
                                  {
                                    "path": "src/google/adk/utils/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "src/google/adk/utils/feature_decorator.py",
                                    "type": "file",
                                    "size": 5048,
                                    "name": "feature_decorator.py"
                                  },
                                  {
                                    "path": "src/google/adk/utils/instructions_utils.py",
                                    "type": "file",
                                    "size": 3996,
                                    "name": "instructions_utils.py"
                                  },
                                  {
                                    "path": "src/google/adk/utils/variant_utils.py",
                                    "type": "file",
                                    "size": 1463,
                                    "name": "variant_utils.py"
                                  }
                                ]
                              },
                              {
                                "path": "src/google/adk/__init__.py",
                                "type": "file",
                                "size": 726,
                                "name": "__init__.py"
                              },
                              {
                                "path": "src/google/adk/py.typed",
                                "type": "file",
                                "size": 0,
                                "name": "py.typed"
                              },
                              {
                                "path": "src/google/adk/runners.py",
                                "type": "file",
                                "size": 18558,
                                "name": "runners.py"
                              },
                              {
                                "path": "src/google/adk/telemetry.py",
                                "type": "file",
                                "size": 8641,
                                "name": "telemetry.py"
                              },
                              {
                                "path": "src/google/adk/version.py",
                                "type": "file",
                                "size": 626,
                                "name": "version.py"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "path": "tests",
                    "type": "dir",
                    "size": 0,
                    "name": "tests",
                    "contents": [
                      {
                        "path": "tests/integration",
                        "type": "dir",
                        "size": 0,
                        "name": "integration",
                        "contents": [
                          {
                            "path": "tests/integration/fixture",
                            "type": "dir",
                            "size": 0,
                            "name": "fixture",
                            "contents": [
                              {
                                "path": "tests/integration/fixture/agent_with_config",
                                "type": "dir",
                                "size": 0,
                                "name": "agent_with_config",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/agent_with_config/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/agent_with_config/agent.py",
                                    "type": "file",
                                    "size": 2417,
                                    "name": "agent.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/callback_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "callback_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/callback_agent/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/callback_agent/agent.py",
                                    "type": "file",
                                    "size": 2979,
                                    "name": "agent.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/context_update_test",
                                "type": "dir",
                                "size": 0,
                                "name": "context_update_test",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/context_update_test/OWNERS",
                                    "type": "file",
                                    "size": 6,
                                    "name": "OWNERS"
                                  },
                                  {
                                    "path": "tests/integration/fixture/context_update_test/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/context_update_test/agent.py",
                                    "type": "file",
                                    "size": 1351,
                                    "name": "agent.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/context_update_test/successful_test.session.json",
                                    "type": "file",
                                    "size": 16397,
                                    "name": "successful_test.session.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/context_variable_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "context_variable_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/context_variable_agent/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/context_variable_agent/agent.py",
                                    "type": "file",
                                    "size": 3530,
                                    "name": "agent.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/ecommerce_customer_service_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "ecommerce_customer_service_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/agent.py",
                                    "type": "file",
                                    "size": 10464,
                                    "name": "agent.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/order_query.test.json",
                                    "type": "file",
                                    "size": 7187,
                                    "name": "order_query.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/test_config.json",
                                    "type": "file",
                                    "size": 94,
                                    "name": "test_config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/flow_complex_spark",
                                "type": "dir",
                                "size": 0,
                                "name": "flow_complex_spark",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/flow_complex_spark/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/flow_complex_spark/agent.py",
                                    "type": "file",
                                    "size": 6364,
                                    "name": "agent.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/flow_complex_spark/sample.session.json",
                                    "type": "file",
                                    "size": 20759,
                                    "name": "sample.session.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/hello_world_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "hello_world_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/hello_world_agent/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/hello_world_agent/agent.py",
                                    "type": "file",
                                    "size": 3758,
                                    "name": "agent.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/hello_world_agent/roll_die.test.json",
                                    "type": "file",
                                    "size": 4636,
                                    "name": "roll_die.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/hello_world_agent/test_config.json",
                                    "type": "file",
                                    "size": 94,
                                    "name": "test_config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/home_automation_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "home_automation_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/test_files",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "test_files",
                                    "contents": [
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/memorizing_past_events",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "memorizing_past_events",
                                        "contents": [
                                          {
                                            "path": "tests/integration/fixture/home_automation_agent/test_files/memorizing_past_events/eval_data.test.json",
                                            "type": "file",
                                            "size": 3332,
                                            "name": "eval_data.test.json"
                                          },
                                          {
                                            "path": "tests/integration/fixture/home_automation_agent/test_files/memorizing_past_events/test_config.json",
                                            "type": "file",
                                            "size": 94,
                                            "name": "test_config.json"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/dependent_tool_calls.test.json",
                                        "type": "file",
                                        "size": 3485,
                                        "name": "dependent_tool_calls.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/simple_multi_turn_conversation.test.json",
                                        "type": "file",
                                        "size": 3569,
                                        "name": "simple_multi_turn_conversation.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/simple_test.test.json",
                                        "type": "file",
                                        "size": 3312,
                                        "name": "simple_test.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/simple_test2.test.json",
                                        "type": "file",
                                        "size": 1985,
                                        "name": "simple_test2.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/test_config.json",
                                        "type": "file",
                                        "size": 61,
                                        "name": "test_config.json"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/agent.py",
                                    "type": "file",
                                    "size": 9880,
                                    "name": "agent.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/simple_test.test.json",
                                    "type": "file",
                                    "size": 1976,
                                    "name": "simple_test.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/simple_test2.test.json",
                                    "type": "file",
                                    "size": 250,
                                    "name": "simple_test2.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/test_config.json",
                                    "type": "file",
                                    "size": 61,
                                    "name": "test_config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/tool_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "tool_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/tool_agent/files",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "files",
                                    "contents": [
                                      {
                                        "path": "tests/integration/fixture/tool_agent/files/Agent_test_plan.pdf",
                                        "type": "file",
                                        "size": 55397,
                                        "name": "Agent_test_plan.pdf"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/integration/fixture/tool_agent/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/tool_agent/agent.py",
                                    "type": "file",
                                    "size": 6027,
                                    "name": "agent.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/trip_planner_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "trip_planner_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/test_files",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "test_files",
                                    "contents": [
                                      {
                                        "path": "tests/integration/fixture/trip_planner_agent/test_files/test_config.json",
                                        "type": "file",
                                        "size": 56,
                                        "name": "test_config.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/trip_planner_agent/test_files/trip_inquiry_sub_agent.test.json",
                                        "type": "file",
                                        "size": 2369,
                                        "name": "trip_inquiry_sub_agent.test.json"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/__init__.py",
                                    "type": "file",
                                    "size": 595,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/agent.py",
                                    "type": "file",
                                    "size": 3902,
                                    "name": "agent.py"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/initial.session.json",
                                    "type": "file",
                                    "size": 278,
                                    "name": "initial.session.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/test_config.json",
                                    "type": "file",
                                    "size": 56,
                                    "name": "test_config.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/trip_inquiry.test.json",
                                    "type": "file",
                                    "size": 988,
                                    "name": "trip_inquiry.test.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/integration/models",
                            "type": "dir",
                            "size": 0,
                            "name": "models",
                            "contents": [
                              {
                                "path": "tests/integration/models/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/integration/models/test_google_llm.py",
                                "type": "file",
                                "size": 2055,
                                "name": "test_google_llm.py"
                              },
                              {
                                "path": "tests/integration/models/test_litellm_no_function.py",
                                "type": "file",
                                "size": 5060,
                                "name": "test_litellm_no_function.py"
                              },
                              {
                                "path": "tests/integration/models/test_litellm_with_function.py",
                                "type": "file",
                                "size": 3323,
                                "name": "test_litellm_with_function.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/integration/tools",
                            "type": "dir",
                            "size": 0,
                            "name": "tools",
                            "contents": [
                              {
                                "path": "tests/integration/tools/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/integration/utils",
                            "type": "dir",
                            "size": 0,
                            "name": "utils",
                            "contents": [
                              {
                                "path": "tests/integration/utils/__init__.py",
                                "type": "file",
                                "size": 634,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/integration/utils/asserts.py",
                                "type": "file",
                                "size": 2385,
                                "name": "asserts.py"
                              },
                              {
                                "path": "tests/integration/utils/test_runner.py",
                                "type": "file",
                                "size": 3153,
                                "name": "test_runner.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/integration/.env.example",
                            "type": "file",
                            "size": 311,
                            "name": ".env.example"
                          },
                          {
                            "path": "tests/integration/__init__.py",
                            "type": "file",
                            "size": 704,
                            "name": "__init__.py"
                          },
                          {
                            "path": "tests/integration/conftest.py",
                            "type": "file",
                            "size": 3822,
                            "name": "conftest.py"
                          },
                          {
                            "path": "tests/integration/test_callback.py",
                            "type": "file",
                            "size": 2131,
                            "name": "test_callback.py"
                          },
                          {
                            "path": "tests/integration/test_context_variable.py",
                            "type": "file",
                            "size": 2044,
                            "name": "test_context_variable.py"
                          },
                          {
                            "path": "tests/integration/test_evalute_agent_in_fixture.py",
                            "type": "file",
                            "size": 2435,
                            "name": "test_evalute_agent_in_fixture.py"
                          },
                          {
                            "path": "tests/integration/test_multi_agent.py",
                            "type": "file",
                            "size": 939,
                            "name": "test_multi_agent.py"
                          },
                          {
                            "path": "tests/integration/test_multi_turn.py",
                            "type": "file",
                            "size": 1782,
                            "name": "test_multi_turn.py"
                          },
                          {
                            "path": "tests/integration/test_single_agent.py",
                            "type": "file",
                            "size": 924,
                            "name": "test_single_agent.py"
                          },
                          {
                            "path": "tests/integration/test_sub_agent.py",
                            "type": "file",
                            "size": 1029,
                            "name": "test_sub_agent.py"
                          },
                          {
                            "path": "tests/integration/test_system_instruction.py",
                            "type": "file",
                            "size": 7223,
                            "name": "test_system_instruction.py"
                          },
                          {
                            "path": "tests/integration/test_tools.py",
                            "type": "file",
                            "size": 6901,
                            "name": "test_tools.py"
                          },
                          {
                            "path": "tests/integration/test_with_test_file.py",
                            "type": "file",
                            "size": 1367,
                            "name": "test_with_test_file.py"
                          }
                        ]
                      },
                      {
                        "path": "tests/unittests",
                        "type": "dir",
                        "size": 0,
                        "name": "unittests",
                        "contents": [
                          {
                            "path": "tests/unittests/a2a",
                            "type": "dir",
                            "size": 0,
                            "name": "a2a",
                            "contents": [
                              {
                                "path": "tests/unittests/a2a/converters",
                                "type": "dir",
                                "size": 0,
                                "name": "converters",
                                "contents": [
                                  {
                                    "path": "tests/unittests/a2a/converters/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/a2a/converters/test_part_converter.py",
                                    "type": "file",
                                    "size": 14311,
                                    "name": "test_part_converter.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/a2a/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/agents",
                            "type": "dir",
                            "size": 0,
                            "name": "agents",
                            "contents": [
                              {
                                "path": "tests/unittests/agents/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_base_agent.py",
                                "type": "file",
                                "size": 23067,
                                "name": "test_base_agent.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_langgraph_agent.py",
                                "type": "file",
                                "size": 6696,
                                "name": "test_langgraph_agent.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_live_request_queue.py",
                                "type": "file",
                                "size": 1569,
                                "name": "test_live_request_queue.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_llm_agent_callbacks.py",
                                "type": "file",
                                "size": 5611,
                                "name": "test_llm_agent_callbacks.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_llm_agent_fields.py",
                                "type": "file",
                                "size": 8142,
                                "name": "test_llm_agent_fields.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_loop_agent.py",
                                "type": "file",
                                "size": 4336,
                                "name": "test_loop_agent.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_model_callback_chain.py",
                                "type": "file",
                                "size": 6879,
                                "name": "test_model_callback_chain.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_parallel_agent.py",
                                "type": "file",
                                "size": 4617,
                                "name": "test_parallel_agent.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_readonly_context.py",
                                "type": "file",
                                "size": 1023,
                                "name": "test_readonly_context.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_run_config.py",
                                "type": "file",
                                "size": 952,
                                "name": "test_run_config.py"
                              },
                              {
                                "path": "tests/unittests/agents/test_sequential_agent.py",
                                "type": "file",
                                "size": 3774,
                                "name": "test_sequential_agent.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/artifacts",
                            "type": "dir",
                            "size": 0,
                            "name": "artifacts",
                            "contents": [
                              {
                                "path": "tests/unittests/artifacts/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/artifacts/test_artifact_service.py",
                                "type": "file",
                                "size": 7593,
                                "name": "test_artifact_service.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/auth",
                            "type": "dir",
                            "size": 0,
                            "name": "auth",
                            "contents": [
                              {
                                "path": "tests/unittests/auth/credential_service",
                                "type": "dir",
                                "size": 0,
                                "name": "credential_service",
                                "contents": [
                                  {
                                    "path": "tests/unittests/auth/credential_service/test_in_memory_credential_service.py",
                                    "type": "file",
                                    "size": 12184,
                                    "name": "test_in_memory_credential_service.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/auth/exchanger",
                                "type": "dir",
                                "size": 0,
                                "name": "exchanger",
                                "contents": [
                                  {
                                    "path": "tests/unittests/auth/exchanger/__init__.py",
                                    "type": "file",
                                    "size": 613,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/auth/exchanger/test_credential_exchanger_registry.py",
                                    "type": "file",
                                    "size": 9366,
                                    "name": "test_credential_exchanger_registry.py"
                                  },
                                  {
                                    "path": "tests/unittests/auth/exchanger/test_oauth2_credential_exchanger.py",
                                    "type": "file",
                                    "size": 8031,
                                    "name": "test_oauth2_credential_exchanger.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/auth/refresher",
                                "type": "dir",
                                "size": 0,
                                "name": "refresher",
                                "contents": [
                                  {
                                    "path": "tests/unittests/auth/refresher/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/auth/refresher/test_credential_refresher_registry.py",
                                    "type": "file",
                                    "size": 6892,
                                    "name": "test_credential_refresher_registry.py"
                                  },
                                  {
                                    "path": "tests/unittests/auth/refresher/test_oauth2_credential_refresher.py",
                                    "type": "file",
                                    "size": 6459,
                                    "name": "test_oauth2_credential_refresher.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/auth/test_auth_config.py",
                                "type": "file",
                                "size": 3427,
                                "name": "test_auth_config.py"
                              },
                              {
                                "path": "tests/unittests/auth/test_auth_handler.py",
                                "type": "file",
                                "size": 18796,
                                "name": "test_auth_handler.py"
                              },
                              {
                                "path": "tests/unittests/auth/test_credential_manager.py",
                                "type": "file",
                                "size": 19083,
                                "name": "test_credential_manager.py"
                              },
                              {
                                "path": "tests/unittests/auth/test_oauth2_credential_util.py",
                                "type": "file",
                                "size": 5302,
                                "name": "test_oauth2_credential_util.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/cli",
                            "type": "dir",
                            "size": 0,
                            "name": "cli",
                            "contents": [
                              {
                                "path": "tests/unittests/cli/utils",
                                "type": "dir",
                                "size": 0,
                                "name": "utils",
                                "contents": [
                                  {
                                    "path": "tests/unittests/cli/utils/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/cli/utils/test_agent_loader.py",
                                    "type": "file",
                                    "size": 16402,
                                    "name": "test_agent_loader.py"
                                  },
                                  {
                                    "path": "tests/unittests/cli/utils/test_cli.py",
                                    "type": "file",
                                    "size": 6837,
                                    "name": "test_cli.py"
                                  },
                                  {
                                    "path": "tests/unittests/cli/utils/test_cli_create.py",
                                    "type": "file",
                                    "size": 8391,
                                    "name": "test_cli_create.py"
                                  },
                                  {
                                    "path": "tests/unittests/cli/utils/test_cli_deploy.py",
                                    "type": "file",
                                    "size": 6320,
                                    "name": "test_cli_deploy.py"
                                  },
                                  {
                                    "path": "tests/unittests/cli/utils/test_cli_tools_click.py",
                                    "type": "file",
                                    "size": 11130,
                                    "name": "test_cli_tools_click.py"
                                  },
                                  {
                                    "path": "tests/unittests/cli/utils/test_evals.py",
                                    "type": "file",
                                    "size": 15045,
                                    "name": "test_evals.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/cli/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/cli/test_fast_api.py",
                                "type": "file",
                                "size": 23260,
                                "name": "test_fast_api.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/code_executors",
                            "type": "dir",
                            "size": 0,
                            "name": "code_executors",
                            "contents": [
                              {
                                "path": "tests/unittests/code_executors/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/code_executors/test_built_in_code_executor.py",
                                "type": "file",
                                "size": 3773,
                                "name": "test_built_in_code_executor.py"
                              },
                              {
                                "path": "tests/unittests/code_executors/test_code_executor_context.py",
                                "type": "file",
                                "size": 9801,
                                "name": "test_code_executor_context.py"
                              },
                              {
                                "path": "tests/unittests/code_executors/test_unsafe_local_code_executor.py",
                                "type": "file",
                                "size": 3740,
                                "name": "test_unsafe_local_code_executor.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/evaluation",
                            "type": "dir",
                            "size": 0,
                            "name": "evaluation",
                            "contents": [
                              {
                                "path": "tests/unittests/evaluation/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/evaluation/mock_gcs_utils.py",
                                "type": "file",
                                "size": 3061,
                                "name": "mock_gcs_utils.py"
                              },
                              {
                                "path": "tests/unittests/evaluation/test_gcs_eval_set_results_manager.py",
                                "type": "file",
                                "size": 6873,
                                "name": "test_gcs_eval_set_results_manager.py"
                              },
                              {
                                "path": "tests/unittests/evaluation/test_gcs_eval_sets_manager.py",
                                "type": "file",
                                "size": 13466,
                                "name": "test_gcs_eval_sets_manager.py"
                              },
                              {
                                "path": "tests/unittests/evaluation/test_local_eval_set_results_manager.py",
                                "type": "file",
                                "size": 5792,
                                "name": "test_local_eval_set_results_manager.py"
                              },
                              {
                                "path": "tests/unittests/evaluation/test_local_eval_sets_manager.py",
                                "type": "file",
                                "size": 24508,
                                "name": "test_local_eval_sets_manager.py"
                              },
                              {
                                "path": "tests/unittests/evaluation/test_response_evaluator.py",
                                "type": "file",
                                "size": 9771,
                                "name": "test_response_evaluator.py"
                              },
                              {
                                "path": "tests/unittests/evaluation/test_trajectory_evaluator.py",
                                "type": "file",
                                "size": 9729,
                                "name": "test_trajectory_evaluator.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/flows",
                            "type": "dir",
                            "size": 0,
                            "name": "flows",
                            "contents": [
                              {
                                "path": "tests/unittests/flows/llm_flows",
                                "type": "dir",
                                "size": 0,
                                "name": "llm_flows",
                                "contents": [
                                  {
                                    "path": "tests/unittests/flows/llm_flows/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_agent_transfer.py",
                                    "type": "file",
                                    "size": 9654,
                                    "name": "test_agent_transfer.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_async_tool_callbacks.py",
                                    "type": "file",
                                    "size": 8732,
                                    "name": "test_async_tool_callbacks.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_base_llm_flow_realtime.py",
                                    "type": "file",
                                    "size": 6825,
                                    "name": "test_base_llm_flow_realtime.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_functions_long_running.py",
                                    "type": "file",
                                    "size": 7982,
                                    "name": "test_functions_long_running.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_functions_request_euc.py",
                                    "type": "file",
                                    "size": 19410,
                                    "name": "test_functions_request_euc.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_functions_sequential.py",
                                    "type": "file",
                                    "size": 3239,
                                    "name": "test_functions_sequential.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_functions_simple.py",
                                    "type": "file",
                                    "size": 7708,
                                    "name": "test_functions_simple.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_identity.py",
                                    "type": "file",
                                    "size": 2009,
                                    "name": "test_identity.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_instructions.py",
                                    "type": "file",
                                    "size": 8861,
                                    "name": "test_instructions.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_model_callbacks.py",
                                    "type": "file",
                                    "size": 3954,
                                    "name": "test_model_callbacks.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_other_configs.py",
                                    "type": "file",
                                    "size": 1550,
                                    "name": "test_other_configs.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_tool_callbacks.py",
                                    "type": "file",
                                    "size": 7523,
                                    "name": "test_tool_callbacks.py"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/test_tool_telemetry.py",
                                    "type": "file",
                                    "size": 3243,
                                    "name": "test_tool_telemetry.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/flows/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/models",
                            "type": "dir",
                            "size": 0,
                            "name": "models",
                            "contents": [
                              {
                                "path": "tests/unittests/models/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/models/test_anthropic_llm.py",
                                "type": "file",
                                "size": 3766,
                                "name": "test_anthropic_llm.py"
                              },
                              {
                                "path": "tests/unittests/models/test_gemini_llm_connection.py",
                                "type": "file",
                                "size": 3476,
                                "name": "test_gemini_llm_connection.py"
                              },
                              {
                                "path": "tests/unittests/models/test_google_llm.py",
                                "type": "file",
                                "size": 21731,
                                "name": "test_google_llm.py"
                              },
                              {
                                "path": "tests/unittests/models/test_litellm.py",
                                "type": "file",
                                "size": 45746,
                                "name": "test_litellm.py"
                              },
                              {
                                "path": "tests/unittests/models/test_models.py",
                                "type": "file",
                                "size": 2037,
                                "name": "test_models.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/sessions",
                            "type": "dir",
                            "size": 0,
                            "name": "sessions",
                            "contents": [
                              {
                                "path": "tests/unittests/sessions/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/sessions/test_session_service.py",
                                "type": "file",
                                "size": 12167,
                                "name": "test_session_service.py"
                              },
                              {
                                "path": "tests/unittests/sessions/test_vertex_ai_session_service.py",
                                "type": "file",
                                "size": 11246,
                                "name": "test_vertex_ai_session_service.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/streaming",
                            "type": "dir",
                            "size": 0,
                            "name": "streaming",
                            "contents": [
                              {
                                "path": "tests/unittests/streaming/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/streaming/test_streaming.py",
                                "type": "file",
                                "size": 1481,
                                "name": "test_streaming.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/tools",
                            "type": "dir",
                            "size": 0,
                            "name": "tools",
                            "contents": [
                              {
                                "path": "tests/unittests/tools/apihub_tool",
                                "type": "dir",
                                "size": 0,
                                "name": "apihub_tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/apihub_tool/clients",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "clients",
                                    "contents": [
                                      {
                                        "path": "tests/unittests/tools/apihub_tool/clients/test_apihub_client.py",
                                        "type": "file",
                                        "size": 17799,
                                        "name": "test_apihub_client.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/unittests/tools/apihub_tool/test_apihub_toolset.py",
                                    "type": "file",
                                    "size": 5550,
                                    "name": "test_apihub_toolset.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/application_integration_tool",
                                "type": "dir",
                                "size": 0,
                                "name": "application_integration_tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/application_integration_tool/clients",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "clients",
                                    "contents": [
                                      {
                                        "path": "tests/unittests/tools/application_integration_tool/clients/test_connections_client.py",
                                        "type": "file",
                                        "size": 23331,
                                        "name": "test_connections_client.py"
                                      },
                                      {
                                        "path": "tests/unittests/tools/application_integration_tool/clients/test_integration_client.py",
                                        "type": "file",
                                        "size": 21036,
                                        "name": "test_integration_client.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/unittests/tools/application_integration_tool/test_application_integration_toolset.py",
                                    "type": "file",
                                    "size": 21292,
                                    "name": "test_application_integration_toolset.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/application_integration_tool/test_integration_connector_tool.py",
                                    "type": "file",
                                    "size": 9085,
                                    "name": "test_integration_connector_tool.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/bigquery",
                                "type": "dir",
                                "size": 0,
                                "name": "bigquery",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/bigquery/__init__",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_client.py",
                                    "type": "file",
                                    "size": 5033,
                                    "name": "test_bigquery_client.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_credentials.py",
                                    "type": "file",
                                    "size": 6461,
                                    "name": "test_bigquery_credentials.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_credentials_manager.py",
                                    "type": "file",
                                    "size": 18537,
                                    "name": "test_bigquery_credentials_manager.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_metadata_tool.py",
                                    "type": "file",
                                    "size": 4583,
                                    "name": "test_bigquery_metadata_tool.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_query_tool.py",
                                    "type": "file",
                                    "size": 12636,
                                    "name": "test_bigquery_query_tool.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_tool.py",
                                    "type": "file",
                                    "size": 9298,
                                    "name": "test_bigquery_tool.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_tool_config.py",
                                    "type": "file",
                                    "size": 940,
                                    "name": "test_bigquery_tool_config.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/bigquery/test_bigquery_toolset.py",
                                    "type": "file",
                                    "size": 3850,
                                    "name": "test_bigquery_toolset.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/google_api_tool",
                                "type": "dir",
                                "size": 0,
                                "name": "google_api_tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/google_api_tool/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/google_api_tool/test_googleapi_to_openapi_converter.py",
                                    "type": "file",
                                    "size": 23441,
                                    "name": "test_googleapi_to_openapi_converter.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/mcp_tool",
                                "type": "dir",
                                "size": 0,
                                "name": "mcp_tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/mcp_tool/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/mcp_tool/test_mcp_session_manager.py",
                                    "type": "file",
                                    "size": 11167,
                                    "name": "test_mcp_session_manager.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/mcp_tool/test_mcp_tool.py",
                                    "type": "file",
                                    "size": 11368,
                                    "name": "test_mcp_tool.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/mcp_tool/test_mcp_toolset.py",
                                    "type": "file",
                                    "size": 8947,
                                    "name": "test_mcp_toolset.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/openapi_tool",
                                "type": "dir",
                                "size": 0,
                                "name": "openapi_tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/openapi_tool/auth",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "auth",
                                    "contents": [
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/auth/credential_exchangers",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "credential_exchangers",
                                        "contents": [
                                          {
                                            "path": "tests/unittests/tools/openapi_tool/auth/credential_exchangers/test_auto_auth_credential_exchanger.py",
                                            "type": "file",
                                            "size": 5250,
                                            "name": "test_auto_auth_credential_exchanger.py"
                                          },
                                          {
                                            "path": "tests/unittests/tools/openapi_tool/auth/credential_exchangers/test_base_auth_credential_exchanger.py",
                                            "type": "file",
                                            "size": 2398,
                                            "name": "test_base_auth_credential_exchanger.py"
                                          },
                                          {
                                            "path": "tests/unittests/tools/openapi_tool/auth/credential_exchangers/test_oauth2_exchanger.py",
                                            "type": "file",
                                            "size": 5470,
                                            "name": "test_oauth2_exchanger.py"
                                          },
                                          {
                                            "path": "tests/unittests/tools/openapi_tool/auth/credential_exchangers/test_service_account_exchanger.py",
                                            "type": "file",
                                            "size": 7462,
                                            "name": "test_service_account_exchanger.py"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/auth/test_auth_helper.py",
                                        "type": "file",
                                        "size": 18301,
                                        "name": "test_auth_helper.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/unittests/tools/openapi_tool/common",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "common",
                                    "contents": [
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/common/test_common.py",
                                        "type": "file",
                                        "size": 12391,
                                        "name": "test_common.py"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/unittests/tools/openapi_tool/openapi_spec_parser",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "openapi_spec_parser",
                                    "contents": [
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/openapi_spec_parser/test.yaml",
                                        "type": "file",
                                        "size": 67282,
                                        "name": "test.yaml"
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/openapi_spec_parser/test_openapi_spec_parser.py",
                                        "type": "file",
                                        "size": 20885,
                                        "name": "test_openapi_spec_parser.py"
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/openapi_spec_parser/test_openapi_toolset.py",
                                        "type": "file",
                                        "size": 5782,
                                        "name": "test_openapi_toolset.py"
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/openapi_spec_parser/test_operation_parser.py",
                                        "type": "file",
                                        "size": 14724,
                                        "name": "test_operation_parser.py"
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/openapi_spec_parser/test_rest_api_tool.py",
                                        "type": "file",
                                        "size": 24834,
                                        "name": "test_rest_api_tool.py"
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi_tool/openapi_spec_parser/test_tool_auth_handler.py",
                                        "type": "file",
                                        "size": 9719,
                                        "name": "test_tool_auth_handler.py"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/retrieval",
                                "type": "dir",
                                "size": 0,
                                "name": "retrieval",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/retrieval/__init__.py",
                                    "type": "file",
                                    "size": 574,
                                    "name": "__init__.py"
                                  },
                                  {
                                    "path": "tests/unittests/tools/retrieval/test_vertex_ai_rag_retrieval.py",
                                    "type": "file",
                                    "size": 4430,
                                    "name": "test_vertex_ai_rag_retrieval.py"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/tools/test_agent_tool.py",
                                "type": "file",
                                "size": 6063,
                                "name": "test_agent_tool.py"
                              },
                              {
                                "path": "tests/unittests/tools/test_authenticated_function_tool.py",
                                "type": "file",
                                "size": 18797,
                                "name": "test_authenticated_function_tool.py"
                              },
                              {
                                "path": "tests/unittests/tools/test_base_authenticated_tool.py",
                                "type": "file",
                                "size": 11970,
                                "name": "test_base_authenticated_tool.py"
                              },
                              {
                                "path": "tests/unittests/tools/test_base_tool.py",
                                "type": "file",
                                "size": 4347,
                                "name": "test_base_tool.py"
                              },
                              {
                                "path": "tests/unittests/tools/test_build_function_declaration.py",
                                "type": "file",
                                "size": 8255,
                                "name": "test_build_function_declaration.py"
                              },
                              {
                                "path": "tests/unittests/tools/test_function_tool.py",
                                "type": "file",
                                "size": 11091,
                                "name": "test_function_tool.py"
                              },
                              {
                                "path": "tests/unittests/tools/test_gemini_schema_util.py",
                                "type": "file",
                                "size": 20610,
                                "name": "test_gemini_schema_util.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/utils",
                            "type": "dir",
                            "size": 0,
                            "name": "utils",
                            "contents": [
                              {
                                "path": "tests/unittests/utils/__init__.py",
                                "type": "file",
                                "size": 574,
                                "name": "__init__.py"
                              },
                              {
                                "path": "tests/unittests/utils/test_feature_decorator.py",
                                "type": "file",
                                "size": 8971,
                                "name": "test_feature_decorator.py"
                              },
                              {
                                "path": "tests/unittests/utils/test_instructions_utils.py",
                                "type": "file",
                                "size": 7095,
                                "name": "test_instructions_utils.py"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/__init__.py",
                            "type": "file",
                            "size": 574,
                            "name": "__init__.py"
                          },
                          {
                            "path": "tests/unittests/conftest.py",
                            "type": "file",
                            "size": 2187,
                            "name": "conftest.py"
                          },
                          {
                            "path": "tests/unittests/test_telemetry.py",
                            "type": "file",
                            "size": 9624,
                            "name": "test_telemetry.py"
                          },
                          {
                            "path": "tests/unittests/testing_utils.py",
                            "type": "file",
                            "size": 10205,
                            "name": "testing_utils.py"
                          }
                        ]
                      },
                      {
                        "path": "tests/__init__.py",
                        "type": "file",
                        "size": 574,
                        "name": "__init__.py"
                      }
                    ]
                  },
                  {
                    "path": ".gitignore",
                    "type": "file",
                    "size": 910,
                    "name": ".gitignore"
                  },
                  {
                    "path": "CHANGELOG.md",
                    "type": "file",
                    "size": 26918,
                    "name": "CHANGELOG.md"
                  },
                  {
                    "path": "CONTRIBUTING.md",
                    "type": "file",
                    "size": 6846,
                    "name": "CONTRIBUTING.md"
                  },
                  {
                    "path": "LICENSE",
                    "type": "file",
                    "size": 11357,
                    "name": "LICENSE"
                  },
                  {
                    "path": "README.md",
                    "type": "file",
                    "size": 5884,
                    "name": "README.md"
                  },
                  {
                    "path": "autoformat.sh",
                    "type": "file",
                    "size": 2085,
                    "name": "autoformat.sh"
                  },
                  {
                    "path": "pylintrc",
                    "type": "file",
                    "size": 13082,
                    "name": "pylintrc"
                  },
                  {
                    "path": "pyproject.toml",
                    "type": "file",
                    "size": 6073,
                    "name": "pyproject.toml"
                  }
                ],
                "typescript_repo_structure": [
                  {
                    "path": ".github",
                    "type": "dir",
                    "size": 0,
                    "name": ".github",
                    "contents": [
                      {
                        "path": ".github/workflows",
                        "type": "dir",
                        "size": 0,
                        "name": "workflows",
                        "contents": [
                          {
                            "path": ".github/workflows/publish-docs.yml",
                            "type": "file",
                            "size": 1862,
                            "name": "publish-docs.yml"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "path": "ai-repo-maintainer",
                    "type": "dir",
                    "size": 0,
                    "name": "ai-repo-maintainer",
                    "contents": [
                      {
                        "path": "ai-repo-maintainer/tools",
                        "type": "dir",
                        "size": 0,
                        "name": "tools",
                        "contents": [
                          {
                            "path": "ai-repo-maintainer/tools/applyDiff.ts",
                            "type": "file",
                            "size": 9256,
                            "name": "applyDiff.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/createBranch.ts",
                            "type": "file",
                            "size": 3553,
                            "name": "createBranch.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/createIssue.ts",
                            "type": "file",
                            "size": 2796,
                            "name": "createIssue.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/createPullRequest.ts",
                            "type": "file",
                            "size": 3923,
                            "name": "createPullRequest.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/getCommitDiff.ts",
                            "type": "file",
                            "size": 8846,
                            "name": "getCommitDiff.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/getFileContentFromRepo.ts",
                            "type": "file",
                            "size": 1766,
                            "name": "getFileContentFromRepo.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/getIssueDetails.ts",
                            "type": "file",
                            "size": 2020,
                            "name": "getIssueDetails.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/getRepoCommits.ts",
                            "type": "file",
                            "size": 1362,
                            "name": "getRepoCommits.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/getRepoFileStructure.ts",
                            "type": "file",
                            "size": 10328,
                            "name": "getRepoFileStructure.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/getRepoIssues.ts",
                            "type": "file",
                            "size": 1568,
                            "name": "getRepoIssues.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/getUnreportedCommits.ts",
                            "type": "file",
                            "size": 4526,
                            "name": "getUnreportedCommits.ts"
                          },
                          {
                            "path": "ai-repo-maintainer/tools/writeFileToRepo.ts",
                            "type": "file",
                            "size": 7432,
                            "name": "writeFileToRepo.ts"
                          }
                        ]
                      },
                      {
                        "path": "ai-repo-maintainer/agent.ts",
                        "type": "file",
                        "size": 21485,
                        "name": "agent.ts"
                      },
                      {
                        "path": "ai-repo-maintainer/ai-repo-maintainer.md",
                        "type": "file",
                        "size": 1676,
                        "name": "ai-repo-maintainer.md"
                      },
                      {
                        "path": "ai-repo-maintainer/package.json",
                        "type": "file",
                        "size": 588,
                        "name": "package.json"
                      },
                      {
                        "path": "ai-repo-maintainer/tsconfig.json",
                        "type": "file",
                        "size": 399,
                        "name": "tsconfig.json"
                      }
                    ]
                  },
                  {
                    "path": "assets",
                    "type": "dir",
                    "size": 0,
                    "name": "assets",
                    "contents": [
                      {
                        "path": "assets/adk-web-dev-ui-function-call.png",
                        "type": "file",
                        "size": 474186,
                        "name": "adk-web-dev-ui-function-call.png"
                      },
                      {
                        "path": "assets/agent-development-kit.png",
                        "type": "file",
                        "size": 374329,
                        "name": "agent-development-kit.png"
                      }
                    ]
                  },
                  {
                    "path": "docs",
                    "type": "dir",
                    "size": 0,
                    "name": "docs",
                    "contents": [
                      {
                        "path": "docs/agents",
                        "type": "dir",
                        "size": 0,
                        "name": "agents",
                        "contents": [
                          {
                            "path": "docs/agents/workflow-agents",
                            "type": "dir",
                            "size": 0,
                            "name": "workflow-agents",
                            "contents": [
                              {
                                "path": "docs/agents/workflow-agents/index.md",
                                "type": "file",
                                "size": 2190,
                                "name": "index.md"
                              },
                              {
                                "path": "docs/agents/workflow-agents/loop-agents.md",
                                "type": "file",
                                "size": 3223,
                                "name": "loop-agents.md"
                              },
                              {
                                "path": "docs/agents/workflow-agents/parallel-agents.md",
                                "type": "file",
                                "size": 3693,
                                "name": "parallel-agents.md"
                              },
                              {
                                "path": "docs/agents/workflow-agents/sequential-agents.md",
                                "type": "file",
                                "size": 2339,
                                "name": "sequential-agents.md"
                              }
                            ]
                          },
                          {
                            "path": "docs/agents/custom-agents.md",
                            "type": "file",
                            "size": 8121,
                            "name": "custom-agents.md"
                          },
                          {
                            "path": "docs/agents/index.md",
                            "type": "file",
                            "size": 4600,
                            "name": "index.md"
                          },
                          {
                            "path": "docs/agents/llm-agents.md",
                            "type": "file",
                            "size": 10609,
                            "name": "llm-agents.md"
                          },
                          {
                            "path": "docs/agents/models.md",
                            "type": "file",
                            "size": 18777,
                            "name": "models.md"
                          },
                          {
                            "path": "docs/agents/multi-agents.md",
                            "type": "file",
                            "size": 24985,
                            "name": "multi-agents.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/artifacts",
                        "type": "dir",
                        "size": 0,
                        "name": "artifacts",
                        "contents": [
                          {
                            "path": "docs/artifacts/index.md",
                            "type": "file",
                            "size": 25802,
                            "name": "index.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/assets",
                        "type": "dir",
                        "size": 0,
                        "name": "assets",
                        "contents": [
                          {
                            "path": "docs/assets/adk-api-server.png",
                            "type": "file",
                            "size": 49192,
                            "name": "adk-api-server.png"
                          },
                          {
                            "path": "docs/assets/adk-components.png",
                            "type": "file",
                            "size": 163821,
                            "name": "adk-components.png"
                          },
                          {
                            "path": "docs/assets/adk-interfaces.png",
                            "type": "file",
                            "size": 153977,
                            "name": "adk-interfaces.png"
                          },
                          {
                            "path": "docs/assets/adk-lifecycle.png",
                            "type": "file",
                            "size": 141904,
                            "name": "adk-lifecycle.png"
                          },
                          {
                            "path": "docs/assets/adk-run.png",
                            "type": "file",
                            "size": 91507,
                            "name": "adk-run.png"
                          },
                          {
                            "path": "docs/assets/adk-social-card.png",
                            "type": "file",
                            "size": 17597,
                            "name": "adk-social-card.png"
                          },
                          {
                            "path": "docs/assets/adk-stack.png",
                            "type": "file",
                            "size": 135222,
                            "name": "adk-stack.png"
                          },
                          {
                            "path": "docs/assets/adk-streaming.png",
                            "type": "file",
                            "size": 94149,
                            "name": "adk-streaming.png"
                          },
                          {
                            "path": "docs/assets/adk-web-dev-ui-audio.png",
                            "type": "file",
                            "size": 238798,
                            "name": "adk-web-dev-ui-audio.png"
                          },
                          {
                            "path": "docs/assets/adk-web-dev-ui-chat.png",
                            "type": "file",
                            "size": 433244,
                            "name": "adk-web-dev-ui-chat.png"
                          },
                          {
                            "path": "docs/assets/adk-web-dev-ui-function-call.png",
                            "type": "file",
                            "size": 474186,
                            "name": "adk-web-dev-ui-function-call.png"
                          },
                          {
                            "path": "docs/assets/agent-development-kit.png",
                            "type": "file",
                            "size": 374329,
                            "name": "agent-development-kit.png"
                          },
                          {
                            "path": "docs/assets/agent-evaluation.png",
                            "type": "file",
                            "size": 142987,
                            "name": "agent-evaluation.png"
                          },
                          {
                            "path": "docs/assets/agent-tool-call.png",
                            "type": "file",
                            "size": 165010,
                            "name": "agent-tool-call.png"
                          },
                          {
                            "path": "docs/assets/agent-types.png",
                            "type": "file",
                            "size": 98275,
                            "name": "agent-types.png"
                          },
                          {
                            "path": "docs/assets/agent-workflow.png",
                            "type": "file",
                            "size": 93438,
                            "name": "agent-workflow.png"
                          },
                          {
                            "path": "docs/assets/application-integration-overview.png",
                            "type": "file",
                            "size": 411834,
                            "name": "application-integration-overview.png"
                          },
                          {
                            "path": "docs/assets/auth_part1.svg",
                            "type": "file",
                            "size": 243871,
                            "name": "auth_part1.svg"
                          },
                          {
                            "path": "docs/assets/auth_part2.svg",
                            "type": "file",
                            "size": 356576,
                            "name": "auth_part2.svg"
                          },
                          {
                            "path": "docs/assets/callback_flow.png",
                            "type": "file",
                            "size": 114672,
                            "name": "callback_flow.png"
                          },
                          {
                            "path": "docs/assets/custom-agent-flow.png",
                            "type": "file",
                            "size": 183570,
                            "name": "custom-agent-flow.png"
                          },
                          {
                            "path": "docs/assets/custom-agent.png",
                            "type": "file",
                            "size": 163734,
                            "name": "custom-agent.png"
                          },
                          {
                            "path": "docs/assets/custom_agent.svg",
                            "type": "file",
                            "size": 136708,
                            "name": "custom_agent.svg"
                          },
                          {
                            "path": "docs/assets/deploy-agent.png",
                            "type": "file",
                            "size": 240209,
                            "name": "deploy-agent.png"
                          },
                          {
                            "path": "docs/assets/evaluate_agent.png",
                            "type": "file",
                            "size": 229317,
                            "name": "evaluate_agent.png"
                          },
                          {
                            "path": "docs/assets/event-loop.png",
                            "type": "file",
                            "size": 177958,
                            "name": "event-loop.png"
                          },
                          {
                            "path": "docs/assets/google_cloud_tools.svg",
                            "type": "file",
                            "size": 127941,
                            "name": "google_cloud_tools.svg"
                          },
                          {
                            "path": "docs/assets/idx-logo.png",
                            "type": "file",
                            "size": 1228,
                            "name": "idx-logo.png"
                          },
                          {
                            "path": "docs/assets/invocation-flow.png",
                            "type": "file",
                            "size": 547850,
                            "name": "invocation-flow.png"
                          },
                          {
                            "path": "docs/assets/loop-agent.png",
                            "type": "file",
                            "size": 92668,
                            "name": "loop-agent.png"
                          },
                          {
                            "path": "docs/assets/mcp_db_toolbox.svg",
                            "type": "file",
                            "size": 145054,
                            "name": "mcp_db_toolbox.svg"
                          },
                          {
                            "path": "docs/assets/multi-agent.png",
                            "type": "file",
                            "size": 198908,
                            "name": "multi-agent.png"
                          },
                          {
                            "path": "docs/assets/oauth-tool-flow.png",
                            "type": "file",
                            "size": 303729,
                            "name": "oauth-tool-flow.png"
                          },
                          {
                            "path": "docs/assets/parallel-agent.png",
                            "type": "file",
                            "size": 69806,
                            "name": "parallel-agent.png"
                          },
                          {
                            "path": "docs/assets/publish-integration.png",
                            "type": "file",
                            "size": 405321,
                            "name": "publish-integration.png"
                          },
                          {
                            "path": "docs/assets/quickstart-flow-tool.png",
                            "type": "file",
                            "size": 236912,
                            "name": "quickstart-flow-tool.png"
                          },
                          {
                            "path": "docs/assets/quickstart-streaming-tool.png",
                            "type": "file",
                            "size": 107660,
                            "name": "quickstart-streaming-tool.png"
                          },
                          {
                            "path": "docs/assets/quickstart.png",
                            "type": "file",
                            "size": 70141,
                            "name": "quickstart.png"
                          },
                          {
                            "path": "docs/assets/sequential-agent.png",
                            "type": "file",
                            "size": 67457,
                            "name": "sequential-agent.png"
                          },
                          {
                            "path": "docs/assets/session-state.png",
                            "type": "file",
                            "size": 176981,
                            "name": "session-state.png"
                          },
                          {
                            "path": "docs/assets/session_lifecycle.png",
                            "type": "file",
                            "size": 123629,
                            "name": "session_lifecycle.png"
                          },
                          {
                            "path": "docs/assets/use-connection-tool-template.png",
                            "type": "file",
                            "size": 228815,
                            "name": "use-connection-tool-template.png"
                          },
                          {
                            "path": "docs/assets/weather-example.png",
                            "type": "file",
                            "size": 122022,
                            "name": "weather-example.png"
                          },
                          {
                            "path": "docs/assets/what-is-an-agent.png",
                            "type": "file",
                            "size": 132710,
                            "name": "what-is-an-agent.png"
                          }
                        ]
                      },
                      {
                        "path": "docs/callbacks",
                        "type": "dir",
                        "size": 0,
                        "name": "callbacks",
                        "contents": [
                          {
                            "path": "docs/callbacks/design-patterns-and-best-practices.md",
                            "type": "file",
                            "size": 8036,
                            "name": "design-patterns-and-best-practices.md"
                          },
                          {
                            "path": "docs/callbacks/index.md",
                            "type": "file",
                            "size": 11647,
                            "name": "index.md"
                          },
                          {
                            "path": "docs/callbacks/types-of-callbacks.md",
                            "type": "file",
                            "size": 7789,
                            "name": "types-of-callbacks.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/context",
                        "type": "dir",
                        "size": 0,
                        "name": "context",
                        "contents": [
                          {
                            "path": "docs/context/index.md",
                            "type": "file",
                            "size": 23965,
                            "name": "index.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/deploy",
                        "type": "dir",
                        "size": 0,
                        "name": "deploy",
                        "contents": [
                          {
                            "path": "docs/deploy/agent-engine.md",
                            "type": "file",
                            "size": 8651,
                            "name": "agent-engine.md"
                          },
                          {
                            "path": "docs/deploy/cloud-run.md",
                            "type": "file",
                            "size": 14933,
                            "name": "cloud-run.md"
                          },
                          {
                            "path": "docs/deploy/gke.md",
                            "type": "file",
                            "size": 13438,
                            "name": "gke.md"
                          },
                          {
                            "path": "docs/deploy/index.md",
                            "type": "file",
                            "size": 1754,
                            "name": "index.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/evaluate",
                        "type": "dir",
                        "size": 0,
                        "name": "evaluate",
                        "contents": [
                          {
                            "path": "docs/evaluate/index.md",
                            "type": "file",
                            "size": 16275,
                            "name": "index.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/events",
                        "type": "dir",
                        "size": 0,
                        "name": "events",
                        "contents": [
                          {
                            "path": "docs/events/index.md",
                            "type": "file",
                            "size": 22372,
                            "name": "index.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/examples",
                        "type": "dir",
                        "size": 0,
                        "name": "examples",
                        "contents": [
                          {
                            "path": "docs/examples/typescript",
                            "type": "dir",
                            "size": 0,
                            "name": "typescript",
                            "contents": [
                              {
                                "path": "docs/examples/typescript/snippets",
                                "type": "dir",
                                "size": 0,
                                "name": "snippets",
                                "contents": [
                                  {
                                    "path": "docs/examples/typescript/snippets/agents",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "agents",
                                    "contents": [
                                      {
                                        "path": "docs/examples/typescript/snippets/agents/custom-agent",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "custom-agent",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/agents/custom-agent/storyflow-agent.ts",
                                            "type": "file",
                                            "size": 12205,
                                            "name": "storyflow-agent.ts"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/agents/llm-agent",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "llm-agent",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/agents/llm-agent/capital-agent.ts",
                                            "type": "file",
                                            "size": 8629,
                                            "name": "capital-agent.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/agents/llm-agent/requirements.txt",
                                            "type": "file",
                                            "size": 10,
                                            "name": "requirements.txt"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/agents/workflow-agents",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "workflow-agents",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/agents/workflow-agents/loop-agent-doc-improv-agent.ts",
                                            "type": "file",
                                            "size": 4808,
                                            "name": "loop-agent-doc-improv-agent.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/agents/workflow-agents/parallel-agent-web-research.ts",
                                            "type": "file",
                                            "size": 5555,
                                            "name": "parallel-agent-web-research.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/agents/workflow-agents/requirements.txt",
                                            "type": "file",
                                            "size": 10,
                                            "name": "requirements.txt"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/agents/workflow-agents/sequential-agent-code-development.ts",
                                            "type": "file",
                                            "size": 5631,
                                            "name": "sequential-agent-code-development.ts"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "path": "docs/examples/typescript/snippets/callbacks",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "callbacks",
                                    "contents": [
                                      {
                                        "path": "docs/examples/typescript/snippets/callbacks/after-agent-callback.ts",
                                        "type": "file",
                                        "size": 6068,
                                        "name": "after-agent-callback.ts"
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/callbacks/after-model-callback.ts",
                                        "type": "file",
                                        "size": 5826,
                                        "name": "after-model-callback.ts"
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/callbacks/after-tool-callback.ts",
                                        "type": "file",
                                        "size": 5282,
                                        "name": "after-tool-callback.ts"
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/callbacks/before-agent-callback.ts",
                                        "type": "file",
                                        "size": 5718,
                                        "name": "before-agent-callback.ts"
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/callbacks/before-model-callback.ts",
                                        "type": "file",
                                        "size": 5129,
                                        "name": "before-model-callback.ts"
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/callbacks/before-tool-callback.ts",
                                        "type": "file",
                                        "size": 4628,
                                        "name": "before-tool-callback.ts"
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/callbacks/callback-basic.ts",
                                        "type": "file",
                                        "size": 2949,
                                        "name": "callback-basic.ts"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "docs/examples/typescript/snippets/get-started",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "get-started",
                                    "contents": [
                                      {
                                        "path": "docs/examples/typescript/snippets/get-started/google-search-agent",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "google-search-agent",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/get-started/google-search-agent/agent.ts",
                                            "type": "file",
                                            "size": 1189,
                                            "name": "agent.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/get-started/google-search-agent/demo.ts",
                                            "type": "file",
                                            "size": 4063,
                                            "name": "demo.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/get-started/google-search-agent/index.ts",
                                            "type": "file",
                                            "size": 286,
                                            "name": "index.ts"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/get-started/multi-tool-agent",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "multi-tool-agent",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/get-started/multi-tool-agent/agent.ts",
                                            "type": "file",
                                            "size": 2944,
                                            "name": "agent.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/get-started/multi-tool-agent/demo.ts",
                                            "type": "file",
                                            "size": 2728,
                                            "name": "demo.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/get-started/multi-tool-agent/index.ts",
                                            "type": "file",
                                            "size": 280,
                                            "name": "index.ts"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "path": "docs/examples/typescript/snippets/tools",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "tools",
                                    "contents": [
                                      {
                                        "path": "docs/examples/typescript/snippets/tools/auth",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "auth",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/auth/agent-cli.ts",
                                            "type": "file",
                                            "size": 7633,
                                            "name": "agent-cli.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/auth/helpers.ts",
                                            "type": "file",
                                            "size": 4037,
                                            "name": "helpers.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/auth/spec.yaml",
                                            "type": "file",
                                            "size": 4227,
                                            "name": "spec.yaml"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/auth/tools-and-agent.ts",
                                            "type": "file",
                                            "size": 4230,
                                            "name": "tools-and-agent.ts"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/tools/built-in-tools",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "built-in-tools",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/built-in-tools/code-execution.ts",
                                            "type": "file",
                                            "size": 4612,
                                            "name": "code-execution.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/built-in-tools/google-search.ts",
                                            "type": "file",
                                            "size": 2759,
                                            "name": "google-search.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/built-in-tools/vertexai-search.ts",
                                            "type": "file",
                                            "size": 4642,
                                            "name": "vertexai-search.ts"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/tools/function-tools",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "function-tools",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/function-tools/file-processor.ts",
                                            "type": "file",
                                            "size": 4117,
                                            "name": "file-processor.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/function-tools/func-tool.ts",
                                            "type": "file",
                                            "size": 4274,
                                            "name": "func-tool.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/function-tools/summarizer.ts",
                                            "type": "file",
                                            "size": 3911,
                                            "name": "summarizer.ts"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/tools/overview",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "overview",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/overview/customer-support-agent.ts",
                                            "type": "file",
                                            "size": 3745,
                                            "name": "customer-support-agent.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/overview/doc-analysis.ts",
                                            "type": "file",
                                            "size": 3491,
                                            "name": "doc-analysis.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/overview/requirements.txt",
                                            "type": "file",
                                            "size": 10,
                                            "name": "requirements.txt"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/overview/user-preference.ts",
                                            "type": "file",
                                            "size": 2342,
                                            "name": "user-preference.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/overview/weather-sentiment.ts",
                                            "type": "file",
                                            "size": 5053,
                                            "name": "weather-sentiment.ts"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "docs/examples/typescript/snippets/tools/third-party",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "third-party",
                                        "contents": [
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/third-party/crewai-serper-search.ts",
                                            "type": "file",
                                            "size": 3446,
                                            "name": "crewai-serper-search.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/third-party/langchain-tavily-search.ts",
                                            "type": "file",
                                            "size": 3749,
                                            "name": "langchain-tavily-search.ts"
                                          },
                                          {
                                            "path": "docs/examples/typescript/snippets/tools/third-party/langchain-webresearch-agent.ts",
                                            "type": "file",
                                            "size": 8696,
                                            "name": "langchain-webresearch-agent.ts"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "path": "docs/get-started",
                        "type": "dir",
                        "size": 0,
                        "name": "get-started",
                        "contents": [
                          {
                            "path": "docs/get-started/about.md",
                            "type": "file",
                            "size": 7698,
                            "name": "about.md"
                          },
                          {
                            "path": "docs/get-started/index.md",
                            "type": "file",
                            "size": 1763,
                            "name": "index.md"
                          },
                          {
                            "path": "docs/get-started/installation.md",
                            "type": "file",
                            "size": 1927,
                            "name": "installation.md"
                          },
                          {
                            "path": "docs/get-started/quickstart-streaming.md",
                            "type": "file",
                            "size": 21225,
                            "name": "quickstart-streaming.md"
                          },
                          {
                            "path": "docs/get-started/quickstart.md",
                            "type": "file",
                            "size": 12569,
                            "name": "quickstart.md"
                          },
                          {
                            "path": "docs/get-started/testing.md",
                            "type": "file",
                            "size": 9316,
                            "name": "testing.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/overrides",
                        "type": "dir",
                        "size": 0,
                        "name": "overrides",
                        "contents": [
                          {
                            "path": "docs/overrides/partials",
                            "type": "dir",
                            "size": 0,
                            "name": "partials",
                            "contents": [
                              {
                                "path": "docs/overrides/partials/header.html",
                                "type": "file",
                                "size": 3893,
                                "name": "header.html"
                              }
                            ]
                          },
                          {
                            "path": "docs/overrides/main.html",
                            "type": "file",
                            "size": 1758,
                            "name": "main.html"
                          }
                        ]
                      },
                      {
                        "path": "docs/runtime",
                        "type": "dir",
                        "size": 0,
                        "name": "runtime",
                        "contents": [
                          {
                            "path": "docs/runtime/index.md",
                            "type": "file",
                            "size": 20150,
                            "name": "index.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/sessions",
                        "type": "dir",
                        "size": 0,
                        "name": "sessions",
                        "contents": [
                          {
                            "path": "docs/sessions/index.md",
                            "type": "file",
                            "size": 3878,
                            "name": "index.md"
                          },
                          {
                            "path": "docs/sessions/memory.md",
                            "type": "file",
                            "size": 11652,
                            "name": "memory.md"
                          },
                          {
                            "path": "docs/sessions/session.md",
                            "type": "file",
                            "size": 8525,
                            "name": "session.md"
                          },
                          {
                            "path": "docs/sessions/state.md",
                            "type": "file",
                            "size": 10697,
                            "name": "state.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/stylesheets",
                        "type": "dir",
                        "size": 0,
                        "name": "stylesheets",
                        "contents": [
                          {
                            "path": "docs/stylesheets/custom.css",
                            "type": "file",
                            "size": 965,
                            "name": "custom.css"
                          }
                        ]
                      },
                      {
                        "path": "docs/tools",
                        "type": "dir",
                        "size": 0,
                        "name": "tools",
                        "contents": [
                          {
                            "path": "docs/tools/authentication.md",
                            "type": "file",
                            "size": 33684,
                            "name": "authentication.md"
                          },
                          {
                            "path": "docs/tools/built-in-tools.md",
                            "type": "file",
                            "size": 8701,
                            "name": "built-in-tools.md"
                          },
                          {
                            "path": "docs/tools/function-tools.md",
                            "type": "file",
                            "size": 9755,
                            "name": "function-tools.md"
                          },
                          {
                            "path": "docs/tools/google-cloud-tools.md",
                            "type": "file",
                            "size": 14162,
                            "name": "google-cloud-tools.md"
                          },
                          {
                            "path": "docs/tools/index.md",
                            "type": "file",
                            "size": 18062,
                            "name": "index.md"
                          },
                          {
                            "path": "docs/tools/mcp-tools.md",
                            "type": "file",
                            "size": 22364,
                            "name": "mcp-tools.md"
                          },
                          {
                            "path": "docs/tools/openapi-tools.md",
                            "type": "file",
                            "size": 8941,
                            "name": "openapi-tools.md"
                          },
                          {
                            "path": "docs/tools/third-party-tools.md",
                            "type": "file",
                            "size": 9700,
                            "name": "third-party-tools.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/tutorials",
                        "type": "dir",
                        "size": 0,
                        "name": "tutorials",
                        "contents": [
                          {
                            "path": "docs/tutorials/agent-team.md",
                            "type": "file",
                            "size": 105719,
                            "name": "agent-team.md"
                          },
                          {
                            "path": "docs/tutorials/index.md",
                            "type": "file",
                            "size": 1057,
                            "name": "index.md"
                          }
                        ]
                      },
                      {
                        "path": "docs/.gitkeep",
                        "type": "file",
                        "size": 0,
                        "name": ".gitkeep"
                      },
                      {
                        "path": "docs/SUMMARY_FOR_LLMS.md",
                        "type": "file",
                        "size": 37096,
                        "name": "SUMMARY_FOR_LLMS.md"
                      },
                      {
                        "path": "docs/index.md",
                        "type": "file",
                        "size": 4130,
                        "name": "index.md"
                      }
                    ]
                  },
                  {
                    "path": "examples",
                    "type": "dir",
                    "size": 0,
                    "name": "examples",
                    "contents": [
                      {
                        "path": "examples/adk-streaming",
                        "type": "dir",
                        "size": 0,
                        "name": "adk-streaming",
                        "contents": [
                          {
                            "path": "examples/adk-streaming/app",
                            "type": "dir",
                            "size": 0,
                            "name": "app",
                            "contents": [
                              {
                                "path": "examples/adk-streaming/app/google_search_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "google_search_agent",
                                "contents": [
                                  {
                                    "path": "examples/adk-streaming/app/google_search_agent/agent.ts",
                                    "type": "file",
                                    "size": 938,
                                    "name": "agent.ts"
                                  }
                                ]
                              },
                              {
                                "path": "examples/adk-streaming/app/package.json",
                                "type": "file",
                                "size": 338,
                                "name": "package.json"
                              },
                              {
                                "path": "examples/adk-streaming/app/tsconfig.json",
                                "type": "file",
                                "size": 373,
                                "name": "tsconfig.json"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "path": "examples/my-adk-project",
                        "type": "dir",
                        "size": 0,
                        "name": "my-adk-project",
                        "contents": [
                          {
                            "path": "examples/my-adk-project/multi_tool_agent",
                            "type": "dir",
                            "size": 0,
                            "name": "multi_tool_agent",
                            "contents": [
                              {
                                "path": "examples/my-adk-project/multi_tool_agent/agent.ts",
                                "type": "file",
                                "size": 3656,
                                "name": "agent.ts"
                              }
                            ]
                          },
                          {
                            "path": "examples/my-adk-project/package.json",
                            "type": "file",
                            "size": 463,
                            "name": "package.json"
                          },
                          {
                            "path": "examples/my-adk-project/tsconfig.json",
                            "type": "file",
                            "size": 663,
                            "name": "tsconfig.json"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "path": "src",
                    "type": "dir",
                    "size": 0,
                    "name": "src",
                    "contents": [
                      {
                        "path": "src/agents",
                        "type": "dir",
                        "size": 0,
                        "name": "agents",
                        "contents": [
                          {
                            "path": "src/agents/ActiveStreamingTool.ts",
                            "type": "file",
                            "size": 1428,
                            "name": "ActiveStreamingTool.ts"
                          },
                          {
                            "path": "src/agents/BaseAgent.ts",
                            "type": "file",
                            "size": 8031,
                            "name": "BaseAgent.ts"
                          },
                          {
                            "path": "src/agents/CallbackContext.ts",
                            "type": "file",
                            "size": 3384,
                            "name": "CallbackContext.ts"
                          },
                          {
                            "path": "src/agents/InvocationContext.ts",
                            "type": "file",
                            "size": 5899,
                            "name": "InvocationContext.ts"
                          },
                          {
                            "path": "src/agents/LanggraphAgent.ts",
                            "type": "file",
                            "size": 6173,
                            "name": "LanggraphAgent.ts"
                          },
                          {
                            "path": "src/agents/LegacyAgents.ts",
                            "type": "file",
                            "size": 3046,
                            "name": "LegacyAgents.ts"
                          },
                          {
                            "path": "src/agents/LiveRequestQueue.ts",
                            "type": "file",
                            "size": 1720,
                            "name": "LiveRequestQueue.ts"
                          },
                          {
                            "path": "src/agents/LlmAgent.ts",
                            "type": "file",
                            "size": 17459,
                            "name": "LlmAgent.ts"
                          },
                          {
                            "path": "src/agents/LoopAgent.ts",
                            "type": "file",
                            "size": 2248,
                            "name": "LoopAgent.ts"
                          },
                          {
                            "path": "src/agents/ParallelAgent.ts",
                            "type": "file",
                            "size": 4163,
                            "name": "ParallelAgent.ts"
                          },
                          {
                            "path": "src/agents/ReadonlyContext.ts",
                            "type": "file",
                            "size": 828,
                            "name": "ReadonlyContext.ts"
                          },
                          {
                            "path": "src/agents/RemoteAgent.ts",
                            "type": "file",
                            "size": 2300,
                            "name": "RemoteAgent.ts"
                          },
                          {
                            "path": "src/agents/RunConfig.ts",
                            "type": "file",
                            "size": 1699,
                            "name": "RunConfig.ts"
                          },
                          {
                            "path": "src/agents/SequentialAgent.ts",
                            "type": "file",
                            "size": 1057,
                            "name": "SequentialAgent.ts"
                          },
                          {
                            "path": "src/agents/TranscriptionEntry.ts",
                            "type": "file",
                            "size": 735,
                            "name": "TranscriptionEntry.ts"
                          },
                          {
                            "path": "src/agents/index.ts",
                            "type": "file",
                            "size": 1057,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/artifacts",
                        "type": "dir",
                        "size": 0,
                        "name": "artifacts",
                        "contents": [
                          {
                            "path": "src/artifacts/BaseArtifactService.ts",
                            "type": "file",
                            "size": 1786,
                            "name": "BaseArtifactService.ts"
                          },
                          {
                            "path": "src/artifacts/GcsArtifactService.ts",
                            "type": "file",
                            "size": 6545,
                            "name": "GcsArtifactService.ts"
                          },
                          {
                            "path": "src/artifacts/InMemoryArtifactService.ts",
                            "type": "file",
                            "size": 4224,
                            "name": "InMemoryArtifactService.ts"
                          },
                          {
                            "path": "src/artifacts/index.ts",
                            "type": "file",
                            "size": 336,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/auth",
                        "type": "dir",
                        "size": 0,
                        "name": "auth",
                        "contents": [
                          {
                            "path": "src/auth/AuthConfig.ts",
                            "type": "file",
                            "size": 1522,
                            "name": "AuthConfig.ts"
                          },
                          {
                            "path": "src/auth/AuthCredential.ts",
                            "type": "file",
                            "size": 5911,
                            "name": "AuthCredential.ts"
                          },
                          {
                            "path": "src/auth/AuthHandler.ts",
                            "type": "file",
                            "size": 7372,
                            "name": "AuthHandler.ts"
                          },
                          {
                            "path": "src/auth/AuthPreprocessor.ts",
                            "type": "file",
                            "size": 387,
                            "name": "AuthPreprocessor.ts"
                          },
                          {
                            "path": "src/auth/AuthScheme.ts",
                            "type": "file",
                            "size": 542,
                            "name": "AuthScheme.ts"
                          },
                          {
                            "path": "src/auth/AuthSchemes.ts",
                            "type": "file",
                            "size": 3857,
                            "name": "AuthSchemes.ts"
                          },
                          {
                            "path": "src/auth/AuthTool.ts",
                            "type": "file",
                            "size": 3649,
                            "name": "AuthTool.ts"
                          },
                          {
                            "path": "src/auth/index.ts",
                            "type": "file",
                            "size": 940,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/cli",
                        "type": "dir",
                        "size": 0,
                        "name": "cli",
                        "contents": [
                          {
                            "path": "src/cli/browser",
                            "type": "dir",
                            "size": 0,
                            "name": "browser",
                            "contents": [
                              {
                                "path": "src/cli/browser/assets",
                                "type": "dir",
                                "size": 0,
                                "name": "assets",
                                "contents": [
                                  {
                                    "path": "src/cli/browser/assets/config",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "config",
                                    "contents": [
                                      {
                                        "path": "src/cli/browser/assets/config/runtime-config.json",
                                        "type": "file",
                                        "size": 22,
                                        "name": "runtime-config.json"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/cli/browser/assets/audio-processor.js",
                                    "type": "file",
                                    "size": 1769,
                                    "name": "audio-processor.js"
                                  }
                                ]
                              },
                              {
                                "path": "src/cli/browser/adk_favicon.svg",
                                "type": "file",
                                "size": 3132,
                                "name": "adk_favicon.svg"
                              },
                              {
                                "path": "src/cli/browser/index.html",
                                "type": "file",
                                "size": 18483,
                                "name": "index.html"
                              },
                              {
                                "path": "src/cli/browser/main-ZBO76GRM.js",
                                "type": "file",
                                "size": 2972215,
                                "name": "main-ZBO76GRM.js"
                              },
                              {
                                "path": "src/cli/browser/polyfills-FFHMD2TL.js",
                                "type": "file",
                                "size": 35115,
                                "name": "polyfills-FFHMD2TL.js"
                              },
                              {
                                "path": "src/cli/browser/styles-4VDSPQ37.css",
                                "type": "file",
                                "size": 5522,
                                "name": "styles-4VDSPQ37.css"
                              }
                            ]
                          },
                          {
                            "path": "src/cli/utils",
                            "type": "dir",
                            "size": 0,
                            "name": "utils",
                            "contents": [
                              {
                                "path": "src/cli/utils/envs.ts",
                                "type": "file",
                                "size": 1549,
                                "name": "envs.ts"
                              },
                              {
                                "path": "src/cli/utils/evals.ts",
                                "type": "file",
                                "size": 3418,
                                "name": "evals.ts"
                              },
                              {
                                "path": "src/cli/utils/index.ts",
                                "type": "file",
                                "size": 148,
                                "name": "index.ts"
                              },
                              {
                                "path": "src/cli/utils/init.ts",
                                "type": "file",
                                "size": 1841,
                                "name": "init.ts"
                              },
                              {
                                "path": "src/cli/utils/logs.ts",
                                "type": "file",
                                "size": 3830,
                                "name": "logs.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/cli/agentGraph.ts",
                            "type": "file",
                            "size": 6144,
                            "name": "agentGraph.ts"
                          },
                          {
                            "path": "src/cli/apiServer.ts",
                            "type": "file",
                            "size": 29554,
                            "name": "apiServer.ts"
                          },
                          {
                            "path": "src/cli/cli.ts",
                            "type": "file",
                            "size": 10782,
                            "name": "cli.ts"
                          },
                          {
                            "path": "src/cli/cliCreate.ts",
                            "type": "file",
                            "size": 11785,
                            "name": "cliCreate.ts"
                          },
                          {
                            "path": "src/cli/cliDeploy.ts",
                            "type": "file",
                            "size": 4775,
                            "name": "cliDeploy.ts"
                          },
                          {
                            "path": "src/cli/cliEval.ts",
                            "type": "file",
                            "size": 8212,
                            "name": "cliEval.ts"
                          },
                          {
                            "path": "src/cli/index.ts",
                            "type": "file",
                            "size": 11933,
                            "name": "index.ts"
                          },
                          {
                            "path": "src/cli/webServer.ts",
                            "type": "file",
                            "size": 37229,
                            "name": "webServer.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/code-executors",
                        "type": "dir",
                        "size": 0,
                        "name": "code-executors",
                        "contents": [
                          {
                            "path": "src/code-executors/BaseCodeExecutor.ts",
                            "type": "file",
                            "size": 1799,
                            "name": "BaseCodeExecutor.ts"
                          },
                          {
                            "path": "src/code-executors/CodeExecutionUtils.ts",
                            "type": "file",
                            "size": 7061,
                            "name": "CodeExecutionUtils.ts"
                          },
                          {
                            "path": "src/code-executors/CodeExecutorContext.ts",
                            "type": "file",
                            "size": 6727,
                            "name": "CodeExecutorContext.ts"
                          },
                          {
                            "path": "src/code-executors/UnsafeLocalCodeExecutor.ts",
                            "type": "file",
                            "size": 2916,
                            "name": "UnsafeLocalCodeExecutor.ts"
                          },
                          {
                            "path": "src/code-executors/VertexAiCodeExecutor.ts",
                            "type": "file",
                            "size": 9390,
                            "name": "VertexAiCodeExecutor.ts"
                          },
                          {
                            "path": "src/code-executors/index.ts",
                            "type": "file",
                            "size": 962,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/evaluation",
                        "type": "dir",
                        "size": 0,
                        "name": "evaluation",
                        "contents": [
                          {
                            "path": "src/evaluation/AgentEvaluator.ts",
                            "type": "file",
                            "size": 20004,
                            "name": "AgentEvaluator.ts"
                          },
                          {
                            "path": "src/evaluation/EvaluationConstants.ts",
                            "type": "file",
                            "size": 300,
                            "name": "EvaluationConstants.ts"
                          },
                          {
                            "path": "src/evaluation/EvaluationGenerator.ts",
                            "type": "file",
                            "size": 16109,
                            "name": "EvaluationGenerator.ts"
                          },
                          {
                            "path": "src/evaluation/ResponseEvaluator.ts",
                            "type": "file",
                            "size": 7932,
                            "name": "ResponseEvaluator.ts"
                          },
                          {
                            "path": "src/evaluation/TrajectoryEvaluator.ts",
                            "type": "file",
                            "size": 9828,
                            "name": "TrajectoryEvaluator.ts"
                          },
                          {
                            "path": "src/evaluation/index.ts",
                            "type": "file",
                            "size": 261,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/events",
                        "type": "dir",
                        "size": 0,
                        "name": "events",
                        "contents": [
                          {
                            "path": "src/events/Event.ts",
                            "type": "file",
                            "size": 4361,
                            "name": "Event.ts"
                          },
                          {
                            "path": "src/events/EventActions.ts",
                            "type": "file",
                            "size": 1463,
                            "name": "EventActions.ts"
                          },
                          {
                            "path": "src/events/index.ts",
                            "type": "file",
                            "size": 83,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/flows",
                        "type": "dir",
                        "size": 0,
                        "name": "flows",
                        "contents": [
                          {
                            "path": "src/flows/llm_flows",
                            "type": "dir",
                            "size": 0,
                            "name": "llm_flows",
                            "contents": [
                              {
                                "path": "src/flows/llm_flows/AudioTranscriber.ts",
                                "type": "file",
                                "size": 2494,
                                "name": "AudioTranscriber.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/AutoFlow.ts",
                                "type": "file",
                                "size": 2084,
                                "name": "AutoFlow.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/BaseLlmFlow.ts",
                                "type": "file",
                                "size": 29794,
                                "name": "BaseLlmFlow.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/BaseLlmProcessor.ts",
                                "type": "file",
                                "size": 1172,
                                "name": "BaseLlmProcessor.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/CodeExecution.ts",
                                "type": "file",
                                "size": 15929,
                                "name": "CodeExecution.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/NlPlanning.ts",
                                "type": "file",
                                "size": 4563,
                                "name": "NlPlanning.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/SingleFlow.ts",
                                "type": "file",
                                "size": 3021,
                                "name": "SingleFlow.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/agentTransfer.ts",
                                "type": "file",
                                "size": 6890,
                                "name": "agentTransfer.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/basic.ts",
                                "type": "file",
                                "size": 4835,
                                "name": "basic.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/contents.ts",
                                "type": "file",
                                "size": 15108,
                                "name": "contents.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/functions.ts",
                                "type": "file",
                                "size": 22116,
                                "name": "functions.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/identity.ts",
                                "type": "file",
                                "size": 1434,
                                "name": "identity.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/index.ts",
                                "type": "file",
                                "size": 770,
                                "name": "index.ts"
                              },
                              {
                                "path": "src/flows/llm_flows/instructions.ts",
                                "type": "file",
                                "size": 7956,
                                "name": "instructions.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/flows/index.ts",
                            "type": "file",
                            "size": 104,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/memory",
                        "type": "dir",
                        "size": 0,
                        "name": "memory",
                        "contents": [
                          {
                            "path": "src/memory/BaseMemoryService.ts",
                            "type": "file",
                            "size": 2251,
                            "name": "BaseMemoryService.ts"
                          },
                          {
                            "path": "src/memory/InMemoryMemoryService.ts",
                            "type": "file",
                            "size": 3737,
                            "name": "InMemoryMemoryService.ts"
                          },
                          {
                            "path": "src/memory/VertexAiRagMemoryService.ts",
                            "type": "file",
                            "size": 13398,
                            "name": "VertexAiRagMemoryService.ts"
                          },
                          {
                            "path": "src/memory/index.ts",
                            "type": "file",
                            "size": 2262,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/models",
                        "type": "dir",
                        "size": 0,
                        "name": "models",
                        "contents": [
                          {
                            "path": "src/models/AnthropicLlm.ts",
                            "type": "file",
                            "size": 15442,
                            "name": "AnthropicLlm.ts"
                          },
                          {
                            "path": "src/models/BaseLlm.ts",
                            "type": "file",
                            "size": 1490,
                            "name": "BaseLlm.ts"
                          },
                          {
                            "path": "src/models/BaseLlmConnection.ts",
                            "type": "file",
                            "size": 1559,
                            "name": "BaseLlmConnection.ts"
                          },
                          {
                            "path": "src/models/GeminiLlmConnection.ts",
                            "type": "file",
                            "size": 7430,
                            "name": "GeminiLlmConnection.ts"
                          },
                          {
                            "path": "src/models/GoogleLlm.ts",
                            "type": "file",
                            "size": 28818,
                            "name": "GoogleLlm.ts"
                          },
                          {
                            "path": "src/models/LiteLlm.ts",
                            "type": "file",
                            "size": 21331,
                            "name": "LiteLlm.ts"
                          },
                          {
                            "path": "src/models/LlmRegistry.ts",
                            "type": "file",
                            "size": 2746,
                            "name": "LlmRegistry.ts"
                          },
                          {
                            "path": "src/models/LlmRequest.ts",
                            "type": "file",
                            "size": 8415,
                            "name": "LlmRequest.ts"
                          },
                          {
                            "path": "src/models/LlmResponse.ts",
                            "type": "file",
                            "size": 8009,
                            "name": "LlmResponse.ts"
                          },
                          {
                            "path": "src/models/index.ts",
                            "type": "file",
                            "size": 841,
                            "name": "index.ts"
                          },
                          {
                            "path": "src/models/types.ts",
                            "type": "file",
                            "size": 2621,
                            "name": "types.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/planners",
                        "type": "dir",
                        "size": 0,
                        "name": "planners",
                        "contents": [
                          {
                            "path": "src/planners/BasePlanner.ts",
                            "type": "file",
                            "size": 1233,
                            "name": "BasePlanner.ts"
                          },
                          {
                            "path": "src/planners/BuiltInPlanner.ts",
                            "type": "file",
                            "size": 1830,
                            "name": "BuiltInPlanner.ts"
                          },
                          {
                            "path": "src/planners/PlanReActPlanner.ts",
                            "type": "file",
                            "size": 8009,
                            "name": "PlanReActPlanner.ts"
                          },
                          {
                            "path": "src/planners/index.ts",
                            "type": "file",
                            "size": 154,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/sessions",
                        "type": "dir",
                        "size": 0,
                        "name": "sessions",
                        "contents": [
                          {
                            "path": "src/sessions/Session.ts",
                            "type": "file",
                            "size": 2982,
                            "name": "Session.ts"
                          },
                          {
                            "path": "src/sessions/baseSessionService.ts",
                            "type": "file",
                            "size": 5493,
                            "name": "baseSessionService.ts"
                          },
                          {
                            "path": "src/sessions/databaseSessionService.ts",
                            "type": "file",
                            "size": 22342,
                            "name": "databaseSessionService.ts"
                          },
                          {
                            "path": "src/sessions/inMemorySessionService.ts",
                            "type": "file",
                            "size": 11144,
                            "name": "inMemorySessionService.ts"
                          },
                          {
                            "path": "src/sessions/index.ts",
                            "type": "file",
                            "size": 199,
                            "name": "index.ts"
                          },
                          {
                            "path": "src/sessions/sessionUtils.ts",
                            "type": "file",
                            "size": 2397,
                            "name": "sessionUtils.ts"
                          },
                          {
                            "path": "src/sessions/state.ts",
                            "type": "file",
                            "size": 2380,
                            "name": "state.ts"
                          },
                          {
                            "path": "src/sessions/types.ts",
                            "type": "file",
                            "size": 2237,
                            "name": "types.ts"
                          },
                          {
                            "path": "src/sessions/vertexAiSessionService.ts",
                            "type": "file",
                            "size": 14617,
                            "name": "vertexAiSessionService.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/tools",
                        "type": "dir",
                        "size": 0,
                        "name": "tools",
                        "contents": [
                          {
                            "path": "src/tools/apihub-tool",
                            "type": "dir",
                            "size": 0,
                            "name": "apihub-tool",
                            "contents": [
                              {
                                "path": "src/tools/apihub-tool/clients",
                                "type": "dir",
                                "size": 0,
                                "name": "clients",
                                "contents": [
                                  {
                                    "path": "src/tools/apihub-tool/clients/APIHubClient.ts",
                                    "type": "file",
                                    "size": 10451,
                                    "name": "APIHubClient.ts"
                                  },
                                  {
                                    "path": "src/tools/apihub-tool/clients/SecretClient.ts",
                                    "type": "file",
                                    "size": 3368,
                                    "name": "SecretClient.ts"
                                  },
                                  {
                                    "path": "src/tools/apihub-tool/clients/index.ts",
                                    "type": "file",
                                    "size": 66,
                                    "name": "index.ts"
                                  }
                                ]
                              },
                              {
                                "path": "src/tools/apihub-tool/APIHubToolset.ts",
                                "type": "file",
                                "size": 6217,
                                "name": "APIHubToolset.ts"
                              },
                              {
                                "path": "src/tools/apihub-tool/index.ts",
                                "type": "file",
                                "size": 237,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/tools/application-integration-tool",
                            "type": "dir",
                            "size": 0,
                            "name": "application-integration-tool",
                            "contents": [
                              {
                                "path": "src/tools/application-integration-tool/ApplicationIntegrationToolset.ts",
                                "type": "file",
                                "size": 9073,
                                "name": "ApplicationIntegrationToolset.ts"
                              },
                              {
                                "path": "src/tools/application-integration-tool/ConnectionsClient.ts",
                                "type": "file",
                                "size": 1325,
                                "name": "ConnectionsClient.ts"
                              },
                              {
                                "path": "src/tools/application-integration-tool/IntegrationClient.ts",
                                "type": "file",
                                "size": 1902,
                                "name": "IntegrationClient.ts"
                              },
                              {
                                "path": "src/tools/application-integration-tool/IntegrationConnectorTool.ts",
                                "type": "file",
                                "size": 6756,
                                "name": "IntegrationConnectorTool.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/tools/google-api-tool",
                            "type": "dir",
                            "size": 0,
                            "name": "google-api-tool",
                            "contents": [
                              {
                                "path": "src/tools/google-api-tool/GoogleApiToOpenApiConverter.ts",
                                "type": "file",
                                "size": 18460,
                                "name": "GoogleApiToOpenApiConverter.ts"
                              },
                              {
                                "path": "src/tools/google-api-tool/GoogleApiTool.ts",
                                "type": "file",
                                "size": 2278,
                                "name": "GoogleApiTool.ts"
                              },
                              {
                                "path": "src/tools/google-api-tool/GoogleApiToolSet.ts",
                                "type": "file",
                                "size": 4469,
                                "name": "GoogleApiToolSet.ts"
                              },
                              {
                                "path": "src/tools/google-api-tool/GoogleApiToolSets.ts",
                                "type": "file",
                                "size": 4459,
                                "name": "GoogleApiToolSets.ts"
                              },
                              {
                                "path": "src/tools/google-api-tool/index.ts",
                                "type": "file",
                                "size": 692,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/tools/mcp-tool",
                            "type": "dir",
                            "size": 0,
                            "name": "mcp-tool",
                            "contents": [
                              {
                                "path": "src/tools/mcp-tool/ConversionUtils.ts",
                                "type": "file",
                                "size": 5932,
                                "name": "ConversionUtils.ts"
                              },
                              {
                                "path": "src/tools/mcp-tool/MCPSessionManager.ts",
                                "type": "file",
                                "size": 7827,
                                "name": "MCPSessionManager.ts"
                              },
                              {
                                "path": "src/tools/mcp-tool/MCPTool.ts",
                                "type": "file",
                                "size": 4453,
                                "name": "MCPTool.ts"
                              },
                              {
                                "path": "src/tools/mcp-tool/MCPToolset.ts",
                                "type": "file",
                                "size": 4588,
                                "name": "MCPToolset.ts"
                              },
                              {
                                "path": "src/tools/mcp-tool/index.ts",
                                "type": "file",
                                "size": 549,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/tools/openapi-tool",
                            "type": "dir",
                            "size": 0,
                            "name": "openapi-tool",
                            "contents": [
                              {
                                "path": "src/tools/openapi-tool/auth",
                                "type": "dir",
                                "size": 0,
                                "name": "auth",
                                "contents": [
                                  {
                                    "path": "src/tools/openapi-tool/auth/credential_exchangers",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "credential_exchangers",
                                    "contents": [
                                      {
                                        "path": "src/tools/openapi-tool/auth/credential_exchangers/AutoAuthCredentialExchanger.ts",
                                        "type": "file",
                                        "size": 4529,
                                        "name": "AutoAuthCredentialExchanger.ts"
                                      },
                                      {
                                        "path": "src/tools/openapi-tool/auth/credential_exchangers/BaseCredentialExchanger.ts",
                                        "type": "file",
                                        "size": 1168,
                                        "name": "BaseCredentialExchanger.ts"
                                      },
                                      {
                                        "path": "src/tools/openapi-tool/auth/credential_exchangers/OAuth2CredentialExchanger.ts",
                                        "type": "file",
                                        "size": 3292,
                                        "name": "OAuth2CredentialExchanger.ts"
                                      },
                                      {
                                        "path": "src/tools/openapi-tool/auth/credential_exchangers/ServiceAccountCredentialExchanger.ts",
                                        "type": "file",
                                        "size": 3432,
                                        "name": "ServiceAccountCredentialExchanger.ts"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "src/tools/openapi-tool/auth/AuthHelpers.ts",
                                    "type": "file",
                                    "size": 11334,
                                    "name": "AuthHelpers.ts"
                                  },
                                  {
                                    "path": "src/tools/openapi-tool/auth/AuthTypes.ts",
                                    "type": "file",
                                    "size": 3701,
                                    "name": "AuthTypes.ts"
                                  }
                                ]
                              },
                              {
                                "path": "src/tools/openapi-tool/common",
                                "type": "dir",
                                "size": 0,
                                "name": "common",
                                "contents": [
                                  {
                                    "path": "src/tools/openapi-tool/common/common.ts",
                                    "type": "file",
                                    "size": 8073,
                                    "name": "common.ts"
                                  }
                                ]
                              },
                              {
                                "path": "src/tools/openapi-tool/openapi-spec-parser",
                                "type": "dir",
                                "size": 0,
                                "name": "openapi-spec-parser",
                                "contents": [
                                  {
                                    "path": "src/tools/openapi-tool/openapi-spec-parser/OpenAPIToolset.ts",
                                    "type": "file",
                                    "size": 3188,
                                    "name": "OpenAPIToolset.ts"
                                  },
                                  {
                                    "path": "src/tools/openapi-tool/openapi-spec-parser/OpenApiSpecParser.ts",
                                    "type": "file",
                                    "size": 12726,
                                    "name": "OpenApiSpecParser.ts"
                                  },
                                  {
                                    "path": "src/tools/openapi-tool/openapi-spec-parser/OperationParser.ts",
                                    "type": "file",
                                    "size": 8674,
                                    "name": "OperationParser.ts"
                                  },
                                  {
                                    "path": "src/tools/openapi-tool/openapi-spec-parser/RestApiTool.ts",
                                    "type": "file",
                                    "size": 12855,
                                    "name": "RestApiTool.ts"
                                  }
                                ]
                              },
                              {
                                "path": "src/tools/openapi-tool/README.md",
                                "type": "file",
                                "size": 2155,
                                "name": "README.md"
                              },
                              {
                                "path": "src/tools/openapi-tool/index.ts",
                                "type": "file",
                                "size": 401,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/tools/retrieval",
                            "type": "dir",
                            "size": 0,
                            "name": "retrieval",
                            "contents": [
                              {
                                "path": "src/tools/retrieval/BaseRetrievalTool.ts",
                                "type": "file",
                                "size": 2288,
                                "name": "BaseRetrievalTool.ts"
                              },
                              {
                                "path": "src/tools/retrieval/FilesRetrieval.ts",
                                "type": "file",
                                "size": 2245,
                                "name": "FilesRetrieval.ts"
                              },
                              {
                                "path": "src/tools/retrieval/LlamaIndexRetrieval.ts",
                                "type": "file",
                                "size": 1998,
                                "name": "LlamaIndexRetrieval.ts"
                              },
                              {
                                "path": "src/tools/retrieval/VertexAiRagRetrieval.ts",
                                "type": "file",
                                "size": 5346,
                                "name": "VertexAiRagRetrieval.ts"
                              },
                              {
                                "path": "src/tools/retrieval/WebSearchTool.ts",
                                "type": "file",
                                "size": 2899,
                                "name": "WebSearchTool.ts"
                              },
                              {
                                "path": "src/tools/retrieval/index.ts",
                                "type": "file",
                                "size": 425,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "src/tools/AgentTool.ts",
                            "type": "file",
                            "size": 4262,
                            "name": "AgentTool.ts"
                          },
                          {
                            "path": "src/tools/BaseTool.ts",
                            "type": "file",
                            "size": 4369,
                            "name": "BaseTool.ts"
                          },
                          {
                            "path": "src/tools/BuiltInCodeExecutionTool.ts",
                            "type": "file",
                            "size": 2419,
                            "name": "BuiltInCodeExecutionTool.ts"
                          },
                          {
                            "path": "src/tools/CodeExecutionTool.ts",
                            "type": "file",
                            "size": 5267,
                            "name": "CodeExecutionTool.ts"
                          },
                          {
                            "path": "src/tools/CrewaiTool.ts",
                            "type": "file",
                            "size": 3262,
                            "name": "CrewaiTool.ts"
                          },
                          {
                            "path": "src/tools/ExampleTool.ts",
                            "type": "file",
                            "size": 3863,
                            "name": "ExampleTool.ts"
                          },
                          {
                            "path": "src/tools/ExitLoopTool.ts",
                            "type": "file",
                            "size": 1403,
                            "name": "ExitLoopTool.ts"
                          },
                          {
                            "path": "src/tools/FunctionTool.ts",
                            "type": "file",
                            "size": 2422,
                            "name": "FunctionTool.ts"
                          },
                          {
                            "path": "src/tools/GetUserChoiceTool.ts",
                            "type": "file",
                            "size": 2191,
                            "name": "GetUserChoiceTool.ts"
                          },
                          {
                            "path": "src/tools/GoogleSearchTool.ts",
                            "type": "file",
                            "size": 2719,
                            "name": "GoogleSearchTool.ts"
                          },
                          {
                            "path": "src/tools/LangchainTool.ts",
                            "type": "file",
                            "size": 2884,
                            "name": "LangchainTool.ts"
                          },
                          {
                            "path": "src/tools/LoadMemoryTool.ts",
                            "type": "file",
                            "size": 3057,
                            "name": "LoadMemoryTool.ts"
                          },
                          {
                            "path": "src/tools/LoadWebPageTool.ts",
                            "type": "file",
                            "size": 4176,
                            "name": "LoadWebPageTool.ts"
                          },
                          {
                            "path": "src/tools/LongRunningTool.ts",
                            "type": "file",
                            "size": 1187,
                            "name": "LongRunningTool.ts"
                          },
                          {
                            "path": "src/tools/PreloadMemoryTool.ts",
                            "type": "file",
                            "size": 3616,
                            "name": "PreloadMemoryTool.ts"
                          },
                          {
                            "path": "src/tools/ToolboxTool.ts",
                            "type": "file",
                            "size": 3675,
                            "name": "ToolboxTool.ts"
                          },
                          {
                            "path": "src/tools/TransferToAgentTool.ts",
                            "type": "file",
                            "size": 1732,
                            "name": "TransferToAgentTool.ts"
                          },
                          {
                            "path": "src/tools/VertexAISearchTool.ts",
                            "type": "file",
                            "size": 4312,
                            "name": "VertexAISearchTool.ts"
                          },
                          {
                            "path": "src/tools/automaticFunctionDeclaration.ts",
                            "type": "file",
                            "size": 26346,
                            "name": "automaticFunctionDeclaration.ts"
                          },
                          {
                            "path": "src/tools/index.ts",
                            "type": "file",
                            "size": 10746,
                            "name": "index.ts"
                          },
                          {
                            "path": "src/tools/toolActions.ts",
                            "type": "file",
                            "size": 503,
                            "name": "toolActions.ts"
                          },
                          {
                            "path": "src/tools/toolContext.ts",
                            "type": "file",
                            "size": 4898,
                            "name": "toolContext.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/types",
                        "type": "dir",
                        "size": 0,
                        "name": "types",
                        "contents": [
                          {
                            "path": "src/types/index.ts",
                            "type": "file",
                            "size": 710,
                            "name": "index.ts"
                          },
                          {
                            "path": "src/types/js-yaml.d.ts",
                            "type": "file",
                            "size": 145,
                            "name": "js-yaml.d.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/utils",
                        "type": "dir",
                        "size": 0,
                        "name": "utils",
                        "contents": [
                          {
                            "path": "src/utils/index.ts",
                            "type": "file",
                            "size": 1784,
                            "name": "index.ts"
                          }
                        ]
                      },
                      {
                        "path": "src/index.ts",
                        "type": "file",
                        "size": 1808,
                        "name": "index.ts"
                      },
                      {
                        "path": "src/runners.ts",
                        "type": "file",
                        "size": 18739,
                        "name": "runners.ts"
                      },
                      {
                        "path": "src/telemetry.ts",
                        "type": "file",
                        "size": 6829,
                        "name": "telemetry.ts"
                      }
                    ]
                  },
                  {
                    "path": "tests",
                    "type": "dir",
                    "size": 0,
                    "name": "tests",
                    "contents": [
                      {
                        "path": "tests/integration",
                        "type": "dir",
                        "size": 0,
                        "name": "integration",
                        "contents": [
                          {
                            "path": "tests/integration/fixture",
                            "type": "dir",
                            "size": 0,
                            "name": "fixture",
                            "contents": [
                              {
                                "path": "tests/integration/fixture/agent_with_config",
                                "type": "dir",
                                "size": 0,
                                "name": "agent_with_config",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/agent_with_config/agent.ts",
                                    "type": "file",
                                    "size": 2664,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/agent_with_config/test-config.json",
                                    "type": "file",
                                    "size": 48,
                                    "name": "test-config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/callback_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "callback_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/callback_agent/agent.ts",
                                    "type": "file",
                                    "size": 6490,
                                    "name": "agent.ts"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/context_update_test",
                                "type": "dir",
                                "size": 0,
                                "name": "context_update_test",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/context_update_test/OWNERS",
                                    "type": "file",
                                    "size": 6,
                                    "name": "OWNERS"
                                  },
                                  {
                                    "path": "tests/integration/fixture/context_update_test/agent.ts",
                                    "type": "file",
                                    "size": 2795,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/context_update_test/successful_test.session.json",
                                    "type": "file",
                                    "size": 16397,
                                    "name": "successful_test.session.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/context_update_test/test-config.json",
                                    "type": "file",
                                    "size": 64,
                                    "name": "test-config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/context_variable_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "context_variable_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/context_variable_agent/agent.ts",
                                    "type": "file",
                                    "size": 5263,
                                    "name": "agent.ts"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/customer_support_ma",
                                "type": "dir",
                                "size": 0,
                                "name": "customer_support_ma",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/customer_support_ma/agent.ts",
                                    "type": "file",
                                    "size": 12812,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/customer_support_ma/customer-support.test.json",
                                    "type": "file",
                                    "size": 450,
                                    "name": "customer-support.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/customer_support_ma/test-config.json",
                                    "type": "file",
                                    "size": 66,
                                    "name": "test-config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/ecommerce_customer_service_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "ecommerce_customer_service_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/agent.ts",
                                    "type": "file",
                                    "size": 16969,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/order_query.test.json",
                                    "type": "file",
                                    "size": 1704,
                                    "name": "order_query.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/test-config.json",
                                    "type": "file",
                                    "size": 142,
                                    "name": "test-config.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/ecommerce_customer_service_agent/test_config.json",
                                    "type": "file",
                                    "size": 94,
                                    "name": "test_config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/flow_complex_spark",
                                "type": "dir",
                                "size": 0,
                                "name": "flow_complex_spark",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/flow_complex_spark/agent.ts",
                                    "type": "file",
                                    "size": 6316,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/flow_complex_spark/sample.session.json",
                                    "type": "file",
                                    "size": 20759,
                                    "name": "sample.session.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/flow_complex_spark/test-config.json",
                                    "type": "file",
                                    "size": 67,
                                    "name": "test-config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/hello_world_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "hello_world_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/hello_world_agent/agent.ts",
                                    "type": "file",
                                    "size": 4447,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/hello_world_agent/roll-die.test.json",
                                    "type": "file",
                                    "size": 735,
                                    "name": "roll-die.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/hello_world_agent/test-config.json",
                                    "type": "file",
                                    "size": 94,
                                    "name": "test-config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/home_automation_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "home_automation_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/test_files",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "test_files",
                                    "contents": [
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/memorizing_past_events",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "memorizing_past_events",
                                        "contents": [
                                          {
                                            "path": "tests/integration/fixture/home_automation_agent/test_files/memorizing_past_events/eval_data.test.json",
                                            "type": "file",
                                            "size": 514,
                                            "name": "eval_data.test.json"
                                          },
                                          {
                                            "path": "tests/integration/fixture/home_automation_agent/test_files/memorizing_past_events/test_config.json",
                                            "type": "file",
                                            "size": 94,
                                            "name": "test_config.json"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/dependent_tool_calls.test.json",
                                        "type": "file",
                                        "size": 549,
                                        "name": "dependent_tool_calls.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/simple_multi_turn_conversation.test.json",
                                        "type": "file",
                                        "size": 618,
                                        "name": "simple_multi_turn_conversation.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/simple_test.test.json",
                                        "type": "file",
                                        "size": 514,
                                        "name": "simple_test.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/simple_test2.test.json",
                                        "type": "file",
                                        "size": 250,
                                        "name": "simple_test2.test.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/home_automation_agent/test_files/test_config.json",
                                        "type": "file",
                                        "size": 61,
                                        "name": "test_config.json"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/agent.ts",
                                    "type": "file",
                                    "size": 15130,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/index.ts",
                                    "type": "file",
                                    "size": 204,
                                    "name": "index.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/simple_test.test.json",
                                    "type": "file",
                                    "size": 250,
                                    "name": "simple_test.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/simple_test2.test.json",
                                    "type": "file",
                                    "size": 250,
                                    "name": "simple_test2.test.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/test-config.json",
                                    "type": "file",
                                    "size": 103,
                                    "name": "test-config.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/home_automation_agent/test_config.json",
                                    "type": "file",
                                    "size": 61,
                                    "name": "test_config.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/tool_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "tool_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/tool_agent/file",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "file",
                                    "contents": [
                                      {
                                        "path": "tests/integration/fixture/tool_agent/file/Agent_test_plan.pdf",
                                        "type": "file",
                                        "size": 55397,
                                        "name": "Agent_test_plan.pdf"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/integration/fixture/tool_agent/agent.d.ts",
                                    "type": "file",
                                    "size": 142,
                                    "name": "agent.d.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/tool_agent/agent.ts",
                                    "type": "file",
                                    "size": 17639,
                                    "name": "agent.ts"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/trip_planner_agent",
                                "type": "dir",
                                "size": 0,
                                "name": "trip_planner_agent",
                                "contents": [
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/test_files",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "test_files",
                                    "contents": [
                                      {
                                        "path": "tests/integration/fixture/trip_planner_agent/test_files/initial.session.json",
                                        "type": "file",
                                        "size": 278,
                                        "name": "initial.session.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/trip_planner_agent/test_files/test_config.json",
                                        "type": "file",
                                        "size": 92,
                                        "name": "test_config.json"
                                      },
                                      {
                                        "path": "tests/integration/fixture/trip_planner_agent/test_files/trip_inquiry_sub_agent.test.json",
                                        "type": "file",
                                        "size": 553,
                                        "name": "trip_inquiry_sub_agent.test.json"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/agent.d.ts",
                                    "type": "file",
                                    "size": 201,
                                    "name": "agent.d.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/agent.ts",
                                    "type": "file",
                                    "size": 3791,
                                    "name": "agent.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/index.ts",
                                    "type": "file",
                                    "size": 281,
                                    "name": "index.ts"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/initial.session.json",
                                    "type": "file",
                                    "size": 278,
                                    "name": "initial.session.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/test_config.json",
                                    "type": "file",
                                    "size": 56,
                                    "name": "test_config.json"
                                  },
                                  {
                                    "path": "tests/integration/fixture/trip_planner_agent/trip_inquiry.test.json",
                                    "type": "file",
                                    "size": 988,
                                    "name": "trip_inquiry.test.json"
                                  }
                                ]
                              },
                              {
                                "path": "tests/integration/fixture/index.ts",
                                "type": "file",
                                "size": 880,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "tests/integration/models",
                            "type": "dir",
                            "size": 0,
                            "name": "models",
                            "contents": [
                              {
                                "path": "tests/integration/models/googleLlm.test.ts",
                                "type": "file",
                                "size": 2707,
                                "name": "googleLlm.test.ts"
                              },
                              {
                                "path": "tests/integration/models/index.ts",
                                "type": "file",
                                "size": 120,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "tests/integration/utils",
                            "type": "dir",
                            "size": 0,
                            "name": "utils",
                            "contents": [
                              {
                                "path": "tests/integration/utils/TestAssertions.ts",
                                "type": "file",
                                "size": 7749,
                                "name": "TestAssertions.ts"
                              },
                              {
                                "path": "tests/integration/utils/TestRunner.ts",
                                "type": "file",
                                "size": 6312,
                                "name": "TestRunner.ts"
                              }
                            ]
                          },
                          {
                            "path": "tests/integration/.env.example",
                            "type": "file",
                            "size": 395,
                            "name": ".env.example"
                          },
                          {
                            "path": "tests/integration/basicFlowProcessor.test.ts",
                            "type": "file",
                            "size": 11379,
                            "name": "basicFlowProcessor.test.ts"
                          },
                          {
                            "path": "tests/integration/callback.test.ts",
                            "type": "file",
                            "size": 3566,
                            "name": "callback.test.ts"
                          },
                          {
                            "path": "tests/integration/contextVariable.test.ts",
                            "type": "file",
                            "size": 3016,
                            "name": "contextVariable.test.ts"
                          },
                          {
                            "path": "tests/integration/multiAgent.test.ts",
                            "type": "file",
                            "size": 2820,
                            "name": "multiAgent.test.ts"
                          },
                          {
                            "path": "tests/integration/multiTurn.test.ts",
                            "type": "file",
                            "size": 4728,
                            "name": "multiTurn.test.ts"
                          },
                          {
                            "path": "tests/integration/singleAgent.test.ts",
                            "type": "file",
                            "size": 2103,
                            "name": "singleAgent.test.ts"
                          },
                          {
                            "path": "tests/integration/subAgent.test.ts",
                            "type": "file",
                            "size": 4504,
                            "name": "subAgent.test.ts"
                          },
                          {
                            "path": "tests/integration/systemInstruction.test.ts",
                            "type": "file",
                            "size": 11443,
                            "name": "systemInstruction.test.ts"
                          },
                          {
                            "path": "tests/integration/testConfig.ts",
                            "type": "file",
                            "size": 2312,
                            "name": "testConfig.ts"
                          },
                          {
                            "path": "tests/integration/tools.test.ts",
                            "type": "file",
                            "size": 8140,
                            "name": "tools.test.ts"
                          }
                        ]
                      },
                      {
                        "path": "tests/unittests",
                        "type": "dir",
                        "size": 0,
                        "name": "unittests",
                        "contents": [
                          {
                            "path": "tests/unittests/agents",
                            "type": "dir",
                            "size": 0,
                            "name": "agents",
                            "contents": [
                              {
                                "path": "tests/unittests/agents/BaseAgent.test.ts",
                                "type": "file",
                                "size": 15003,
                                "name": "BaseAgent.test.ts"
                              },
                              {
                                "path": "tests/unittests/agents/LanggraphAgent.test.ts",
                                "type": "file",
                                "size": 6235,
                                "name": "LanggraphAgent.test.ts"
                              },
                              {
                                "path": "tests/unittests/agents/LlmAgent.test.ts",
                                "type": "file",
                                "size": 7646,
                                "name": "LlmAgent.test.ts"
                              },
                              {
                                "path": "tests/unittests/agents/LlmAgentCallbacks.test.ts",
                                "type": "file",
                                "size": 9814,
                                "name": "LlmAgentCallbacks.test.ts"
                              },
                              {
                                "path": "tests/unittests/agents/LoopAgent.test.ts",
                                "type": "file",
                                "size": 9110,
                                "name": "LoopAgent.test.ts"
                              },
                              {
                                "path": "tests/unittests/agents/ParallelAgent.test.ts",
                                "type": "file",
                                "size": 6451,
                                "name": "ParallelAgent.test.ts"
                              },
                              {
                                "path": "tests/unittests/agents/SequentialAgent.test.ts",
                                "type": "file",
                                "size": 6098,
                                "name": "SequentialAgent.test.ts"
                              },
                              {
                                "path": "tests/unittests/agents/index.ts",
                                "type": "file",
                                "size": 239,
                                "name": "index.ts"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/flows",
                            "type": "dir",
                            "size": 0,
                            "name": "flows",
                            "contents": [
                              {
                                "path": "tests/unittests/flows/llm_flows",
                                "type": "dir",
                                "size": 0,
                                "name": "llm_flows",
                                "contents": [
                                  {
                                    "path": "tests/unittests/flows/llm_flows/agentTransfer.test.ts",
                                    "type": "file",
                                    "size": 9023,
                                    "name": "agentTransfer.test.ts"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/asyncToolCallbacks.test.ts",
                                    "type": "file",
                                    "size": 6118,
                                    "name": "asyncToolCallbacks.test.ts"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/autoFlow.test.ts",
                                    "type": "file",
                                    "size": 9301,
                                    "name": "autoFlow.test.ts"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/identity.test.ts",
                                    "type": "file",
                                    "size": 3367,
                                    "name": "identity.test.ts"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/instructions.test.ts",
                                    "type": "file",
                                    "size": 5463,
                                    "name": "instructions.test.ts"
                                  },
                                  {
                                    "path": "tests/unittests/flows/llm_flows/singleFlow.test.ts",
                                    "type": "file",
                                    "size": 8516,
                                    "name": "singleFlow.test.ts"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/models",
                            "type": "dir",
                            "size": 0,
                            "name": "models",
                            "contents": [
                              {
                                "path": "tests/unittests/models/gemini.test.ts",
                                "type": "file",
                                "size": 6666,
                                "name": "gemini.test.ts"
                              },
                              {
                                "path": "tests/unittests/models/geminiLlmConnection.test.ts",
                                "type": "file",
                                "size": 10511,
                                "name": "geminiLlmConnection.test.ts"
                              },
                              {
                                "path": "tests/unittests/models/litellm.test.ts",
                                "type": "file",
                                "size": 30989,
                                "name": "litellm.test.ts"
                              },
                              {
                                "path": "tests/unittests/models/models.test.ts",
                                "type": "file",
                                "size": 1675,
                                "name": "models.test.ts"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/sessions",
                            "type": "dir",
                            "size": 0,
                            "name": "sessions",
                            "contents": [
                              {
                                "path": "tests/unittests/sessions/sessionService.test.ts",
                                "type": "file",
                                "size": 11141,
                                "name": "sessionService.test.ts"
                              },
                              {
                                "path": "tests/unittests/sessions/vertexAiSessionService.test.ts",
                                "type": "file",
                                "size": 9939,
                                "name": "vertexAiSessionService.test.ts"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/streaming",
                            "type": "dir",
                            "size": 0,
                            "name": "streaming",
                            "contents": [
                              {
                                "path": "tests/unittests/streaming/streaming.test.ts",
                                "type": "file",
                                "size": 3088,
                                "name": "streaming.test.ts"
                              }
                            ]
                          },
                          {
                            "path": "tests/unittests/tools",
                            "type": "dir",
                            "size": 0,
                            "name": "tools",
                            "contents": [
                              {
                                "path": "tests/unittests/tools/application_integration_tool",
                                "type": "dir",
                                "size": 0,
                                "name": "application_integration_tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/application_integration_tool/applicationIntegrationToolset.test.ts",
                                    "type": "file",
                                    "size": 10487,
                                    "name": "applicationIntegrationToolset.test.ts"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/google_api_tool",
                                "type": "dir",
                                "size": 0,
                                "name": "google_api_tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/google_api_tool/googleApiToOpenApiConverter.test.ts",
                                    "type": "file",
                                    "size": 19198,
                                    "name": "googleApiToOpenApiConverter.test.ts"
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/openapi-tool",
                                "type": "dir",
                                "size": 0,
                                "name": "openapi-tool",
                                "contents": [
                                  {
                                    "path": "tests/unittests/tools/openapi-tool/auth",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "auth",
                                    "contents": [
                                      {
                                        "path": "tests/unittests/tools/openapi-tool/auth/credential_exchangers",
                                        "type": "dir",
                                        "size": 0,
                                        "name": "credential_exchangers",
                                        "contents": [
                                          {
                                            "path": "tests/unittests/tools/openapi-tool/auth/credential_exchangers/autoAuthCredentialExchanger.test.ts",
                                            "type": "file",
                                            "size": 6694,
                                            "name": "autoAuthCredentialExchanger.test.ts"
                                          },
                                          {
                                            "path": "tests/unittests/tools/openapi-tool/auth/credential_exchangers/baseCredentialExchanger.test.ts",
                                            "type": "file",
                                            "size": 3517,
                                            "name": "baseCredentialExchanger.test.ts"
                                          },
                                          {
                                            "path": "tests/unittests/tools/openapi-tool/auth/credential_exchangers/oauth2CredentialExchanger.test.ts",
                                            "type": "file",
                                            "size": 5343,
                                            "name": "oauth2CredentialExchanger.test.ts"
                                          },
                                          {
                                            "path": "tests/unittests/tools/openapi-tool/auth/credential_exchangers/serviceAccountCredentialExchanger.test.ts",
                                            "type": "file",
                                            "size": 5862,
                                            "name": "serviceAccountCredentialExchanger.test.ts"
                                          }
                                        ]
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi-tool/auth/authHelpers.test.ts",
                                        "type": "file",
                                        "size": 19980,
                                        "name": "authHelpers.test.ts"
                                      }
                                    ]
                                  },
                                  {
                                    "path": "tests/unittests/tools/openapi-tool/openapi_spec_parser",
                                    "type": "dir",
                                    "size": 0,
                                    "name": "openapi_spec_parser",
                                    "contents": [
                                      {
                                        "path": "tests/unittests/tools/openapi-tool/openapi_spec_parser/openApiSpecParser.test.ts",
                                        "type": "file",
                                        "size": 18557,
                                        "name": "openApiSpecParser.test.ts"
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi-tool/openapi_spec_parser/operationParser.test.ts",
                                        "type": "file",
                                        "size": 9551,
                                        "name": "operationParser.test.ts"
                                      },
                                      {
                                        "path": "tests/unittests/tools/openapi-tool/openapi_spec_parser/restApiTool.test.ts",
                                        "type": "file",
                                        "size": 6329,
                                        "name": "restApiTool.test.ts"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "path": "tests/unittests/tools/agentTool.test.ts",
                                "type": "file",
                                "size": 9819,
                                "name": "agentTool.test.ts"
                              },
                              {
                                "path": "tests/unittests/tools/automaticFunctionDeclaration.test.ts",
                                "type": "file",
                                "size": 14620,
                                "name": "automaticFunctionDeclaration.test.ts"
                              },
                              {
                                "path": "tests/unittests/tools/baseTool.test.ts",
                                "type": "file",
                                "size": 5987,
                                "name": "baseTool.test.ts"
                              },
                              {
                                "path": "tests/unittests/tools/functionTool.test.ts",
                                "type": "file",
                                "size": 10355,
                                "name": "functionTool.test.ts"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "path": ".env.example",
                    "type": "file",
                    "size": 395,
                    "name": ".env.example"
                  },
                  {
                    "path": ".eslintrc.js",
                    "type": "file",
                    "size": 786,
                    "name": ".eslintrc.js"
                  },
                  {
                    "path": ".gitignore",
                    "type": "file",
                    "size": 567,
                    "name": ".gitignore"
                  },
                  {
                    "path": ".npmignore",
                    "type": "file",
                    "size": 429,
                    "name": ".npmignore"
                  },
                  {
                    "path": "CHANGELOG.md",
                    "type": "file",
                    "size": 880,
                    "name": "CHANGELOG.md"
                  },
                  {
                    "path": "CONTRIBUTING.md",
                    "type": "file",
                    "size": 1128,
                    "name": "CONTRIBUTING.md"
                  },
                  {
                    "path": "LICENSE",
                    "type": "file",
                    "size": 11357,
                    "name": "LICENSE"
                  },
                  {
                    "path": "README.md",
                    "type": "file",
                    "size": 9699,
                    "name": "README.md"
                  },
                  {
                    "path": "jest.config.js",
                    "type": "file",
                    "size": 564,
                    "name": "jest.config.js"
                  },
                  {
                    "path": "mkdocs.yml",
                    "type": "file",
                    "size": 4385,
                    "name": "mkdocs.yml"
                  },
                  {
                    "path": "package-lock.json",
                    "type": "file",
                    "size": 383182,
                    "name": "package-lock.json"
                  },
                  {
                    "path": "package.json",
                    "type": "file",
                    "size": 3056,
                    "name": "package.json"
                  },
                  {
                    "path": "project.md",
                    "type": "file",
                    "size": 1360,
                    "name": "project.md"
                  },
                  {
                    "path": "tsconfig.json",
                    "type": "file",
                    "size": 541,
                    "name": "tsconfig.json"
                  },
                  {
                    "path": "typedoc.json",
                    "type": "file",
                    "size": 1489,
                    "name": "typedoc.json"
                  }
                ],
                "python_context_files": {
                  "src/google/adk/models/google_llm.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\nfrom __future__ import annotations\n\nimport contextlib\nfrom functools import cached_property\nimport logging\nimport os\nimport sys\nfrom typing import AsyncGenerator\nfrom typing import cast\nfrom typing import TYPE_CHECKING\nfrom typing import Union\n\nfrom google.genai import Client\nfrom google.genai import types\nfrom typing_extensions import override\n\nfrom .. import version\nfrom ..utils.variant_utils import GoogleLLMVariant\nfrom .base_llm import BaseLlm\nfrom .base_llm_connection import BaseLlmConnection\nfrom .gemini_llm_connection import GeminiLlmConnection\nfrom .llm_response import LlmResponse\n\nif TYPE_CHECKING:\n  from .llm_request import LlmRequest\n\nlogger = logging.getLogger('google_adk.' + __name__)\n\n_NEW_LINE = '\\n'\n_EXCLUDED_PART_FIELD = {'inline_data': {'data'}}\n_AGENT_ENGINE_TELEMETRY_TAG = 'remote_reasoning_engine'\n_AGENT_ENGINE_TELEMETRY_ENV_VARIABLE_NAME = 'GOOGLE_CLOUD_AGENT_ENGINE_ID'\n\n\nclass Gemini(BaseLlm):\n  \"\"\"Integration for Gemini models.\n\n  Attributes:\n    model: The name of the Gemini model.\n  \"\"\"\n\n  model: str = 'gemini-1.5-flash'\n\n  @staticmethod\n  @override\n  def supported_models() -> list[str]:\n    \"\"\"Provides the list of supported models.\n\n    Returns:\n      A list of supported models.\n    \"\"\"\n\n    return [\n        r'gemini-.*',\n        # fine-tuned vertex endpoint pattern\n        r'projects\\/.+\\/locations\\/.+\\/endpoints\\/.+',\n        # vertex gemini long name\n        r'projects\\/.+\\/locations\\/.+\\/publishers\\/google\\/models\\/gemini.+',\n    ]\n\n  async def generate_content_async(\n      self, llm_request: LlmRequest, stream: bool = False\n  ) -> AsyncGenerator[LlmResponse, None]:\n    \"\"\"Sends a request to the Gemini model.\n\n    Args:\n      llm_request: LlmRequest, the request to send to the Gemini model.\n      stream: bool = False, whether to do streaming call.\n\n    Yields:\n      LlmResponse: The model response.\n    \"\"\"\n    self._preprocess_request(llm_request)\n    self._maybe_append_user_content(llm_request)\n    logger.info(\n        'Sending out request, model: %s, backend: %s, stream: %s',\n        llm_request.model,\n        self._api_backend,\n        stream,\n    )\n    logger.info(_build_request_log(llm_request))\n\n    # add tracking headers to custom headers given it will override the headers\n    # set in the api client constructor\n    if llm_request.config and llm_request.config.http_options:\n      if not llm_request.config.http_options.headers:\n        llm_request.config.http_options.headers = {}\n      llm_request.config.http_options.headers.update(self._tracking_headers)\n\n    if stream:\n      responses = await self.api_client.aio.models.generate_content_stream(\n          model=llm_request.model,\n          contents=llm_request.contents,\n          config=llm_request.config,\n      )\n      response = None\n      thought_text = ''\n      text = ''\n      usage_metadata = None\n      # for sse, similar as bidi (see receive method in gemini_llm_connecton.py),\n      # we need to mark those text content as partial and after all partial\n      # contents are sent, we send an accumulated event which contains all the\n      # previous partial content. The only difference is bidi rely on\n      # complete_turn flag to detect end while sse depends on finish_reason.\n      async for response in responses:\n        logger.info(_build_response_log(response))\n        llm_response = LlmResponse.create(response)\n        usage_metadata = llm_response.usage_metadata\n        if (\n            llm_response.content\n            and llm_response.content.parts\n            and llm_response.content.parts[0].text\n        ):\n          part0 = llm_response.content.parts[0]\n          if part0.thought:\n            thought_text += part0.text\n          else:\n            text += part0.text\n          llm_response.partial = True\n        elif (thought_text or text) and (\n            not llm_response.content\n            or not llm_response.content.parts\n            # don't yield the merged text event when receiving audio data\n            or not llm_response.content.parts[0].inline_data\n        ):\n          parts = []\n          if thought_text:\n            parts.append(types.Part(text=thought_text, thought=True))\n          if text:\n            parts.append(types.Part.from_text(text=text))\n          yield LlmResponse(\n              content=types.ModelContent(parts=parts),\n              usage_metadata=llm_response.usage_metadata,\n          )\n          thought_text = ''\n          text = ''\n        yield llm_response\n      if (\n          (text or thought_text)\n          and response\n          and response.candidates\n          and response.candidates[0].finish_reason == types.FinishReason.STOP\n      ):\n        parts = []\n        if thought_text:\n          parts.append(types.Part(text=thought_text, thought=True))\n        if text:\n          parts.append(types.Part.from_text(text=text))\n        yield LlmResponse(\n            content=types.ModelContent(parts=parts),\n            usage_metadata=usage_metadata,\n        )\n\n    else:\n      response = await self.api_client.aio.models.generate_content(\n          model=llm_request.model,\n          contents=llm_request.contents,\n          config=llm_request.config,\n      )\n      logger.info(_build_response_log(response))\n      yield LlmResponse.create(response)\n\n  @cached_property\n  def api_client(self) -> Client:\n    \"\"\"Provides the api client.\n\n    Returns:\n      The api client.\n    \"\"\"\n    return Client(\n        http_options=types.HttpOptions(headers=self._tracking_headers)\n    )\n\n  @cached_property\n  def _api_backend(self) -> GoogleLLMVariant:\n    return (\n        GoogleLLMVariant.VERTEX_AI\n        if self.api_client.vertexai\n        else GoogleLLMVariant.GEMINI_API\n    )\n\n  @cached_property\n  def _tracking_headers(self) -> dict[str, str]:\n    framework_label = f'google-adk/{version.__version__}'\n    if os.environ.get(_AGENT_ENGINE_TELEMETRY_ENV_VARIABLE_NAME):\n      framework_label = f'{framework_label}+{_AGENT_ENGINE_TELEMETRY_TAG}'\n    language_label = 'gl-python/' + sys.version.split()[0]\n    version_header_value = f'{framework_label} {language_label}'\n    tracking_headers = {\n        'x-goog-api-client': version_header_value,\n        'user-agent': version_header_value,\n    }\n    return tracking_headers\n\n  @cached_property\n  def _live_api_version(self) -> str:\n    if self._api_backend == GoogleLLMVariant.VERTEX_AI:\n      # use beta version for vertex api\n      return 'v1beta1'\n    else:\n      # use v1alpha for using API KEY from Google AI Studio\n      return 'v1alpha'\n\n  @cached_property\n  def _live_api_client(self) -> Client:\n    return Client(\n        http_options=types.HttpOptions(\n            headers=self._tracking_headers, api_version=self._live_api_version\n        )\n    )\n\n  @contextlib.asynccontextmanager\n  async def connect(self, llm_request: LlmRequest) -> BaseLlmConnection:\n    \"\"\"Connects to the Gemini model and returns an llm connection.\n\n    Args:\n      llm_request: LlmRequest, the request to send to the Gemini model.\n\n    Yields:\n      BaseLlmConnection, the connection to the Gemini model.\n    \"\"\"\n    # add tracking headers to custom headers and set api_version given\n    # the customized http options will override the one set in the api client\n    # constructor\n    if (\n        llm_request.live_connect_config\n        and llm_request.live_connect_config.http_options\n    ):\n      if not llm_request.live_connect_config.http_options.headers:\n        llm_request.live_connect_config.http_options.headers = {}\n      llm_request.live_connect_config.http_options.headers.update(\n          self._tracking_headers\n      )\n      llm_request.live_connect_config.http_options.api_version = (\n          self._live_api_version\n      )\n\n    llm_request.live_connect_config.system_instruction = types.Content(\n        role='system',\n        parts=[\n            types.Part.from_text(text=llm_request.config.system_instruction)\n        ],\n    )\n    llm_request.live_connect_config.tools = llm_request.config.tools\n    async with self._live_api_client.aio.live.connect(\n        model=llm_request.model, config=llm_request.live_connect_config\n    ) as live_session:\n      yield GeminiLlmConnection(live_session)\n\n  def _preprocess_request(self, llm_request: LlmRequest) -> None:\n\n    if self._api_backend == GoogleLLMVariant.GEMINI_API:\n      # Using API key from Google AI Studio to call model doesn't support labels.\n      if llm_request.config:\n        llm_request.config.labels = None\n\n      if llm_request.contents:\n        for content in llm_request.contents:\n          if not content.parts:\n            continue\n          for part in content.parts:\n            _remove_display_name_if_present(part.inline_data)\n            _remove_display_name_if_present(part.file_data)\n\n\ndef _build_function_declaration_log(\n    func_decl: types.FunctionDeclaration,\n) -> str:\n  param_str = '{}'\n  if func_decl.parameters and func_decl.parameters.properties:\n    param_str = str({\n        k: v.model_dump(exclude_none=True)\n        for k, v in func_decl.parameters.properties.items()\n    })\n  return_str = ''\n  if func_decl.response:\n    return_str = '-> ' + str(func_decl.response.model_dump(exclude_none=True))\n  return f'{func_decl.name}: {param_str} {return_str}'\n\n\ndef _build_request_log(req: LlmRequest) -> str:\n  function_decls: list[types.FunctionDeclaration] = cast(\n      list[types.FunctionDeclaration],\n      req.config.tools[0].function_declarations if req.config.tools else [],\n  )\n  function_logs = (\n      [\n          _build_function_declaration_log(func_decl)\n          for func_decl in function_decls\n      ]\n      if function_decls\n      else []\n  )\n  contents_logs = [\n      content.model_dump_json(\n          exclude_none=True,\n          exclude={\n              'parts': {\n                  i: _EXCLUDED_PART_FIELD for i in range(len(content.parts))\n              }\n          },\n      )\n      for content in req.contents\n  ]\n\n  return f\"\"\"\nLLM Request:\n-----------------------------------------------------------\nSystem Instruction:\n{req.config.system_instruction}\n-----------------------------------------------------------\nContents:\n{_NEW_LINE.join(contents_logs)}\n-----------------------------------------------------------\nFunctions:\n{_NEW_LINE.join(function_logs)}\n-----------------------------------------------------------\n\"\"\"\n\n\ndef _build_response_log(resp: types.GenerateContentResponse) -> str:\n  function_calls_text = []\n  if function_calls := resp.function_calls:\n    for func_call in function_calls:\n      function_calls_text.append(\n          f'name: {func_call.name}, args: {func_call.args}'\n      )\n  return f\"\"\"\nLLM Response:\n-----------------------------------------------------------\nText:\n{resp.text}\n-----------------------------------------------------------\nFunction calls:\n{_NEW_LINE.join(function_calls_text)}\n-----------------------------------------------------------\nRaw response:\n{resp.model_dump_json(exclude_none=True)}\n-----------------------------------------------------------\n\"\"\"\n\n\ndef _remove_display_name_if_present(\n    data_obj: Union[types.Blob, types.FileData, None],\n):\n  \"\"\"Sets display_name to None for the Gemini API (non-Vertex) backend.\n\n  This backend does not support the display_name parameter for file uploads,\n  so it must be removed to prevent request failures.\n  \"\"\"\n  if data_obj and data_obj.display_name:\n    data_obj.display_name = None\n",
                  "tests/unittests/models/test_google_llm.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport os\nimport sys\nfrom typing import Optional\nfrom unittest import mock\n\nfrom google.adk import version as adk_version\nfrom google.adk.models.gemini_llm_connection import GeminiLlmConnection\nfrom google.adk.models.google_llm import _AGENT_ENGINE_TELEMETRY_ENV_VARIABLE_NAME\nfrom google.adk.models.google_llm import _AGENT_ENGINE_TELEMETRY_TAG\nfrom google.adk.models.google_llm import Gemini\nfrom google.adk.models.llm_request import LlmRequest\nfrom google.adk.models.llm_response import LlmResponse\nfrom google.adk.utils.variant_utils import GoogleLLMVariant\nfrom google.genai import types\nfrom google.genai import version as genai_version\nfrom google.genai.types import Content\nfrom google.genai.types import Part\nimport pytest\n\n\n@pytest.fixture\ndef generate_content_response():\n  return types.GenerateContentResponse(\n      candidates=[\n          types.Candidate(\n              content=Content(\n                  role=\"model\",\n                  parts=[Part.from_text(text=\"Hello, how can I help you?\")],\n              ),\n              finish_reason=types.FinishReason.STOP,\n          )\n      ]\n  )\n\n\n@pytest.fixture\ndef gemini_llm():\n  return Gemini(model=\"gemini-1.5-flash\")\n\n\n@pytest.fixture\ndef llm_request():\n  return LlmRequest(\n      model=\"gemini-1.5-flash\",\n      contents=[Content(role=\"user\", parts=[Part.from_text(text=\"Hello\")])],\n      config=types.GenerateContentConfig(\n          temperature=0.1,\n          response_modalities=[types.Modality.TEXT],\n          system_instruction=\"You are a helpful assistant\",\n      ),\n  )\n\n\n@pytest.fixture\ndef mock_os_environ():\n  initial_env = os.environ.copy()\n  with mock.patch.dict(os.environ, initial_env, clear=False) as m:\n    yield m\n\n\ndef test_supported_models():\n  models = Gemini.supported_models()\n  assert len(models) == 3\n  assert models[0] == r\"gemini-.*\"\n  assert models[1] == r\"projects\\/.+\\/locations\\/.+\\/endpoints\\/.+\"\n  assert (\n      models[2]\n      == r\"projects\\/.+\\/locations\\/.+\\/publishers\\/google\\/models\\/gemini.+\"\n  )\n\n\ndef test_client_version_header():\n  model = Gemini(model=\"gemini-1.5-flash\")\n  client = model.api_client\n  adk_header = (\n      f\"google-adk/{adk_version.__version__} gl-python/{sys.version.split()[0]}\"\n  )\n  genai_header = (\n      f\"google-genai-sdk/{genai_version.__version__} gl-python/{sys.version.split()[0]} \"\n  )\n  expected_header = genai_header + adk_header\n\n  assert (\n      expected_header\n      in client._api_client._http_options.headers[\"x-goog-api-client\"]\n  )\n  assert (\n      expected_header in client._api_client._http_options.headers[\"user-agent\"]\n  )\n\n\ndef test_client_version_header_with_agent_engine(mock_os_environ):\n  os.environ[_AGENT_ENGINE_TELEMETRY_ENV_VARIABLE_NAME] = \"my_test_project\"\n  model = Gemini(model=\"gemini-1.5-flash\")\n  client = model.api_client\n  adk_header_base = f\"google-adk/{adk_version.__version__}\"\n  adk_header_with_telemetry = (\n      f\"{adk_header_base}+{_AGENT_ENGINE_TELEMETRY_TAG}\"\n      f\" gl-python/{sys.version.split()[0]}\"\n  )\n  genai_header = (\n      f\"google-genai-sdk/{genai_version.__version__} \"\n      f\"gl-python/{sys.version.split()[0]} \"\n  )\n  expected_header = genai_header + adk_header_with_telemetry\n\n  assert (\n      expected_header\n      in client._api_client._http_options.headers[\"x-goog-api-client\"]\n  )\n  assert (\n      expected_header in client._api_client._http_options.headers[\"user-agent\"]\n  )\n\n\ndef test_maybe_append_user_content(gemini_llm, llm_request):\n  # Test with user content already present\n  gemini_llm._maybe_append_user_content(llm_request)\n  assert len(llm_request.contents) == 1\n\n  # Test with model content as the last message\n  llm_request.contents.append(\n      Content(role=\"model\", parts=[Part.from_text(text=\"Response\")])\n  )\n  gemini_llm._maybe_append_user_content(llm_request)\n  assert len(llm_request.contents) == 3\n  assert llm_request.contents[-1].role == \"user\"\n  assert \"Continue processing\" in llm_request.contents[-1].parts[0].text\n\n\n@pytest.mark.asyncio\nasync def test_generate_content_async(\n    gemini_llm, llm_request, generate_content_response\n):\n  with mock.patch.object(gemini_llm, \"api_client\") as mock_client:\n    # Create a mock coroutine that returns the generate_content_response\n    async def mock_coro():\n      return generate_content_response\n\n    # Assign the coroutine to the mocked method\n    mock_client.aio.models.generate_content.return_value = mock_coro()\n\n    responses = [\n        resp\n        async for resp in gemini_llm.generate_content_async(\n            llm_request, stream=False\n        )\n    ]\n\n    assert len(responses) == 1\n    assert isinstance(responses[0], LlmResponse)\n    assert responses[0].content.parts[0].text == \"Hello, how can I help you?\"\n    mock_client.aio.models.generate_content.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_generate_content_async_stream(gemini_llm, llm_request):\n  with mock.patch.object(gemini_llm, \"api_client\") as mock_client:\n    # Create mock stream responses\n    class MockAsyncIterator:\n\n      def __init__(self, seq):\n        self.iter = iter(seq)\n\n      def __aiter__(self):\n        return self\n\n      async def __anext__(self):\n        try:\n          return next(self.iter)\n        except StopIteration:\n          raise StopAsyncIteration\n\n    mock_responses = [\n        types.GenerateContentResponse(\n            candidates=[\n                types.Candidate(\n                    content=Content(\n                        role=\"model\", parts=[Part.from_text(text=\"Hello\")]\n                    ),\n                    finish_reason=None,\n                )\n            ]\n        ),\n        types.GenerateContentResponse(\n            candidates=[\n                types.Candidate(\n                    content=Content(\n                        role=\"model\", parts=[Part.from_text(text=\", how\")]\n                    ),\n                    finish_reason=None,\n                )\n            ]\n        ),\n        types.GenerateContentResponse(\n            candidates=[\n                types.Candidate(\n                    content=Content(\n                        role=\"model\",\n                        parts=[Part.from_text(text=\" can I help you?\")],\n                    ),\n                    finish_reason=types.FinishReason.STOP,\n                )\n            ]\n        ),\n    ]\n\n    # Create a mock coroutine that returns the MockAsyncIterator\n    async def mock_coro():\n      return MockAsyncIterator(mock_responses)\n\n    # Set the mock to return the coroutine\n    mock_client.aio.models.generate_content_stream.return_value = mock_coro()\n\n    responses = [\n        resp\n        async for resp in gemini_llm.generate_content_async(\n            llm_request, stream=True\n        )\n    ]\n\n    # Assertions remain the same\n    assert len(responses) == 4\n    assert responses[0].partial is True\n    assert responses[1].partial is True\n    assert responses[2].partial is True\n    assert responses[3].content.parts[0].text == \"Hello, how can I help you?\"\n    mock_client.aio.models.generate_content_stream.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_generate_content_async_stream_preserves_thinking_and_text_parts(\n    gemini_llm, llm_request\n):\n  with mock.patch.object(gemini_llm, \"api_client\") as mock_client:\n\n    class MockAsyncIterator:\n\n      def __init__(self, seq):\n        self._iter = iter(seq)\n\n      def __aiter__(self):\n        return self\n\n      async def __anext__(self):\n        try:\n          return next(self._iter)\n        except StopIteration:\n          raise StopAsyncIteration\n\n    response1 = types.GenerateContentResponse(\n        candidates=[\n            types.Candidate(\n                content=Content(\n                    role=\"model\",\n                    parts=[Part(text=\"Think1\", thought=True)],\n                ),\n                finish_reason=None,\n            )\n        ]\n    )\n    response2 = types.GenerateContentResponse(\n        candidates=[\n            types.Candidate(\n                content=Content(\n                    role=\"model\",\n                    parts=[Part(text=\"Think2\", thought=True)],\n                ),\n                finish_reason=None,\n            )\n        ]\n    )\n    response3 = types.GenerateContentResponse(\n        candidates=[\n            types.Candidate(\n                content=Content(\n                    role=\"model\",\n                    parts=[Part.from_text(text=\"Answer.\")],\n                ),\n                finish_reason=types.FinishReason.STOP,\n            )\n        ]\n    )\n\n    async def mock_coro():\n      return MockAsyncIterator([response1, response2, response3])\n\n    mock_client.aio.models.generate_content_stream.return_value = mock_coro()\n\n    responses = [\n        resp\n        async for resp in gemini_llm.generate_content_async(\n            llm_request, stream=True\n        )\n    ]\n\n    assert len(responses) == 4\n    assert responses[0].partial is True\n    assert responses[1].partial is True\n    assert responses[2].partial is True\n    assert responses[3].content.parts[0].text == \"Think1Think2\"\n    assert responses[3].content.parts[0].thought is True\n    assert responses[3].content.parts[1].text == \"Answer.\"\n    mock_client.aio.models.generate_content_stream.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_connect(gemini_llm, llm_request):\n  # Create a mock connection\n  mock_connection = mock.MagicMock(spec=GeminiLlmConnection)\n\n  # Create a mock context manager\n  class MockContextManager:\n\n    async def __aenter__(self):\n      return mock_connection\n\n    async def __aexit__(self, *args):\n      pass\n\n  # Mock the connect method at the class level\n  with mock.patch(\n      \"google.adk.models.google_llm.Gemini.connect\",\n      return_value=MockContextManager(),\n  ):\n    async with gemini_llm.connect(llm_request) as connection:\n      assert connection is mock_connection\n\n\n@pytest.mark.asyncio\nasync def test_generate_content_async_with_custom_headers(\n    gemini_llm, llm_request, generate_content_response\n):\n  \"\"\"Test that tracking headers are updated when custom headers are provided.\"\"\"\n  # Add custom headers to the request config\n  custom_headers = {\"custom-header\": \"custom-value\"}\n  for key in gemini_llm._tracking_headers:\n    custom_headers[key] = \"custom \" + gemini_llm._tracking_headers[key]\n  llm_request.config.http_options = types.HttpOptions(headers=custom_headers)\n\n  with mock.patch.object(gemini_llm, \"api_client\") as mock_client:\n    # Create a mock coroutine that returns the generate_content_response\n    async def mock_coro():\n      return generate_content_response\n\n    mock_client.aio.models.generate_content.return_value = mock_coro()\n\n    responses = [\n        resp\n        async for resp in gemini_llm.generate_content_async(\n            llm_request, stream=False\n        )\n    ]\n\n    # Verify that the config passed to generate_content contains merged headers\n    mock_client.aio.models.generate_content.assert_called_once()\n    call_args = mock_client.aio.models.generate_content.call_args\n    config_arg = call_args.kwargs[\"config\"]\n\n    for key, value in config_arg.http_options.headers.items():\n      if key in gemini_llm._tracking_headers:\n        assert value == gemini_llm._tracking_headers[key]\n      else:\n        assert value == custom_headers[key]\n\n    assert len(responses) == 1\n    assert isinstance(responses[0], LlmResponse)\n\n\n@pytest.mark.asyncio\nasync def test_generate_content_async_stream_with_custom_headers(\n    gemini_llm, llm_request\n):\n  \"\"\"Test that tracking headers are updated when custom headers are provided in streaming mode.\"\"\"\n  # Add custom headers to the request config\n  custom_headers = {\"custom-header\": \"custom-value\"}\n  llm_request.config.http_options = types.HttpOptions(headers=custom_headers)\n\n  with mock.patch.object(gemini_llm, \"api_client\") as mock_client:\n    # Create mock stream responses\n    class MockAsyncIterator:\n\n      def __init__(self, seq):\n        self.iter = iter(seq)\n\n      def __aiter__(self):\n        return self\n\n      async def __anext__(self):\n        try:\n          return next(self.iter)\n        except StopIteration:\n          raise StopAsyncIteration\n\n    mock_responses = [\n        types.GenerateContentResponse(\n            candidates=[\n                types.Candidate(\n                    content=Content(\n                        role=\"model\", parts=[Part.from_text(text=\"Hello\")]\n                    ),\n                    finish_reason=types.FinishReason.STOP,\n                )\n            ]\n        )\n    ]\n\n    async def mock_coro():\n      return MockAsyncIterator(mock_responses)\n\n    mock_client.aio.models.generate_content_stream.return_value = mock_coro()\n\n    responses = [\n        resp\n        async for resp in gemini_llm.generate_content_async(\n            llm_request, stream=True\n        )\n    ]\n\n    # Verify that the config passed to generate_content_stream contains merged headers\n    mock_client.aio.models.generate_content_stream.assert_called_once()\n    call_args = mock_client.aio.models.generate_content_stream.call_args\n    config_arg = call_args.kwargs[\"config\"]\n\n    expected_headers = custom_headers.copy()\n    expected_headers.update(gemini_llm._tracking_headers)\n    assert config_arg.http_options.headers == expected_headers\n\n    assert len(responses) == 2\n\n\n@pytest.mark.asyncio\nasync def test_generate_content_async_without_custom_headers(\n    gemini_llm, llm_request, generate_content_response\n):\n  \"\"\"Test that tracking headers are not modified when no custom headers exist.\"\"\"\n  # Ensure no http_options exist initially\n  llm_request.config.http_options = None\n\n  with mock.patch.object(gemini_llm, \"api_client\") as mock_client:\n\n    async def mock_coro():\n      return generate_content_response\n\n    mock_client.aio.models.generate_content.return_value = mock_coro()\n\n    responses = [\n        resp\n        async for resp in gemini_llm.generate_content_async(\n            llm_request, stream=False\n        )\n    ]\n\n    # Verify that the config passed to generate_content has no http_options\n    mock_client.aio.models.generate_content.assert_called_once()\n    call_args = mock_client.aio.models.generate_content.call_args\n    config_arg = call_args.kwargs[\"config\"]\n    assert config_arg.http_options is None\n\n    assert len(responses) == 1\n\n\ndef test_live_api_version_vertex_ai(gemini_llm):\n  \"\"\"Test that _live_api_version returns 'v1beta1' for Vertex AI backend.\"\"\"\n  with mock.patch.object(\n      gemini_llm, \"_api_backend\", GoogleLLMVariant.VERTEX_AI\n  ):\n    assert gemini_llm._live_api_version == \"v1beta1\"\n\n\ndef test_live_api_version_gemini_api(gemini_llm):\n  \"\"\"Test that _live_api_version returns 'v1alpha' for Gemini API backend.\"\"\"\n  with mock.patch.object(\n      gemini_llm, \"_api_backend\", GoogleLLMVariant.GEMINI_API\n  ):\n    assert gemini_llm._live_api_version == \"v1alpha\"\n\n\ndef test_live_api_client_properties(gemini_llm):\n  \"\"\"Test that _live_api_client is properly configured with tracking headers and API version.\"\"\"\n  with mock.patch.object(\n      gemini_llm, \"_api_backend\", GoogleLLMVariant.VERTEX_AI\n  ):\n    client = gemini_llm._live_api_client\n\n    # Verify that the client has the correct headers and API version\n    http_options = client._api_client._http_options\n    assert http_options.api_version == \"v1beta1\"\n\n    # Check that tracking headers are included\n    tracking_headers = gemini_llm._tracking_headers\n    for key, value in tracking_headers.items():\n      assert key in http_options.headers\n      assert value in http_options.headers[key]\n\n\n@pytest.mark.asyncio\nasync def test_connect_with_custom_headers(gemini_llm, llm_request):\n  \"\"\"Test that connect method updates tracking headers and API version when custom headers are provided.\"\"\"\n  # Setup request with live connect config and custom headers\n  custom_headers = {\"custom-live-header\": \"live-value\"}\n  llm_request.live_connect_config = types.LiveConnectConfig(\n      http_options=types.HttpOptions(headers=custom_headers)\n  )\n\n  mock_live_session = mock.AsyncMock()\n\n  # Mock the _live_api_client to return a mock client\n  with mock.patch.object(gemini_llm, \"_live_api_client\") as mock_live_client:\n    # Create a mock context manager\n    class MockLiveConnect:\n\n      async def __aenter__(self):\n        return mock_live_session\n\n      async def __aexit__(self, *args):\n        pass\n\n    mock_live_client.aio.live.connect.return_value = MockLiveConnect()\n\n    async with gemini_llm.connect(llm_request) as connection:\n      # Verify that the connect method was called with the right config\n      mock_live_client.aio.live.connect.assert_called_once()\n      call_args = mock_live_client.aio.live.connect.call_args\n      config_arg = call_args.kwargs[\"config\"]\n\n      # Verify that tracking headers were merged with custom headers\n      expected_headers = custom_headers.copy()\n      expected_headers.update(gemini_llm._tracking_headers)\n      assert config_arg.http_options.headers == expected_headers\n\n      # Verify that API version was set\n      assert config_arg.http_options.api_version == gemini_llm._live_api_version\n\n      # Verify that system instruction and tools were set\n      assert config_arg.system_instruction is not None\n      assert config_arg.tools == llm_request.config.tools\n\n      # Verify connection is properly wrapped\n      assert isinstance(connection, GeminiLlmConnection)\n\n\n@pytest.mark.asyncio\nasync def test_connect_without_custom_headers(gemini_llm, llm_request):\n  \"\"\"Test that connect method works properly when no custom headers are provided.\"\"\"\n  # Setup request with live connect config but no custom headers\n  llm_request.live_connect_config = types.LiveConnectConfig()\n\n  mock_live_session = mock.AsyncMock()\n\n  with mock.patch.object(gemini_llm, \"_live_api_client\") as mock_live_client:\n\n    class MockLiveConnect:\n\n      async def __aenter__(self):\n        return mock_live_session\n\n      async def __aexit__(self, *args):\n        pass\n\n    mock_live_client.aio.live.connect.return_value = MockLiveConnect()\n\n    async with gemini_llm.connect(llm_request) as connection:\n      # Verify that the connect method was called with the right config\n      mock_live_client.aio.live.connect.assert_called_once()\n      call_args = mock_live_client.aio.live.connect.call_args\n      config_arg = call_args.kwargs[\"config\"]\n\n      # Verify that http_options remains None since no custom headers were provided\n      assert config_arg.http_options is None\n\n      # Verify that system instruction and tools were still set\n      assert config_arg.system_instruction is not None\n      assert config_arg.tools == llm_request.config.tools\n\n      assert isinstance(connection, GeminiLlmConnection)\n\n\n@pytest.mark.parametrize(\n    (\n        \"api_backend, \"\n        \"expected_file_display_name, \"\n        \"expected_inline_display_name, \"\n        \"expected_labels\"\n    ),\n    [\n        (\n            GoogleLLMVariant.GEMINI_API,\n            None,\n            None,\n            None,\n        ),\n        (\n            GoogleLLMVariant.VERTEX_AI,\n            \"My Test PDF\",\n            \"My Test Image\",\n            {\"key\": \"value\"},\n        ),\n    ],\n)\ndef test_preprocess_request_handles_backend_specific_fields(\n    gemini_llm: Gemini,\n    api_backend: GoogleLLMVariant,\n    expected_file_display_name: Optional[str],\n    expected_inline_display_name: Optional[str],\n    expected_labels: Optional[str],\n):\n  \"\"\"\n  Tests that _preprocess_request correctly sanitizes fields based on the API backend.\n\n  - For GEMINI_API, it should remove 'display_name' from file/inline data\n    and remove 'labels' from the config.\n  - For VERTEX_AI, it should leave these fields untouched.\n  \"\"\"\n  # Arrange: Create a request with fields that need to be preprocessed.\n  llm_request_with_files = LlmRequest(\n      model=\"gemini-1.5-flash\",\n      contents=[\n          Content(\n              role=\"user\",\n              parts=[\n                  Part(\n                      file_data=types.FileData(\n                          file_uri=\"gs://bucket/file.pdf\",\n                          mime_type=\"application/pdf\",\n                          display_name=\"My Test PDF\",\n                      )\n                  ),\n                  Part(\n                      inline_data=types.Blob(\n                          data=b\"some_bytes\",\n                          mime_type=\"image/png\",\n                          display_name=\"My Test Image\",\n                      )\n                  ),\n              ],\n          )\n      ],\n      config=types.GenerateContentConfig(labels={\"key\": \"value\"}),\n  )\n\n  # Mock the _api_backend property to control the test scenario\n  with mock.patch.object(\n      Gemini, \"_api_backend\", new_callable=mock.PropertyMock\n  ) as mock_backend:\n    mock_backend.return_value = api_backend\n\n    # Act: Run the preprocessing method\n    gemini_llm._preprocess_request(llm_request_with_files)\n\n    # Assert: Check if the fields were correctly processed\n    file_part = llm_request_with_files.contents[0].parts[0]\n    inline_part = llm_request_with_files.contents[0].parts[1]\n\n    assert file_part.file_data.display_name == expected_file_display_name\n    assert inline_part.inline_data.display_name == expected_inline_display_name\n    assert llm_request_with_files.config.labels == expected_labels\n",
                  "src/google/adk/version.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# version: major.minor.patch\n__version__ = \"1.4.1\"\n",
                  "src/google/adk/utils/variant_utils.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"Utilities for Google LLM variants.\n\nThis module is for ADK internal use only.\nPlease do not rely on the implementation details.\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom enum import Enum\nimport os\n\n_GOOGLE_LLM_VARIANT_VERTEX_AI = 'VERTEX_AI'\n_GOOGLE_LLM_VARIANT_GEMINI_API = 'GEMINI_API'\n\n\nclass GoogleLLMVariant(Enum):\n  \"\"\"\n  The Google LLM variant to use.\n  see https://google.github.io/adk-docs/get-started/quickstart/#set-up-the-model\n  \"\"\"\n\n  VERTEX_AI = _GOOGLE_LLM_VARIANT_VERTEX_AI\n  \"\"\"For using credentials from Google Vertex AI\"\"\"\n  GEMINI_API = _GOOGLE_LLM_VARIANT_GEMINI_API\n  \"\"\"For using API Key from Google AI Studio\"\"\"\n\n\ndef get_google_llm_variant() -> str:\n  return (\n      GoogleLLMVariant.VERTEX_AI\n      if os.environ.get('GOOGLE_GENAI_USE_VERTEXAI', '0').lower()\n      in [\n          'true',\n          '1',\n      ]\n      else GoogleLLMVariant.GEMINI_API\n  )\n",
                  "src/google/adk/models/base_llm.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nfrom __future__ import annotations\n\nfrom abc import abstractmethod\nfrom typing import AsyncGenerator\nfrom typing import TYPE_CHECKING\n\nfrom google.genai import types\nfrom pydantic import BaseModel\nfrom pydantic import ConfigDict\n\nfrom .base_llm_connection import BaseLlmConnection\n\nif TYPE_CHECKING:\n  from .llm_request import LlmRequest\n  from .llm_response import LlmResponse\n\n\nclass BaseLlm(BaseModel):\n  \"\"\"The BaseLLM class.\n\n  Attributes:\n    model: The name of the LLM, e.g. gemini-1.5-flash or gemini-1.5-flash-001.\n  \"\"\"\n\n  model_config = ConfigDict(\n      # This allows us to use arbitrary types in the model. E.g. PIL.Image.\n      arbitrary_types_allowed=True,\n  )\n  \"\"\"The pydantic model config.\"\"\"\n\n  model: str\n  \"\"\"The name of the LLM, e.g. gemini-1.5-flash or gemini-1.5-flash-001.\"\"\"\n\n  @classmethod\n  def supported_models(cls) -> list[str]:\n    \"\"\"Returns a list of supported models in regex for LlmRegistry.\"\"\"\n    return []\n\n  @abstractmethod\n  async def generate_content_async(\n      self, llm_request: LlmRequest, stream: bool = False\n  ) -> AsyncGenerator[LlmResponse, None]:\n    \"\"\"Generates one content from the given contents and tools.\n\n    Args:\n      llm_request: LlmRequest, the request to send to the LLM.\n      stream: bool = False, whether to do streaming call.\n\n    Yields:\n      a generator of types.Content.\n\n      For non-streaming call, it will only yield one Content.\n\n      For streaming call, it may yield more than one content, but all yielded\n      contents should be treated as one content by merging the\n      parts list.\n    \"\"\"\n    raise NotImplementedError(\n        f'Async generation is not supported for {self.model}.'\n    )\n    yield  # AsyncGenerator requires a yield statement in function body.\n\n  def _maybe_append_user_content(self, llm_request: LlmRequest):\n    \"\"\"Appends a user content, so that model can continue to output.\n\n    Args:\n      llm_request: LlmRequest, the request to send to the Gemini model.\n    \"\"\"\n    # If no content is provided, append a user content to hint model response\n    # using system instruction.\n    if not llm_request.contents:\n      llm_request.contents.append(\n          types.Content(\n              role='user',\n              parts=[\n                  types.Part(\n                      text=(\n                          'Handle the requests as specified in the System'\n                          ' Instruction.'\n                      )\n                  )\n              ],\n          )\n      )\n      return\n\n    # Insert a user content to preserve user intent and to avoid empty\n    # model response.\n    if llm_request.contents[-1].role != 'user':\n      llm_request.contents.append(\n          types.Content(\n              role='user',\n              parts=[\n                  types.Part(\n                      text=(\n                          'Continue processing previous requests as instructed.'\n                          ' Exit or provide a summary if no more outputs are'\n                          ' needed.'\n                      )\n                  )\n              ],\n          )\n      )\n\n  def connect(self, llm_request: LlmRequest) -> BaseLlmConnection:\n    \"\"\"Creates a live connection to the LLM.\n\n    Args:\n      llm_request: LlmRequest, the request to send to the LLM.\n\n    Returns:\n      BaseLlmConnection, the connection to the LLM.\n    \"\"\"\n    raise NotImplementedError(\n        f'Live connection is not supported for {self.model}.'\n    )\n",
                  "src/google/adk/models/base_llm_connection.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nfrom abc import abstractmethod\nfrom typing import AsyncGenerator\n\nfrom google.genai import types\n\nfrom .llm_response import LlmResponse\n\n\nclass BaseLlmConnection:\n  \"\"\"The base class for a live model connection.\"\"\"\n\n  @abstractmethod\n  async def send_history(self, history: list[types.Content]):\n    \"\"\"Sends the conversation history to the model.\n\n    You call this method right after setting up the model connection.\n    The model will respond if the last content is from user, otherwise it will\n    wait for new user input before responding.\n\n    Args:\n      history: The conversation history to send to the model.\n    \"\"\"\n    pass\n\n  @abstractmethod\n  async def send_content(self, content: types.Content):\n    \"\"\"Sends a user content to the model.\n\n    The model will respond immediately upon receiving the content.\n    If you send function responses, all parts in the content should be function\n    responses.\n\n    Args:\n      content: The content to send to the model.\n    \"\"\"\n    pass\n\n  @abstractmethod\n  async def send_realtime(self, blob: types.Blob):\n    \"\"\"Sends a chunk of audio or a frame of video to the model in realtime.\n\n    The model may not respond immediately upon receiving the blob. It will do\n    voice activity detection and decide when to respond.\n\n    Args:\n      blob: The blob to send to the model.\n    \"\"\"\n    pass\n\n  @abstractmethod\n  async def receive(self) -> AsyncGenerator[LlmResponse, None]:\n    \"\"\"Receives the model response using the llm server connection.\n\n    Args: None.\n\n    Yields:\n      LlmResponse: The model response.\n    \"\"\"\n    pass\n\n  @abstractmethod\n  async def close(self):\n    \"\"\"Closes the llm server connection.\"\"\"\n    pass\n",
                  "src/google/adk/models/gemini_llm_connection.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nfrom __future__ import annotations\n\nimport logging\nfrom typing import AsyncGenerator\n\nfrom google.genai import live\nfrom google.genai import types\n\nfrom .base_llm_connection import BaseLlmConnection\nfrom .llm_response import LlmResponse\n\nlogger = logging.getLogger('google_adk.' + __name__)\n\n\nclass GeminiLlmConnection(BaseLlmConnection):\n  \"\"\"The Gemini model connection.\"\"\"\n\n  def __init__(self, gemini_session: live.AsyncSession):\n    self._gemini_session = gemini_session\n\n  async def send_history(self, history: list[types.Content]):\n    \"\"\"Sends the conversation history to the gemini model.\n\n    You call this method right after setting up the model connection.\n    The model will respond if the last content is from user, otherwise it will\n    wait for new user input before responding.\n\n    Args:\n      history: The conversation history to send to the model.\n    \"\"\"\n\n    # TODO: Remove this filter and translate unary contents to streaming\n    # contents properly.\n\n    # We ignore any audio from user during the agent transfer phase\n    contents = [\n        content\n        for content in history\n        if content.parts and content.parts[0].text\n    ]\n\n    if contents:\n      await self._gemini_session.send(\n          input=types.LiveClientContent(\n              turns=contents,\n              turn_complete=contents[-1].role == 'user',\n          ),\n      )\n    else:\n      logger.info('no content is sent')\n\n  async def send_content(self, content: types.Content):\n    \"\"\"Sends a user content to the gemini model.\n\n    The model will respond immediately upon receiving the content.\n    If you send function responses, all parts in the content should be function\n    responses.\n\n    Args:\n      content: The content to send to the model.\n    \"\"\"\n\n    assert content.parts\n    if content.parts[0].function_response:\n      # All parts have to be function responses.\n      function_responses = [part.function_response for part in content.parts]\n      logger.debug('Sending LLM function response: %s', function_responses)\n      await self._gemini_session.send(\n          input=types.LiveClientToolResponse(\n              function_responses=function_responses\n          ),\n      )\n    else:\n      logger.debug('Sending LLM new content %s', content)\n      await self._gemini_session.send(\n          input=types.LiveClientContent(\n              turns=[content],\n              turn_complete=True,\n          )\n      )\n\n  async def send_realtime(self, blob: types.Blob):\n    \"\"\"Sends a chunk of audio or a frame of video to the model in realtime.\n\n    Args:\n      blob: The blob to send to the model.\n    \"\"\"\n\n    input_blob = blob.model_dump()\n    logger.debug('Sending LLM Blob: %s', input_blob)\n    await self._gemini_session.send(input=input_blob)\n\n  def __build_full_text_response(self, text: str):\n    \"\"\"Builds a full text response.\n\n    The text should not partial and the returned LlmResponse is not be\n    partial.\n\n    Args:\n      text: The text to be included in the response.\n\n    Returns:\n      An LlmResponse containing the full text.\n    \"\"\"\n    return LlmResponse(\n        content=types.Content(\n            role='model',\n            parts=[types.Part.from_text(text=text)],\n        ),\n    )\n\n  async def receive(self) -> AsyncGenerator[LlmResponse, None]:\n    \"\"\"Receives the model response using the llm server connection.\n\n    Yields:\n      LlmResponse: The model response.\n    \"\"\"\n\n    text = ''\n    async for message in self._gemini_session.receive():\n      logger.debug('Got LLM Live message: %s', message)\n      if message.server_content:\n        content = message.server_content.model_turn\n        if content and content.parts:\n          llm_response = LlmResponse(\n              content=content, interrupted=message.server_content.interrupted\n          )\n          if content.parts[0].text:\n            text += content.parts[0].text\n            llm_response.partial = True\n          # don't yield the merged text event when receiving audio data\n          elif text and not content.parts[0].inline_data:\n            yield self.__build_full_text_response(text)\n            text = ''\n          yield llm_response\n        if (\n            message.server_content.input_transcription\n            and message.server_content.input_transcription.text\n        ):\n          user_text = message.server_content.input_transcription.text\n          parts = [\n              types.Part.from_text(\n                  text=user_text,\n              )\n          ]\n          llm_response = LlmResponse(\n              content=types.Content(role='user', parts=parts)\n          )\n          yield llm_response\n        if (\n            message.server_content.output_transcription\n            and message.server_content.output_transcription.text\n        ):\n          # TODO: Right now, we just support output_transcription without\n          # changing interface and data protocol. Later, we can consider to\n          # support output_transcription as a separate field in LlmResponse.\n\n          # Transcription is always considered as partial event\n          # We rely on other control signals to determine when to yield the\n          # full text response(turn_complete, interrupted, or tool_call).\n          text += message.server_content.output_transcription.text\n          parts = [\n              types.Part.from_text(\n                  text=message.server_content.output_transcription.text\n              )\n          ]\n          llm_response = LlmResponse(\n              content=types.Content(role='model', parts=parts), partial=True\n          )\n          yield llm_response\n\n        if message.server_content.turn_complete:\n          if text:\n            yield self.__build_full_text_response(text)\n            text = ''\n          yield LlmResponse(\n              turn_complete=True, interrupted=message.server_content.interrupted\n          )\n          break\n        # in case of empty content or parts, we sill surface it\n        # in case it's an interrupted message, we merge the previous partial\n        # text. Other we don't merge. because content can be none when model\n        # safety threshold is triggered\n        if message.server_content.interrupted and text:\n          yield self.__build_full_text_response(text)\n          text = ''\n        yield LlmResponse(interrupted=message.server_content.interrupted)\n      if message.tool_call:\n        if text:\n          yield self.__build_full_text_response(text)\n          text = ''\n        parts = [\n            types.Part(function_call=function_call)\n            for function_call in message.tool_call.function_calls\n        ]\n        yield LlmResponse(content=types.Content(role='model', parts=parts))\n\n  async def close(self):\n    \"\"\"Closes the llm server connection.\"\"\"\n\n    await self._gemini_session.close()\n",
                  "src/google/adk/models/llm_response.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nfrom __future__ import annotations\n\nfrom typing import Any\nfrom typing import Optional\n\nfrom google.genai import types\nfrom pydantic import alias_generators\nfrom pydantic import BaseModel\nfrom pydantic import ConfigDict\n\n\nclass LlmResponse(BaseModel):\n  \"\"\"LLM response class that provides the first candidate response from the\n\n  model if available. Otherwise, returns error code and message.\n\n  Attributes:\n    content: The content of the response.\n    grounding_metadata: The grounding metadata of the response.\n    partial: Indicates whether the text content is part of a unfinished text\n      stream. Only used for streaming mode and when the content is plain text.\n    turn_complete: Indicates whether the response from the model is complete.\n      Only used for streaming mode.\n    error_code: Error code if the response is an error. Code varies by model.\n    error_message: Error message if the response is an error.\n    interrupted: Flag indicating that LLM was interrupted when generating the\n      content. Usually it's due to user interruption during a bidi streaming.\n    custom_metadata: The custom metadata of the LlmResponse.\n  \"\"\"\n\n  model_config = ConfigDict(\n      extra='forbid',\n      alias_generator=alias_generators.to_camel,\n      populate_by_name=True,\n  )\n  \"\"\"The pydantic model config.\"\"\"\n\n  content: Optional[types.Content] = None\n  \"\"\"The content of the response.\"\"\"\n\n  grounding_metadata: Optional[types.GroundingMetadata] = None\n  \"\"\"The grounding metadata of the response.\"\"\"\n\n  partial: Optional[bool] = None\n  \"\"\"Indicates whether the text content is part of a unfinished text stream.\n\n  Only used for streaming mode and when the content is plain text.\n  \"\"\"\n\n  turn_complete: Optional[bool] = None\n  \"\"\"Indicates whether the response from the model is complete.\n\n  Only used for streaming mode.\n  \"\"\"\n\n  error_code: Optional[str] = None\n  \"\"\"Error code if the response is an error. Code varies by model.\"\"\"\n\n  error_message: Optional[str] = None\n  \"\"\"Error message if the response is an error.\"\"\"\n\n  interrupted: Optional[bool] = None\n  \"\"\"Flag indicating that LLM was interrupted when generating the content.\n  Usually it's due to user interruption during a bidi streaming.\n  \"\"\"\n\n  custom_metadata: Optional[dict[str, Any]] = None\n  \"\"\"The custom metadata of the LlmResponse.\n\n  An optional key-value pair to label an LlmResponse.\n\n  NOTE: the entire dict must be JSON serializable.\n  \"\"\"\n\n  usage_metadata: Optional[types.GenerateContentResponseUsageMetadata] = None\n  \"\"\"The usage metadata of the LlmResponse\"\"\"\n\n  @staticmethod\n  def create(\n      generate_content_response: types.GenerateContentResponse,\n  ) -> 'LlmResponse':\n    \"\"\"Creates an LlmResponse from a GenerateContentResponse.\n\n    Args:\n      generate_content_response: The GenerateContentResponse to create the\n        LlmResponse from.\n\n    Returns:\n      The LlmResponse.\n    \"\"\"\n    usage_metadata = generate_content_response.usage_metadata\n    if generate_content_response.candidates:\n      candidate = generate_content_response.candidates[0]\n      if candidate.content and candidate.content.parts:\n        return LlmResponse(\n            content=candidate.content,\n            grounding_metadata=candidate.grounding_metadata,\n            usage_metadata=usage_metadata,\n        )\n      else:\n        return LlmResponse(\n            error_code=candidate.finish_reason,\n            error_message=candidate.finish_message,\n            usage_metadata=usage_metadata,\n        )\n    else:\n      if generate_content_response.prompt_feedback:\n        prompt_feedback = generate_content_response.prompt_feedback\n        return LlmResponse(\n            error_code=prompt_feedback.block_reason,\n            error_message=prompt_feedback.block_reason_message,\n            usage_metadata=usage_metadata,\n        )\n      else:\n        return LlmResponse(\n            error_code='UNKNOWN_ERROR',\n            error_message='Unknown error.',\n            usage_metadata=usage_metadata,\n        )\n",
                  "src/google/adk/models/llm_request.py": "# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nfrom __future__ import annotations\n\nfrom typing import Optional\n\nfrom google.genai import types\nfrom pydantic import BaseModel\nfrom pydantic import ConfigDict\nfrom pydantic import Field\n\nfrom ..tools.base_tool import BaseTool\n\n\nclass LlmRequest(BaseModel):\n  \"\"\"LLM request class that allows passing in tools, output schema and system\n\n  instructions to the model.\n\n  Attributes:\n    model: The model name.\n    contents: The contents to send to the model.\n    config: Additional config for the generate content request.\n    tools_dict: The tools dictionary.\n  \"\"\"\n\n  model_config = ConfigDict(arbitrary_types_allowed=True)\n  \"\"\"The pydantic model config.\"\"\"\n\n  model: Optional[str] = None\n  \"\"\"The model name.\"\"\"\n\n  contents: list[types.Content] = Field(default_factory=list)\n  \"\"\"The contents to send to the model.\"\"\"\n\n  config: Optional[types.GenerateContentConfig] = None\n  live_connect_config: types.LiveConnectConfig = types.LiveConnectConfig()\n  \"\"\"Additional config for the generate content request.\n\n  tools in generate_content_config should not be set.\n  \"\"\"\n  tools_dict: dict[str, BaseTool] = Field(default_factory=dict, exclude=True)\n  \"\"\"The tools dictionary.\"\"\"\n\n  def append_instructions(self, instructions: list[str]) -> None:\n    \"\"\"Appends instructions to the system instruction.\n\n    Args:\n      instructions: The instructions to append.\n    \"\"\"\n\n    if self.config.system_instruction:\n      self.config.system_instruction += '\\n\\n' + '\\n\\n'.join(instructions)\n    else:\n      self.config.system_instruction = '\\n\\n'.join(instructions)\n\n  def append_tools(self, tools: list[BaseTool]) -> None:\n    \"\"\"Appends tools to the request.\n\n    Args:\n      tools: The tools to append.\n    \"\"\"\n\n    if not tools:\n      return\n    declarations = []\n    for tool in tools:\n      if isinstance(tool, BaseTool):\n        declaration = tool._get_declaration()\n      else:\n        declaration = tool.get_declaration()\n      if declaration:\n        declarations.append(declaration)\n        self.tools_dict[tool.name] = tool\n    if declarations:\n      self.config.tools.append(types.Tool(function_declarations=declarations))\n\n  def set_output_schema(self, base_model: type[BaseModel]) -> None:\n    \"\"\"Sets the output schema for the request.\n\n    Args:\n      base_model: The pydantic base model to set the output schema to.\n    \"\"\"\n\n    self.config.response_schema = base_model\n    self.config.response_mime_type = 'application/json'\n"
                },
                "typescript_context_files": {
                  "src/models/GoogleLlm.ts": " \n\nimport { BaseLlm } from './BaseLlm';\nimport { BaseLlmConnection } from './BaseLlmConnection';\nimport { GeminiLlmConnection } from './GeminiLlmConnection';\nimport { LlmRequest } from './LlmRequest';\nimport { LlmResponse } from './LlmResponse';\nimport { Blob, Content, FunctionDeclaration, Part } from './types';\nimport { GoogleGenerativeAI, GenerativeModel, Tool as GoogleTool } from '@google/generative-ai';\n\n// Simulated interfaces for GenAI SDK types in TypeScript\ninterface GenerateContentResponse {\n  candidates?: {\n    content?: Content;\n    grounding_metadata?: any;\n    finish_reason?: string;\n    finish_message?: string;\n  }[];\n  prompt_feedback?: {\n    block_reason?: string;\n    block_reason_message?: string;\n  };\n  usage_metadata?: {\n    prompt_token_count?: number;\n    candidates_token_count?: number;\n    total_token_count?: number;\n  };\n  text?: string;\n  function_calls?: {\n    name: string;\n    args: any;\n  }[];\n}\n\ninterface HttpOptions {\n  headers: Record<string, string>;\n  api_version?: string;\n}\n\ninterface GenerateContentConfig {\n  temperature?: number;\n  topP?: number;\n  topK?: number;\n  maxOutputTokens?: number;\n  candidateCount?: number;\n  stopSequences?: string[];\n  systemInstruction?: string;\n  tools?: any[];\n}\n\ninterface LiveConnectConfig {\n  voiceInput?: boolean;\n  systemInstruction?: Content;\n  tools?: any[];\n}\n\n// Mock AsyncSession for the Google GenAI Live SDK\ninterface AsyncSession {\n  send(input: any): Promise<void>;\n  receive(): AsyncGenerator<any, void, unknown>;\n  close(): Promise<void>;\n}\n\n/**\n * Helper function to convert our content type to Google GenAI content format\n */\nfunction convertContent(content: Content): { role: string, parts: any[] } {\n  // Convert role from model to assistant if needed\n  const role = content.role === 'model' ? 'assistant' : content.role;\n  \n  // Convert parts\n  const parts = content.parts.map(part => {\n    if (part.text) {\n      return { text: part.text };\n    } else if (part.inlineData) {\n      return {\n        inline_data: {\n          mime_type: part.inlineData.mimeType,\n          data: part.inlineData.data\n        }\n      };\n    } else if (part.functionCall) {\n      return {\n        function_call: {\n          name: part.functionCall.name,\n          args: part.functionCall.args\n        }\n      };\n    } else if (part.functionResponse) {\n      return {\n        function_response: {\n          name: part.functionResponse.name,\n          response: part.functionResponse.response\n        }\n      };\n    }\n    return {}; // Empty part as fallback\n  });\n  \n  return { role, parts };\n}\n\n/**\n * Helper function to convert our tools format to Google GenAI tools format\n */\nfunction convertTools(tools: any[] | undefined): GoogleTool[] {\n  if (!tools || tools.length === 0) {\n    return [];\n  }\n  \n  return tools.map(tool => {\n    // Handle snake_case format (functionDeclarations)\n    if (tool.functionDeclarations) {\n      return {\n        functionDeclarations: tool.functionDeclarations.map((func: FunctionDeclaration) => ({\n          name: func.name,\n          description: func.description || '',\n          parameters: func.parameters || {},\n        }))\n      };\n    }\n    return {};\n  }).filter(tool => tool.functionDeclarations && tool.functionDeclarations.length > 0);\n}\n\n/**\n * Helper to convert response from Google GenAI to our expected format\n */\nfunction convertResponse(response: any): GenerateContentResponse {\n  \n  // Check if the response is empty or invalid\n  if (!response || typeof response !== 'object') {\n    console.error('Received invalid response from Gemini API:', response);\n    return {\n      candidates: [{\n        content: {\n          role: 'model',\n          parts: [{ text: 'The API returned an invalid response. Please try again.' }]\n        },\n        finish_reason: 'ERROR',\n        finish_message: 'Invalid API response'\n      }]\n    };\n  }\n  \n  // Handle VertexAI response format which nests the actual response inside a 'response' property\n  const actualResponse = response.response || response;\n  \n  // Create result object\n  const result: GenerateContentResponse = {};\n  \n  if (actualResponse.candidates) {\n    result.candidates = actualResponse.candidates.map((candidate: any) => ({\n      content: candidate.content,\n      finish_reason: candidate.finishReason,\n      grounding_metadata: candidate.groundingMetadata,\n      finish_message: candidate.finishMessage\n    }));\n  }\n  \n  if (actualResponse.promptFeedback) {\n    result.prompt_feedback = {\n      block_reason: actualResponse.promptFeedback.blockReason,\n      block_reason_message: actualResponse.promptFeedback.blockReasonMessage\n    };\n  }\n  \n  if (actualResponse.usageMetadata) {\n    result.usage_metadata = {\n      prompt_token_count: actualResponse.usageMetadata.promptTokenCount,\n      candidates_token_count: actualResponse.usageMetadata.candidatesTokenCount,\n      total_token_count: actualResponse.usageMetadata.totalTokenCount\n    };\n  }\n  \n  // Extract text from first candidate if available\n  if (result.candidates && \n      result.candidates[0] && \n      result.candidates[0].content && \n      result.candidates[0].content.parts && \n      result.candidates[0].content.parts[0] && \n      result.candidates[0].content.parts[0].text) {\n    result.text = result.candidates[0].content.parts[0].text;\n  }\n  \n  // Extract function calls if available\n  if (result.candidates && \n      result.candidates[0] && \n      result.candidates[0].content && \n      result.candidates[0].content.parts) {\n    \n    const functionCalls = result.candidates[0].content.parts\n      .filter((part: any) => part.functionCall)\n      .map((part: any) => ({\n        name: part.functionCall.name,\n        args: part.functionCall.args\n      }));\n    \n    if (functionCalls.length > 0) {\n      result.function_calls = functionCalls;\n    }\n  }\n  \n  // ONLY If no candidates were returned but response exists, create a default one\n  if ((!result.candidates || result.candidates.length === 0) && \n      (!result.prompt_feedback || !result.prompt_feedback.block_reason)) {\n    console.warn('Response missing candidates, creating a default candidate');\n    result.candidates = [{\n      content: {\n        role: 'model',\n        parts: [{ text: 'I received your message but encountered an issue generating a proper response. Please try again.' }]\n      },\n      finish_reason: 'DEFAULT_CANDIDATE',\n      finish_message: 'Created default candidate due to missing response data'\n    }];\n  }\n  \n  // Check if the response has valid candidates but is asking for system instructions\n  if (result.candidates && \n      result.candidates.length > 0 && \n      result.candidates[0].content && \n      result.candidates[0].content.parts && \n      result.candidates[0].content.parts[0] && \n      result.candidates[0].content.parts[0].text && \n      result.candidates[0].content.parts[0].text.includes(\"Please provide the System Instruction\")) {\n    console.warn('Model is asking for system instructions - this suggests the system instructions were not properly passed');\n  }\n  \n  return result;\n}\n\n// GenAI Client for Gemini\nclass GenAIClient {\n  vertexai: boolean = false;\n  private genAI: GoogleGenerativeAI;\n  \n  constructor(private httpOptions: { headers: Record<string, string>, api_version?: string }) {\n    // Initialize Google GenAI with API key from environment\n    this.genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY || '');\n    \n    // Check if this is a Vertex AI environment\n    this.vertexai = !!process.env.VERTEX_AI || !!process.env.GOOGLE_CLOUD_PROJECT;\n  }\n\n  // Models API\n  async generateContent(\n    model: string,\n    contents: Content[],\n    config: GenerateContentConfig\n  ): Promise<GenerateContentResponse> {\n    try {\n      \n      // IMPORTANT: The JavaScript SDK handles system instructions differently than Python\n      // We need to pass systemInstruction in the model configuration\n      // not as a message in contents with role 'system'\n      \n      // Extract system instructions from config\n      const systemInstructionText = config.systemInstruction;\n      \n      // Filter out any system messages from contents\n      // as they're not supported by the JavaScript SDK\n      contents = contents.filter(content => content.role !== 'system');\n      \n    \n      \n      // Create model instance with systemInstruction as a configuration parameter\n      const genModel = this.genAI.getGenerativeModel({\n        model: model,\n        generationConfig: {\n          temperature: config.temperature,\n          topP: config.topP,\n          topK: config.topK,\n          maxOutputTokens: config.maxOutputTokens,\n          candidateCount: config.candidateCount,\n          stopSequences: config.stopSequences,\n        },\n        systemInstruction: systemInstructionText,\n        tools: convertTools(config.tools),\n      });\n      \n      // Log configuration for debugging\n      console.log(`Model configuration: ${JSON.stringify({\n        temperature: config.temperature,\n        topP: config.topP,\n        topK: config.topK,\n        maxOutputTokens: config.maxOutputTokens,\n        systemInstruction: systemInstructionText ? 'Set' : 'Not set'\n      }, null, 2)}`);\n      \n      // Convert content format\n      const convertedContents = contents.map(convertContent);\n      console.log(`Sending ${convertedContents.length} content items to the model`);\n      \n      try {\n        // Generate content\n        const response = await genModel.generateContent({\n          contents: convertedContents\n        });\n        \n        // Convert response back to our expected format\n        return convertResponse(response);\n      } catch (apiErrorUnknown) {\n        // Type cast the error\n        const apiError = apiErrorUnknown as Error;\n        console.error(\"API Error generating content:\", apiError);\n        \n        // Create a fallback response with the error information\n        return {\n          candidates: [{\n            content: {\n              role: 'model',\n              parts: [{ text: `API Error: ${apiError.message || 'Unknown error occurred'}. Please try again.` }]\n            },\n            finish_reason: 'ERROR',\n            finish_message: apiError.message || 'Unknown error'\n          }]\n        };\n      }\n    } catch (errorUnknown) {\n      // Type cast the error\n      const error = errorUnknown as Error;\n      console.error(\"Error generating content:\", error);\n      \n      // Return a fallback response instead of throwing\n      return {\n        candidates: [{\n          content: {\n            role: 'model',\n            parts: [{ text: `An error occurred: ${error.message || 'Unknown error'}. Please try again.` }]\n          },\n          finish_reason: 'ERROR',\n          finish_message: error.message || 'Unknown error'\n        }]\n      };\n    }\n  }\n\n  async *generateContentStream(\n    model: string,\n    contents: Content[],\n    config: GenerateContentConfig\n  ): AsyncGenerator<GenerateContentResponse, void, unknown> {\n    try {\n      console.log(`Generating streaming content with model: ${model}`);\n      \n      // IMPORTANT: The JavaScript SDK handles system instructions differently than Python\n      // We need to pass systemInstruction in the model configuration\n      // not as a message in contents with role 'system'\n      \n      // Extract system instructions from config\n      const systemInstructionText = config.systemInstruction;\n      \n      // Filter out any system messages from contents\n      // as they're not supported by the JavaScript SDK\n      contents = contents.filter(content => content.role !== 'system');\n      \n      // Log information about system instructions\n      if (systemInstructionText) {\n        console.log(`Using system instruction for streaming: ${systemInstructionText}`);\n      }\n      \n      // Create model instance with systemInstruction as a configuration parameter\n      const genModel = this.genAI.getGenerativeModel({\n        model: model,\n        generationConfig: {\n          temperature: config.temperature,\n          topP: config.topP,\n          topK: config.topK,\n          maxOutputTokens: config.maxOutputTokens,\n          candidateCount: config.candidateCount,\n          stopSequences: config.stopSequences,\n        },\n        systemInstruction: systemInstructionText,\n        tools: convertTools(config.tools),\n      });\n      \n      // Log configuration for streaming\n      console.log(`Streaming model configuration: ${JSON.stringify({\n        temperature: config.temperature,\n        topP: config.topP,\n        topK: config.topK,\n        maxOutputTokens: config.maxOutputTokens,\n        systemInstruction: systemInstructionText ? 'Set' : 'Not set'\n      }, null, 2)}`);\n      \n      // Convert content format\n      const convertedContents = contents.map(convertContent);\n      console.log(`Streaming ${convertedContents.length} content items to the model`);\n      \n      // Generate streaming content\n      const responseStream = await genModel.generateContentStream({\n        contents: convertedContents\n      });\n      \n      // Process and yield each chunk\n      for await (const chunk of responseStream.stream) {\n        yield convertResponse(chunk);\n      }\n    } catch (errorUnknown) {\n      const error = errorUnknown as Error;\n      console.error(\"Error in streaming content generation:\", error);\n      \n      // Return a fallback response instead of throwing\n      yield {\n        candidates: [{\n          content: {\n            role: 'model',\n            parts: [{ text: `An error occurred during streaming: ${error.message || 'Unknown error'}. Please try again.` }]\n          },\n          finish_reason: 'ERROR',\n          finish_message: error.message || 'Streaming error'\n        }]\n      };\n    }\n  }\n\n  // Live API\n  async connectLive(\n    model: string,\n    config: LiveConnectConfig\n  ): Promise<{ session: AsyncSession }> {\n    try {\n      console.log(`Connecting live to model: ${model}`);\n      \n      // IMPORTANT: The JavaScript SDK handles system instructions differently than Python\n      // Filter out any system message content from history\n      const history = [];\n      let systemInstructionText = '';\n      \n      // Check if we have a system instruction\n      if (config.systemInstruction) {\n        // If we have a system instruction, get the text from it\n        const systemMsg = config.systemInstruction;\n        if (systemMsg && \n            systemMsg.parts && \n            systemMsg.parts.length > 0 && \n            systemMsg.parts[0].text) {\n          systemInstructionText = systemMsg.parts[0].text;\n          console.log(`Using system instruction for live connection: ${systemInstructionText}`);\n        }\n      }\n      \n      // Create model instance with appropriate configuration\n      const genModel = this.genAI.getGenerativeModel({\n        model: model,\n        systemInstruction: systemInstructionText,\n        tools: convertTools(config.tools),\n      });\n      \n      // Start chat session - don't pass system instruction in history\n      const chat = genModel.startChat({\n        history: [],  // Don't include system instructions in history\n        tools: convertTools(config.tools),\n      });\n      \n      // Create an AsyncSession wrapper around the chat\n      const session: AsyncSession = {\n        async send(input: any): Promise<void> {\n          await chat.sendMessage(input);\n        },\n        \n        async *receive(): AsyncGenerator<any, void, unknown> {\n          // In a real implementation, this would listen for responses\n          // This is a placeholder as the Google GenAI JS SDK doesn't \n          // have a direct equivalent to the Python SDK's receive() method\n          // Instead of getLastResponse, we'll use sendMessage to get a response\n          const response = await chat.sendMessage(\"continue\");\n          yield convertResponse(response);\n        },\n        \n        async close(): Promise<void> {\n          // Clean up resources if needed\n          // The Google GenAI JS SDK doesn't have an explicit close method\n        }\n      };\n      \n      return { session };\n    } catch (error) {\n      console.error(\"Error connecting to Gemini model:\", error);\n      throw error;\n    }\n  }\n}\n\n/**\n * Integration for Gemini models.\n */\nexport class Gemini extends BaseLlm {\n  private apiClientCache: GenAIClient | null = null;\n  private liveApiClientCache: GenAIClient | null = null;\n  private readonly NEW_LINE = '\\n';\n  private readonly EXCLUDED_PART_FIELD: { 'inline_data': { 'data': string } } = { 'inline_data': { 'data': '' } };\n\n  /**\n   * Constructor\n   * @param model The name of the Gemini model, defaults to 'gemini-2.0-flash'\n   */\n  constructor(model: string = 'gemini-2.0-flash') {\n    super(model);\n  }\n\n  /**\n   * List of supported models\n   * @returns An array of regex patterns for supported model names\n   */\n  static supportedModels(): string[] {\n    return [\n      'gemini-1\\\\.5-flash(-\\\\d+)?',\n      'gemini-1\\\\.5-pro(-\\\\d+)?',\n      'gemini-2\\\\.0-flash-exp',\n      'gemini-2\\\\.0-flash',\n      'gemini-2\\\\.5-flash-preview-04-17',\n      'projects/.+/locations/.+/endpoints/.+', // finetuned vertex gemini endpoint\n      'projects/.+/locations/.+/publishers/google/models/gemini.+', // vertex gemini long name\n    ];\n  }\n\n  /**\n   * Generate content asynchronously\n   * @param llmRequest The request to send to the Gemini model\n   * @param stream Whether to use streaming mode\n   * @returns AsyncGenerator yielding LlmResponse objects\n   */\n  async *generateContentAsync(\n    llmRequest: LlmRequest,\n    stream: boolean = false\n  ): AsyncGenerator<LlmResponse, void, unknown> {\n\n    // Make sure contents array exists\n    if (!llmRequest.contents) {\n      llmRequest.contents = [];\n    }\n    \n    // Preserve original user message for logging\n    const originalUserMessages = llmRequest.contents\n      .filter(content => content.role === 'user')\n      .map(content => JSON.stringify(content));\n      \n    if (originalUserMessages.length === 0) {\n      console.warn('No user message found in request - this is unusual');\n    }\n    \n    // IMPORTANT: In the JavaScript SDK for Google Generative AI,\n    // system instructions should NOT be added as a message in contents\n    // with role 'system'. Instead, use the systemInstruction config parameter.\n    // Remove any system messages from contents array\n    llmRequest.contents = llmRequest.contents.filter(content => content.role !== 'system');\n    \n   \n    // Only append user content if absolutely necessary\n    this._maybeAppendUserContent(llmRequest);\n    \n    // Sanity check - make sure we still have the original user message\n    const userMessagesAfter = llmRequest.contents\n      .filter(content => content.role === 'user')\n      .map(content => JSON.stringify(content));\n    \n    if (originalUserMessages.length > 0 && \n        !userMessagesAfter.some(msg => originalUserMessages.includes(msg))) {\n      console.error('ERROR: Original user message was lost during processing!');\n      // In this case, restore the first original user message to ensure it's not lost\n      if (originalUserMessages.length > 0) {\n        const firstOriginalMsg = JSON.parse(originalUserMessages[0]);\n\n        llmRequest.contents.push(firstOriginalMsg);\n      }\n    }\n    \n    console.info(\n      `Sending out request, model: ${llmRequest.model || this.model}, backend: ${this._apiBackend}, stream: ${stream}`\n    );\n    console.info(this._buildRequestLog(llmRequest));\n\n    if (stream) {\n      const responses = this.apiClient.generateContentStream(\n        llmRequest.model || this.model,\n        llmRequest.contents,\n        llmRequest.config\n      );\n\n      let response: GenerateContentResponse | null = null;\n      let text = '';\n\n      // For streaming, mark text content as partial and accumulate text\n      for await (const resp of responses) {\n        console.info(this._buildResponseLog(resp));\n        response = resp;\n        const llmResponse = LlmResponse.create(resp);\n\n        if (\n          llmResponse.content &&\n          llmResponse.content.parts &&\n          llmResponse.content.parts[0]?.text\n        ) {\n          text += llmResponse.content.parts[0].text;\n          llmResponse.partial = true;\n        } else if (\n          text &&\n          (!llmResponse.content ||\n            !llmResponse.content.parts ||\n            !llmResponse.content.parts[0]?.inlineData)\n        ) {\n          // Yield accumulated text\n          const textResponse = new LlmResponse();\n          textResponse.content = {\n            role: 'model',\n            parts: [{ text }]\n          };\n          yield textResponse;\n          text = '';\n        }\n\n        yield llmResponse;\n      }\n\n      // Yield final accumulated text if there's any and response finished with STOP\n      if (\n        text &&\n        response &&\n        response.candidates &&\n        response.candidates[0]?.finish_reason === 'STOP'\n      ) {\n        const finalResponse = new LlmResponse();\n        finalResponse.content = {\n          role: 'model',\n          parts: [{ text }]\n        };\n        yield finalResponse;\n      }\n    } else {\n      // Non-streaming mode\n      const response = await this.apiClient.generateContent(\n        llmRequest.model || this.model,\n        llmRequest.contents,\n        llmRequest.config\n      );\n      console.info(this._buildResponseLog(response));\n      yield LlmResponse.create(response);\n    }\n  }\n\n  /**\n   * Get the API client\n   */\n  private get apiClient(): GenAIClient {\n    if (!this.apiClientCache) {\n      this.apiClientCache = new GenAIClient({ headers: this._trackingHeaders });\n    }\n    return this.apiClientCache;\n  }\n\n  /**\n   * Get the API backend type\n   */\n  private get _apiBackend(): string {\n    return this.apiClient.vertexai ? 'vertex' : 'ml_dev';\n  }\n\n  /**\n   * Get tracking headers for API requests\n   */\n  private get _trackingHeaders(): Record<string, string> {\n    // In a real implementation, we would import the version from a version module\n    const version = '1.0.0';\n    const frameworkLabel = `google-adk/${version}`;\n    const languageLabel = 'gl-typescript/1.0.0';\n    const versionHeaderValue = `${frameworkLabel} ${languageLabel}`;\n    \n    return {\n      'x-goog-api-client': versionHeaderValue,\n      'user-agent': versionHeaderValue,\n    };\n  }\n\n  /**\n   * Get the live API client\n   */\n  private get _liveApiClient(): GenAIClient {\n    if (!this.liveApiClientCache) {\n      if (this._apiBackend === 'vertex') {\n        // Use default API version for Vertex\n        this.liveApiClientCache = new GenAIClient({ headers: this._trackingHeaders });\n      } else {\n        // Use v1alpha for ML Dev\n        this.liveApiClientCache = new GenAIClient({\n          headers: this._trackingHeaders,\n          api_version: 'v1alpha'\n        });\n      }\n    }\n    return this.liveApiClientCache;\n  }\n\n  /**\n   * Connect to the Gemini model and create a connection\n   * This implementation is synchronous to match the BaseLlm interface\n   * The implementation itself uses async/await internally\n   */\n  connect(llmRequest: LlmRequest): BaseLlmConnection {\n    if (!llmRequest.liveConnectConfig) {\n      llmRequest.liveConnectConfig = {};\n    }\n    \n    // Cast to allow access to the properties we need\n    const liveConfig = llmRequest.liveConnectConfig as LiveConnectConfig;\n    \n    // Set system instruction\n    if (llmRequest.config.systemInstruction) {\n      liveConfig.systemInstruction = {\n        role: 'system',\n        parts: [{ text: llmRequest.config.systemInstruction }]\n      };\n    }\n    \n    // Set tools\n    liveConfig.tools = llmRequest.config.tools;\n    \n    // Create a minimal implementation that will be replaced with the real one\n    // when the async operations complete\n    const dummyConnection = new class extends BaseLlmConnection {\n      private realConnection: BaseLlmConnection | null = null;\n      private connectionPromise: Promise<BaseLlmConnection>;\n      \n      constructor(connectPromise: Promise<{ session: AsyncSession }>) {\n        super();\n        this.connectionPromise = connectPromise.then(({session}) => {\n          this.realConnection = new GeminiLlmConnection(session);\n          return this.realConnection;\n        }).catch(error => {\n          console.error('Error connecting to Gemini model:', error);\n          throw error;\n        });\n      }\n      \n      async sendHistory(history: Content[]): Promise<void> {\n        const conn = await this.connectionPromise;\n        return conn.sendHistory(history);\n      }\n      \n      async sendContent(content: Content): Promise<void> {\n        const conn = await this.connectionPromise;\n        return conn.sendContent(content);\n      }\n      \n      async sendRealtime(blob: Blob): Promise<void> {\n        const conn = await this.connectionPromise;\n        return conn.sendRealtime(blob);\n      }\n      \n      async *receive(): AsyncGenerator<LlmResponse, void, unknown> {\n        const conn = await this.connectionPromise;\n        yield* conn.receive();\n      }\n      \n      async close(): Promise<void> {\n        const conn = await this.connectionPromise;\n        return conn.close();\n      }\n    }(this._liveApiClient.connectLive(\n      llmRequest.model || this.model,\n      llmRequest.liveConnectConfig\n    ));\n    \n    return dummyConnection;\n  }\n\n  /**\n   * Appends a user content if needed\n   * @param llmRequest The request to modify\n   */\n  private _maybeAppendUserContent(llmRequest: LlmRequest): void {\n    // Make sure contents array exists\n    if (!llmRequest.contents) {\n      llmRequest.contents = [];\n    }\n    \n    // If contents array is completely empty, add a default message\n    // This should only happen in very rare cases where no message was provided at all\n    if (llmRequest.contents.length === 0) {\n      console.warn('WARNING: No content provided in request. This is unusual and suggests an error in the calling code.');\n      llmRequest.contents.push({\n        role: 'user',\n        parts: [{\n          text: 'Hello'\n        }]\n      });\n      return;\n    }\n\n    // Add a continuation prompt only if the last message is not from the user\n    // This is to ensure that model responses are always triggered by a user message\n    if (llmRequest.contents.length > 0 && \n        llmRequest.contents[llmRequest.contents.length - 1].role !== 'user') {\n      console.log('Last message is not from user, adding minimal continuation prompt');\n      llmRequest.contents.push({\n        role: 'user',\n        parts: [{\n          text: 'Continue please.'\n        }]\n      });\n    }\n  }\n\n  /**\n   * Build a log string for a function declaration\n   * @param funcDecl The function declaration\n   * @returns A string representation\n   */\n  private _buildFunctionDeclarationLog(funcDecl: FunctionDeclaration): string {\n    let paramStr = '{}';\n    if (funcDecl.parameters && funcDecl.parameters.properties) {\n      paramStr = JSON.stringify(funcDecl.parameters.properties);\n    }\n    const returnStr = 'None'; // TypeScript version doesn't use return types in the same way\n    return `${funcDecl.name}: ${paramStr} -> ${returnStr}`;\n  }\n\n  /**\n   * Build a log string for an LlmRequest\n   * @param req The request\n   * @returns A formatted log string\n   */\n  private _buildRequestLog(req: LlmRequest): string {\n    const functionDecls = req.config.tools?.[0]?.functionDeclarations || [];\n    const functionLogs = functionDecls.map(decl => this._buildFunctionDeclarationLog(decl));\n    \n    const contentsLogs = req.contents.map(content => {\n      // In a real implementation, we would exclude large binary data\n      // from inline_data fields before logging\n      return JSON.stringify(content);\n    });\n\n    return `\nLLM Request:\n-----------------------------------------------------------\nSystem Instruction:\n${req.config.systemInstruction || ''}\n-----------------------------------------------------------\nContents:\n${contentsLogs.join(this.NEW_LINE)}\n-----------------------------------------------------------\nFunctions:\n${functionLogs.join(this.NEW_LINE)}\n-----------------------------------------------------------\n`;\n  }\n\n  /**\n   * Build a log string for a response\n   * @param resp The response\n   * @returns A formatted log string\n   */\n  private _buildResponseLog(resp: GenerateContentResponse): string {\n    const functionCallsText: string[] = [];\n    \n    if (resp.function_calls) {\n      for (const funcCall of resp.function_calls) {\n        functionCallsText.push(`name: ${funcCall.name}, args: ${JSON.stringify(funcCall.args)}`);\n      }\n    }\n\n    return `\nLLM Response:\n-----------------------------------------------------------\nText:\n${resp.text || ''}\n-----------------------------------------------------------\nFunction calls:\n${functionCallsText.join(this.NEW_LINE)}\n-----------------------------------------------------------\nRaw response:\n${JSON.stringify(resp)}\n-----------------------------------------------------------\n`;\n  }\n} ",
                  "tests/unittests/models/gemini.test.ts": " \n\nimport { Content, Part } from '../../../src/models/types';\nimport { LlmRequest } from '../../../src/models/LlmRequest';\nimport { LlmResponse } from '../../../src/models/LlmResponse';\nimport { BaseLlm } from '../../../src/models/BaseLlm';\nimport { BaseLlmConnection } from '../../../src/models/BaseLlmConnection';\n\n// Mock implementation of GeminiLlmConnection\nclass GeminiLlmConnection extends BaseLlmConnection {\n  async sendHistory(history: Content[]): Promise<void> {\n    // Mock implementation\n  }\n\n  async sendContent(content: Content): Promise<void> {\n    // Mock implementation\n  }\n\n  async sendRealtime(blob: any): Promise<void> {\n    // Mock implementation\n  }\n\n  async *receive(): AsyncGenerator<LlmResponse, void, unknown> {\n    // Mock implementation\n    yield new LlmResponse();\n  }\n\n  async close(): Promise<void> {\n    // Mock implementation\n  }\n}\n\n// Gemini implementation for testing\nexport class Gemini extends BaseLlm {\n  apiClient: any;\n\n  constructor(model: string) {\n    super(model);\n    // Mock API client with headers for testing\n    this.apiClient = {\n      _api_client: {\n        _http_options: {\n          headers: {\n            'x-goog-api-client': '',\n            'user-agent': ''\n          }\n        }\n      }\n    };\n  }\n\n  static supportedModels(): string[] {\n    return [\n      'gemini-.*',\n      'projects\\\\/.*\\\\/locations\\\\/.*\\\\/endpoints\\\\/.*',\n      'projects\\\\/.*\\\\/locations\\\\/.*\\\\/publishers\\\\/google\\\\/models\\\\/gemini.*'\n    ];\n  }\n\n  _maybe_append_user_content(llmRequest: LlmRequest): void {\n    // Only append if the last message is from model\n    if (llmRequest.contents.length > 0 && \n        llmRequest.contents[llmRequest.contents.length - 1].role === 'model') {\n      const userContent: Content = {\n        role: 'user',\n        parts: [{ text: 'Continue processing the request.' }]\n      };\n      llmRequest.contents.push(userContent);\n    }\n  }\n\n  async *generateContentAsync(\n    llmRequest: LlmRequest,\n    stream = false\n  ): AsyncGenerator<LlmResponse, void, unknown> {\n    this._maybe_append_user_content(llmRequest);\n\n    // For non-streaming response\n    if (!stream) {\n      const response = new LlmResponse();\n      response.content = {\n        role: 'model',\n        parts: [{ text: 'Hello, how can I help you?' }]\n      };\n      yield response;\n      return;\n    }\n\n    // For streaming response\n    // Yield partial responses first\n    const partialResponses = [\n      'Hello',\n      ', how',\n      ' can I help you?'\n    ];\n\n    // First chunks are partial\n    for (let i = 0; i < partialResponses.length; i++) {\n      const partialResponse = new LlmResponse();\n      partialResponse.content = {\n        role: 'model',\n        parts: [{ text: partialResponses[i] }]\n      };\n      partialResponse.partial = true;\n      yield partialResponse;\n    }\n\n    // Last chunk includes the full response for client convenience\n    const finalResponse = new LlmResponse();\n    finalResponse.content = {\n      role: 'model',\n      parts: [{ text: partialResponses.join('') }]\n    };\n    finalResponse.turnComplete = true;\n    yield finalResponse;\n  }\n\n  connect(llmRequest: LlmRequest): BaseLlmConnection {\n    return new GeminiLlmConnection();\n  }\n}\n\n// Helper function to create a content object\nfunction createContent(role: string, text: string): Content {\n  return {\n    role,\n    parts: [{ text }]\n  };\n}\n\ndescribe('Gemini', () => {\n  let geminiLlm: Gemini;\n  let llmRequest: LlmRequest;\n\n  beforeEach(() => {\n    geminiLlm = new Gemini('gemini-2.0-flash');\n    llmRequest = new LlmRequest();\n    llmRequest.model = 'gemini-2.0-flash';\n    llmRequest.contents = [createContent('user', 'Hello')];\n    llmRequest.config = {\n      temperature: 0.1,\n      systemInstruction: 'You are a helpful assistant',\n      tools: []\n    };\n  });\n\n  test('supported_models returns correct patterns', () => {\n    const models = Gemini.supportedModels();\n    expect(models.length).toBe(3);\n    expect(models[0]).toBe('gemini-.*');\n    expect(models[1]).toBe('projects\\\\/.*\\\\/locations\\\\/.*\\\\/endpoints\\\\/.*');\n    expect(models[2]).toBe('projects\\\\/.*\\\\/locations\\\\/.*\\\\/publishers\\\\/google\\\\/models\\\\/gemini.*');\n  });\n\n  test('client version header contains required info', () => {\n    // Set version headers for testing\n    const versionInfo = 'google-adk/1.0.0 gl-typescript/1.0.0 google-genai-sdk/1.0.0';\n    geminiLlm.apiClient._api_client._http_options.headers['x-goog-api-client'] = versionInfo;\n    geminiLlm.apiClient._api_client._http_options.headers['user-agent'] = versionInfo;\n\n    const client = geminiLlm.apiClient;\n    const expectedHeader = 'google-adk/1.0.0 gl-typescript/1.0.0 google-genai-sdk/';\n    \n    expect(client._api_client._http_options.headers['x-goog-api-client']).toContain(expectedHeader);\n    expect(client._api_client._http_options.headers['user-agent']).toContain(expectedHeader);\n  });\n\n  test('maybe_append_user_content with user content already present', () => {\n    // Test with user content already present\n    geminiLlm._maybe_append_user_content(llmRequest);\n    expect(llmRequest.contents.length).toBe(1);\n  });\n\n  test('maybe_append_user_content with model content as the last message', () => {\n    // Test with model content as the last message\n    llmRequest.contents.push(createContent('model', 'Response'));\n    geminiLlm._maybe_append_user_content(llmRequest);\n    expect(llmRequest.contents.length).toBe(3);\n    expect(llmRequest.contents[2].role).toBe('user');\n    expect(llmRequest.contents[2].parts[0].text).toContain('Continue processing');\n  });\n\n  test('generateContentAsync returns expected response', async () => {\n    const responses: LlmResponse[] = [];\n    for await (const response of geminiLlm.generateContentAsync(llmRequest, false)) {\n      responses.push(response);\n    }\n\n    expect(responses.length).toBe(1);\n    expect(responses[0].content?.parts[0].text).toBe('Hello, how can I help you?');\n  });\n\n  test('generateContentAsync with streaming returns expected responses', async () => {\n    const responses: LlmResponse[] = [];\n    for await (const response of geminiLlm.generateContentAsync(llmRequest, true)) {\n      responses.push(response);\n    }\n\n    expect(responses.length).toBe(4);\n    expect(responses[0].partial).toBe(true);\n    expect(responses[1].partial).toBe(true);\n    expect(responses[2].partial).toBe(true);\n    expect(responses[3].content?.parts[0].text).toBe('Hello, how can I help you?');\n    expect(responses[3].turnComplete).toBe(true);\n  });\n\n  test('connect returns a GeminiLlmConnection instance', () => {\n    const connection = geminiLlm.connect(llmRequest);\n    expect(connection).toBeInstanceOf(GeminiLlmConnection);\n  });\n}); ",
                  "tests/integration/models/googleLlm.test.ts": "\n\nimport { Gemini, LlmRequest, LlmResponse, Content } from '../../../src/models';\nimport { loadEnvForTests } from '../testConfig';\n\n// Load environment variables for testing\nloadEnvForTests();\n\n// Type guard to check if content has text in first part\nfunction hasTextInFirstPart(content?: Content): content is Content {\n  return !!content && \n         Array.isArray(content.parts) && \n         content.parts.length > 0 && \n         typeof content.parts[0].text === 'string';\n}\n\ndescribe('GoogleLLM Tests', () => {\n  let geminiLlm: Gemini;\n  let llmRequest: LlmRequest;\n\n  beforeEach(() => {\n    geminiLlm = new Gemini('gemini-2.0-flash');\n    \n    llmRequest = new LlmRequest();\n    llmRequest.model = 'gemini-2.0-flash';\n    llmRequest.contents = [\n      {\n        role: 'user',\n        parts: [{ text: 'Hello' }]\n      }\n    ];\n    llmRequest.config = {\n      temperature: 0.1,\n      systemInstruction: 'You are a helpful assistant',\n      tools: []\n    };\n  });\n\n  test('generate content async', async () => {\n    const responseIterator = geminiLlm.generateContentAsync(llmRequest);\n    \n    for await (const response of responseIterator) {\n      expect(response).toBeInstanceOf(LlmResponse);\n      if (hasTextInFirstPart(response.content)) {\n        expect(response.content.parts[0].text).toBeDefined();\n      }\n    }\n  });\n\n  test('generate content async stream', async () => {\n    const responses: LlmResponse[] = [];\n    \n    const responseIterator = geminiLlm.generateContentAsync(llmRequest, true);\n    \n    for await (const response of responseIterator) {\n      responses.push(response);\n    }\n    \n    // Skip this test if we don't get any responses\n    if (responses.length === 0) {\n      return;\n    }\n    \n    let text = '';\n    \n    // Process all responses except the last one\n    for (let i = 0; i < responses.length - 1; i++) {\n      const response = responses[i];\n      \n      // Check if the response is marked as partial\n      if (typeof response.partial !== 'undefined') {\n        expect(response.partial).toBe(true);\n      }\n      \n      // Extract text from the response if available\n      if (hasTextInFirstPart(response.content)) {\n        text += response.content.parts[0].text;\n      }\n    }\n    \n    // Check the last response\n    const lastResponse = responses[responses.length - 1];\n    \n    // If the last response has content with text, verify it matches accumulated text\n    if (hasTextInFirstPart(lastResponse.content)) {\n      expect(lastResponse.content.parts[0].text).toBe(text);\n    }\n    \n    // Check if the last response is marked as not partial\n    if (typeof lastResponse.partial !== 'undefined') {\n      expect(lastResponse.partial).toBe(false);\n    }\n  });\n}); ",
                  "src/models/BaseLlm.ts": " \n\nimport { BaseLlmConnection } from './BaseLlmConnection';\nimport { LlmRequest } from './LlmRequest';\nimport { LlmResponse } from './LlmResponse';\n\n/**\n * The BaseLlm abstract class.\n *\n * Attributes:\n *   model: The name of the LLM, e.g. gemini-2.0-flash or gemini-2.0-flash-001.\n */\nexport abstract class BaseLlm {\n  /**\n   * The name of the LLM, e.g. gemini-2.0-flash or gemini-2.0-flash-001.\n   */\n  model: string;\n\n  constructor(model: string) {\n    this.model = model;\n  }\n\n  /**\n   * Returns a list of supported models in regex for LlmRegistry.\n   */\n  static supportedModels(): string[] {\n    return [];\n  }\n\n  /**\n   * Generates one content from the given contents and tools.\n   *\n   * @param llmRequest The request to send to the LLM.\n   * @param stream Whether to do streaming call.\n   * @returns An async generator of LlmResponse.\n   *\n   * For non-streaming call, it will only yield one LlmResponse.\n   * For streaming call, it may yield more than one response, but all yielded\n   * responses should be treated as one by merging the parts list.\n   */\n  abstract generateContentAsync(\n    llmRequest: LlmRequest,\n    stream?: boolean\n  ): AsyncGenerator<LlmResponse, void, unknown>;\n\n  /**\n   * Creates a live connection to the LLM.\n   *\n   * @param llmRequest The request to send to the LLM.\n   * @returns The connection to the LLM.\n   */\n  connect(llmRequest: LlmRequest): BaseLlmConnection {\n    throw new Error(`Live connection is not supported for ${this.model}.`);\n  }\n} ",
                  "src/models/BaseLlmConnection.ts": " \n\nimport { Blob, Content } from './types';\nimport { LlmResponse } from './LlmResponse';\n\n/**\n * The base class for a live model connection.\n */\nexport abstract class BaseLlmConnection {\n  /**\n   * Sends the conversation history to the model.\n   *\n   * You call this method right after setting up the model connection.\n   * The model will respond if the last content is from user, otherwise it will\n   * wait for new user input before responding.\n   *\n   * @param history The conversation history to send to the model.\n   */\n  abstract sendHistory(history: Content[]): Promise<void>;\n\n  /**\n   * Sends a user content to the model.\n   *\n   * The model will respond immediately upon receiving the content.\n   * If you send function responses, all parts in the content should be function\n   * responses.\n   *\n   * @param content The content to send to the model.\n   */\n  abstract sendContent(content: Content): Promise<void>;\n\n  /**\n   * Sends a chunk of audio or a frame of video to the model in realtime.\n   *\n   * The model may not respond immediately upon receiving the blob. It will do\n   * voice activity detection and decide when to respond.\n   *\n   * @param blob The blob to send to the model.\n   */\n  abstract sendRealtime(blob: Blob): Promise<void>;\n\n  /**\n   * Receives the model response using the llm server connection.\n   *\n   * @returns An async generator yielding LlmResponse objects.\n   */\n  abstract receive(): AsyncGenerator<LlmResponse, void, unknown>;\n\n  /**\n   * Closes the llm server connection.\n   */\n  abstract close(): Promise<void>;\n} ",
                  "src/models/GeminiLlmConnection.ts": " \n\nimport { BaseLlmConnection } from './BaseLlmConnection';\nimport { LlmResponse } from './LlmResponse';\nimport { Blob, Content, Part } from './types';\n\n/**\n * TypeScript equivalents of the Google genai live types\n */\ninterface LiveClientContent {\n  turns: Content[];\n  turn_complete: boolean;\n}\n\ninterface LiveClientToolResponse {\n  function_responses: any[];\n}\n\ninterface ServerContent {\n  model_turn?: Content;\n  output_transcription?: {\n    text: string;\n  };\n  turn_complete: boolean;\n  interrupted: boolean;\n}\n\ninterface ToolCall {\n  function_calls: any[];\n}\n\ninterface LiveMessage {\n  server_content?: ServerContent;\n  tool_call?: ToolCall;\n}\n\n/**\n * AsyncSession interface for the Google genai live SDK\n */\ninterface AsyncSession {\n  send(input: LiveClientContent | LiveClientToolResponse | Blob): Promise<void>;\n  receive(): AsyncGenerator<LiveMessage, void, unknown>;\n  close(): Promise<void>;\n}\n\n/**\n * The Gemini model connection.\n */\nexport class GeminiLlmConnection extends BaseLlmConnection {\n  private geminiSession: AsyncSession;\n  \n  /**\n   * Constructor for GeminiLlmConnection\n   * @param geminiSession The Gemini async session\n   */\n  constructor(geminiSession: AsyncSession) {\n    super();\n    this.geminiSession = geminiSession;\n  }\n\n  /**\n   * Sends the conversation history to the gemini model.\n   *\n   * You call this method right after setting up the model connection.\n   * The model will respond if the last content is from user, otherwise it will\n   * wait for new user input before responding.\n   *\n   * @param history The conversation history to send to the model.\n   */\n  async sendHistory(history: Content[]): Promise<void> {\n    // Filter out any content without text parts (e.g., ignore audio during agent transfer)\n    const contents = history.filter(content => \n      content.parts && \n      content.parts.length > 0 && \n      content.parts.some(part => part.text)\n    );\n\n    if (contents.length > 0) {\n      await this.geminiSession.send({\n        turns: contents,\n        turn_complete: contents[contents.length - 1].role === 'user'\n      });\n    } else {\n      console.info('No content is sent');\n    }\n  }\n\n  /**\n   * Sends a user content to the gemini model.\n   *\n   * The model will respond immediately upon receiving the content.\n   * If you send function responses, all parts in the content should be function\n   * responses.\n   *\n   * @param content The content to send to the model.\n   */\n  async sendContent(content: Content): Promise<void> {\n    if (!content.parts || content.parts.length === 0) {\n      throw new Error('Content must have parts');\n    }\n\n    if (content.parts[0].functionResponse) {\n      // All parts have to be function responses\n      const functionResponses = content.parts\n        .map(part => part.functionResponse)\n        .filter(fr => fr !== undefined);\n        \n      console.debug('Sending LLM function response:', functionResponses);\n      \n      await this.geminiSession.send({\n        function_responses: functionResponses\n      } as LiveClientToolResponse);\n    } else {\n\n      \n      await this.geminiSession.send({\n        turns: [content],\n        turn_complete: true\n      } as LiveClientContent);\n    }\n  }\n\n  /**\n   * Sends a chunk of audio or a frame of video to the model in realtime.\n   *\n   * The model may not respond immediately upon receiving the blob. It will do\n   * voice activity detection and decide when to respond.\n   *\n   * @param blob The blob to send to the model.\n   */\n  async sendRealtime(blob: Blob): Promise<void> {\n    console.debug('Sending LLM Blob:', blob);\n    await this.geminiSession.send(blob);\n  }\n\n  /**\n   * Builds a full text response.\n   *\n   * The text is not partial and the returned LlmResponse is not be\n   * partial.\n   *\n   * @param text The text to be included in the response.\n   * @returns An LlmResponse containing the full text.\n   */\n  private buildFullTextResponse(text: string): LlmResponse {\n    const response = new LlmResponse();\n    response.content = {\n      role: 'model',\n      parts: [{ text }]\n    };\n    return response;\n  }\n\n  /**\n   * Receives the model response using the llm server connection.\n   *\n   * @returns An async generator yielding LlmResponse objects.\n   */\n  async *receive(): AsyncGenerator<LlmResponse, void, unknown> {\n    let text = '';\n    \n    for await (const message of this.geminiSession.receive()) {\n      console.debug('Got LLM Live message:', message);\n      \n      if (message.server_content) {\n        const serverContent = message.server_content;\n        const content = serverContent.model_turn;\n        \n        if (content && content.parts && content.parts.length > 0) {\n          const response = new LlmResponse();\n          response.content = content;\n          response.interrupted = serverContent.interrupted;\n          \n          if (content.parts[0].text) {\n            text += content.parts[0].text;\n            response.partial = true;\n          } \n          // Don't yield the merged text event when receiving audio data\n          else if (text && !content.parts[0].inlineData) {\n            yield this.buildFullTextResponse(text);\n            text = '';\n          }\n          \n          yield response;\n        }\n\n        // Handle transcription\n        if (\n          serverContent.output_transcription &&\n          serverContent.output_transcription.text\n        ) {\n          // Transcription is always considered as partial event\n          // We rely on other control signals to determine when to yield the\n          // full text response (turn_complete, interrupted, or tool_call)\n          text += serverContent.output_transcription.text;\n          \n          const response = new LlmResponse();\n          response.content = {\n            role: 'model',\n            parts: [{ text: serverContent.output_transcription.text }]\n          };\n          response.partial = true;\n          \n          yield response;\n        }\n\n        // Handle turn complete\n        if (serverContent.turn_complete) {\n          if (text) {\n            yield this.buildFullTextResponse(text);\n            text = '';\n          }\n          \n          const response = new LlmResponse();\n          response.turnComplete = true;\n          response.interrupted = serverContent.interrupted;\n          \n          yield response;\n          break;\n        }\n        \n        // In case of empty content or parts, we still surface it\n        // If it's an interrupted message, we merge the previous partial text\n        if (serverContent.interrupted && text) {\n          yield this.buildFullTextResponse(text);\n          text = '';\n        }\n        \n        // Yield interrupted status\n        const interruptedResponse = new LlmResponse();\n        interruptedResponse.interrupted = serverContent.interrupted;\n        yield interruptedResponse;\n      }\n      \n      // Handle tool call\n      if (message.tool_call) {\n        if (text) {\n          yield this.buildFullTextResponse(text);\n          text = '';\n        }\n        \n        const parts: Part[] = message.tool_call.function_calls.map(\n          functionCall => ({ functionCall })\n        );\n        \n        const response = new LlmResponse();\n        response.content = {\n          role: 'model',\n          parts\n        };\n        \n        yield response;\n      }\n    }\n  }\n\n  /**\n   * Closes the llm server connection.\n   */\n  async close(): Promise<void> {\n    await this.geminiSession.close();\n  }\n} ",
                  "src/models/LlmRequest.ts": " \n\nimport { Content, GenerateContentConfig, LiveConnectConfig, Tool, FunctionDeclaration } from './types';\nimport { BaseTool } from '../tools/BaseTool';\n\n/**\n * LLM request class that allows passing in tools, output schema and system\n * instructions to the model.\n */\nexport class LlmRequest {\n  /**\n   * The model name.\n   */\n  model?: string = undefined;\n\n  /**\n   * The contents to send to the model.\n   */\n  contents: Content[] = [];\n\n  /**\n   * Additional config for the generate content request.\n   * Tools in generate_content_config should not be set.\n   */\n  config: GenerateContentConfig;\n  \n  /**\n   * Configuration for live connections\n   */\n  liveConnectConfig: LiveConnectConfig;\n\n  /**\n   * The tools dictionary.\n   * Maps tool names to tool instances.\n   * @private Not serialized when converting to JSON\n   */\n  private toolsDict: Record<string, BaseTool> = {};\n\n  /**\n   * Creates a new LLM request.\n   */\n  constructor() {\n    this.config = {\n      temperature: undefined,\n      topP: undefined,\n      topK: undefined,\n      maxOutputTokens: undefined,\n      candidateCount: undefined,\n      stopSequences: undefined,\n      systemInstruction: undefined,\n      tools: [],\n      responseSchema: undefined,\n      responseMimeType: undefined,\n      thinkingConfig: undefined\n    };\n    this.liveConnectConfig = {};\n  }\n\n  /**\n   * Appends instructions to the system instruction.\n   * @param instructions The instructions to append.\n   */\n  appendInstructions(instructions: string[]): void {\n    if (!instructions || instructions.length === 0) {\n      return;\n    }\n\n    if (this.config.systemInstruction) {\n      this.config.systemInstruction += '\\n\\n' + instructions.join('\\n\\n');\n    } else {\n      this.config.systemInstruction = instructions.join('\\n\\n');\n    }\n  }\n\n  /**\n   * Appends tools to the request.\n   * @param tools The tools to append.\n   */\n  appendTools(tools: BaseTool[]): void {\n\n    if (!tools || tools.length === 0) {\n      console.log('no tools to append');\n      return;\n    }\n\n    const declarations: FunctionDeclaration[] = [];\n    \n    for (const tool of tools) {\n      let declaration: FunctionDeclaration | null = null;\n      \n      // Use the public getDeclaration method which internally calls _getDeclaration\n      if (typeof tool.getDeclaration === 'function') {\n        declaration = tool.getDeclaration();\n      }\n      \n      if (declaration) {\n        // Store tool name to avoid duplicates\n        this.toolsDict[tool.name] = tool;\n        // Check if we already have this declaration to avoid duplicates\n        const existingDeclaration = declarations.find(d => d.name === declaration?.name);\n        if (!existingDeclaration) {\n          declarations.push(declaration);\n        }\n      }\n    }\n\n    if (declarations.length > 0) {\n      // Find an existing tool entry with functionDeclarations (camelCase format)\n      let toolEntry = this.config.tools.find(t => \n        Array.isArray((t as any).functionDeclarations)\n      );\n      \n      // Also check for snake_case format for backward compatibility\n      if (!toolEntry) {\n        toolEntry = this.config.tools.find(t => \n          Array.isArray(t.functionDeclarations)\n        );\n        \n        // Convert to camelCase if found\n        if (toolEntry && toolEntry.functionDeclarations) {\n          (toolEntry as any).functionDeclarations = toolEntry.functionDeclarations;\n          // Use type assertion to avoid TypeScript error\n          (toolEntry as any).functionDeclarations = undefined;\n        }\n      }\n      \n      if (toolEntry) {\n        // We need to use 'as any' since functionDeclarations isn't in the type\n        const existingDeclarations = (toolEntry as any).functionDeclarations || [];\n        \n        // Add new declarations, avoiding duplicates\n        for (const declaration of declarations) {\n          // Check if a declaration with the same name already exists\n          const existingIndex = existingDeclarations.findIndex(\n            (existing: FunctionDeclaration) => existing.name === declaration.name\n          );\n          \n          if (existingIndex === -1) {\n            // Only add if it doesn't exist already\n            existingDeclarations.push(declaration);\n          }\n        }\n        \n        // Update the declarations\n        (toolEntry as any).functionDeclarations = existingDeclarations;\n      } else {\n        // Create a new tool entry with camelCase format\n        this.config.tools.push({\n          functionDeclarations: declarations\n        } as any);\n      }\n    }\n  }\n\n  /**\n   * Sets the output schema for the request.\n   * @param baseModel The schema class to set the output schema to.\n   */\n  setOutputSchema(baseModel: any): void {\n    this.config.responseSchema = baseModel;\n    this.config.responseMimeType = 'application/json';\n  }\n\n  /**\n   * Get the tools dictionary for this request.\n   * @returns The tools dictionary\n   */\n  getToolsDict(): Record<string, BaseTool> {\n    return { ...this.toolsDict };\n  }\n\n  /**\n   * Adds a function declaration to the tools.\n   * @param functionDef The function definition to add\n   */\n  addFunction(functionDef: FunctionDeclaration): void {\n    if (!functionDef) {\n      return;\n    }\n    \n    // Find an existing tool entry with functionDeclarations (camelCase format)\n    const toolEntry = this.config.tools.find(t => \n      Array.isArray((t as any).functionDeclarations)\n    );\n    \n    if (toolEntry) {\n      // We need to use 'as any' since functionDeclarations isn't in the type\n      const existingDeclarations = (toolEntry as any).functionDeclarations || [];\n      \n      // Check if a declaration with the same name already exists\n      const existingIndex = existingDeclarations.findIndex(\n        (existing: FunctionDeclaration) => existing.name === functionDef.name\n      );\n      \n      if (existingIndex === -1) {\n        // Only add if it doesn't exist already\n        existingDeclarations.push(functionDef);\n      }\n      \n      // Update the declarations\n      (toolEntry as any).functionDeclarations = existingDeclarations;\n    } else {\n      // Create a new tool entry with camelCase format\n      this.config.tools.push({\n        functionDeclarations: [functionDef]\n      } as any);\n    }\n  }\n\n  /**\n   * Converts this LlmRequest to a plain object for API requests.\n   * @returns A plain object representation of this request\n   */\n  toRequestObject(): any {\n    const result: any = {\n      contents: this.contents,\n      model: this.model\n    };\n\n    // Add configuration if it exists\n    if (this.config && Object.keys(this.config).length > 0) {\n      result.generationConfig = {};\n      \n      // Copy over generation config properties\n      if (this.config.temperature !== undefined) {\n        result.generationConfig.temperature = this.config.temperature;\n      }\n      if (this.config.topP !== undefined) {\n        result.generationConfig.topP = this.config.topP;\n      }\n      if (this.config.topK !== undefined) {\n        result.generationConfig.topK = this.config.topK;\n      }\n      if (this.config.maxOutputTokens !== undefined) {\n        result.generationConfig.maxOutputTokens = this.config.maxOutputTokens;\n      }\n      if (this.config.candidateCount !== undefined) {\n        result.generationConfig.candidateCount = this.config.candidateCount;\n      }\n      if (this.config.stopSequences !== undefined) {\n        result.generationConfig.stopSequences = this.config.stopSequences;\n      }\n      \n      // Add system instructions if present\n      if (this.config.systemInstruction) {\n        result.systemInstruction = this.config.systemInstruction;\n      }\n      \n      // Add tools if present\n      if (this.config.tools && this.config.tools.length > 0) {\n        result.tools = this.config.tools;\n      }\n      \n      // Add response schema if present\n      if (this.config.responseSchema) {\n        result.generationConfig.responseSchema = this.config.responseSchema;\n        result.generationConfig.responseMimeType = this.config.responseMimeType || 'application/json';\n      }\n      \n      // Add thinking config if present\n      if (this.config.thinkingConfig) {\n        result.thinkingConfig = this.config.thinkingConfig;\n      }\n    }\n    \n    // Add live connect config if present\n    if (this.liveConnectConfig && Object.keys(this.liveConnectConfig).length > 0) {\n      result.liveConnectConfig = this.liveConnectConfig;\n    }\n    \n    return result;\n  }\n} ",
                  "src/models/LlmResponse.ts": " \n\nimport { Content, GroundingMetadata } from './types';\n\n/**\n * Interface representing a response from the LLM model API.\n */\nexport interface GenerateContentResponse {\n  candidates?: {\n    content?: Content;\n    grounding_metadata?: GroundingMetadata;\n    finish_reason?: string;\n    finish_message?: string;\n  }[];\n  prompt_feedback?: {\n    block_reason?: string;\n    block_reason_message?: string;\n  };\n}\n\n/**\n * Options for creating an LlmResponse.\n */\nexport interface LlmResponseOptions {\n  /**\n   * The content of the response.\n   */\n  content?: Content;\n\n  /**\n   * The grounding metadata of the response.\n   */\n  groundingMetadata?: GroundingMetadata;\n\n  /**\n   * Indicates whether the text content is part of an unfinished text stream.\n   * Only used for streaming mode and when the content is plain text.\n   */\n  partial?: boolean;\n\n  /**\n   * Indicates whether the response from the model is complete.\n   * Only used for streaming mode.\n   */\n  turnComplete?: boolean;\n\n  /**\n   * Error code if the response is an error. Code varies by model.\n   */\n  errorCode?: string;\n\n  /**\n   * Error message if the response is an error.\n   */\n  errorMessage?: string;\n\n  /**\n   * Flag indicating that LLM was interrupted when generating the content.\n   * Usually it's due to user interruption during a bidi streaming.\n   */\n  interrupted?: boolean;\n\n  /**\n   * The custom metadata of the LlmResponse.\n   * An optional key-value pair to label an LlmResponse.\n   * NOTE: the entire dict must be JSON serializable.\n   */\n  customMetadata?: Record<string, any>;\n}\n\n/**\n * LLM response class that provides the first candidate response from the model\n * if available. Otherwise, returns error code and message.\n */\nexport class LlmResponse {\n  /**\n   * The content of the response.\n   */\n  content?: Content;\n\n  /**\n   * The grounding metadata of the response.\n   */\n  groundingMetadata?: GroundingMetadata;\n\n  /**\n   * Indicates whether the text content is part of an unfinished text stream.\n   * Only used for streaming mode and when the content is plain text.\n   */\n  partial?: boolean;\n\n  /**\n   * Indicates whether the response from the model is complete.\n   * Only used for streaming mode.\n   */\n  turnComplete?: boolean;\n\n  /**\n   * Error code if the response is an error. Code varies by model.\n   */\n  errorCode?: string;\n\n  /**\n   * Error message if the response is an error.\n   */\n  errorMessage?: string;\n\n  /**\n   * Flag indicating that LLM was interrupted when generating the content.\n   * Usually it's due to user interruption during a bidi streaming.\n   */\n  interrupted?: boolean;\n\n  /**\n   * The custom metadata of the LlmResponse.\n   * An optional key-value pair to label an LlmResponse.\n   * NOTE: the entire dict must be JSON serializable.\n   */\n  customMetadata?: Record<string, any>;\n\n  /**\n   * Creates a new LlmResponse instance.\n   * @param options Configuration options for the response\n   */\n  constructor(options: LlmResponseOptions = {}) {\n    this.content = options.content;\n    this.groundingMetadata = options.groundingMetadata;\n    this.partial = options.partial;\n    this.turnComplete = options.turnComplete;\n    this.errorCode = options.errorCode;\n    this.errorMessage = options.errorMessage;\n    this.interrupted = options.interrupted;\n    this.customMetadata = options.customMetadata;\n  }\n\n  /**\n   * Creates an LlmResponse from a GenerateContentResponse.\n   * @param generateContentResponse The GenerateContentResponse to create the LlmResponse from.\n   * @returns The LlmResponse.\n   */\n  static create(generateContentResponse: GenerateContentResponse): LlmResponse {\n    // Check if the response is empty or undefined\n    if (!generateContentResponse || Object.keys(generateContentResponse).length === 0) {\n      console.warn('Received empty response from the LLM API');\n      return new LlmResponse({\n        content: {\n          role: 'model',\n          parts: [{ text: 'I encountered an issue processing your request. Please try again.' }]\n        },\n        errorCode: 'EMPTY_RESPONSE',\n        errorMessage: 'Empty response received from the LLM API.'\n      });\n    }\n\n    if (generateContentResponse.candidates && generateContentResponse.candidates.length > 0) {\n      const candidate = generateContentResponse.candidates[0];\n      if (candidate.content && candidate.content.parts && candidate.content.parts.length > 0) {\n        return new LlmResponse({\n          content: candidate.content,\n          groundingMetadata: candidate.grounding_metadata\n        });\n      } else {\n        return new LlmResponse({\n          errorCode: candidate.finish_reason,\n          errorMessage: candidate.finish_message\n        });\n      }\n    } else if (generateContentResponse.prompt_feedback) {\n      const promptFeedback = generateContentResponse.prompt_feedback;\n      return new LlmResponse({\n        errorCode: promptFeedback.block_reason,\n        errorMessage: promptFeedback.block_reason_message\n      });\n    } else {\n      return new LlmResponse({\n        errorCode: 'UNKNOWN_ERROR',\n        errorMessage: 'Unknown error.'\n      });\n    }\n  }\n\n  /**\n   * Checks if this response has an error.\n   * @returns True if this response has an error, false otherwise.\n   */\n  hasError(): boolean {\n    return this.errorCode !== undefined && this.errorCode !== null;\n  }\n\n  /**\n   * Gets the text content of this response, if available.\n   * @returns The text content as a string, or undefined if not available.\n   */\n  getText(): string | undefined {\n    if (!this.content || !this.content.parts) {\n      return undefined;\n    }\n\n    return this.content.parts\n      .filter(part => part.text !== undefined)\n      .map(part => part.text)\n      .join('');\n  }\n\n  /**\n   * Creates a copy of this LlmResponse with the given partial flag.\n   * @param partial The partial flag value.\n   * @returns A new LlmResponse with the updated partial flag.\n   */\n  withPartial(partial: boolean): LlmResponse {\n    return new LlmResponse({\n      content: this.content,\n      groundingMetadata: this.groundingMetadata,\n      partial,\n      turnComplete: this.turnComplete,\n      errorCode: this.errorCode,\n      errorMessage: this.errorMessage,\n      interrupted: this.interrupted,\n      customMetadata: this.customMetadata\n    });\n  }\n\n  /**\n   * Creates a copy of this LlmResponse with the given turn complete flag.\n   * @param turnComplete The turn complete flag value.\n   * @returns A new LlmResponse with the updated turn complete flag.\n   */\n  withTurnComplete(turnComplete: boolean): LlmResponse {\n    return new LlmResponse({\n      content: this.content,\n      groundingMetadata: this.groundingMetadata,\n      partial: this.partial,\n      turnComplete,\n      errorCode: this.errorCode,\n      errorMessage: this.errorMessage,\n      interrupted: this.interrupted,\n      customMetadata: this.customMetadata\n    });\n  }\n\n  /**\n   * Creates a copy of this LlmResponse with the given interrupted flag.\n   * @param interrupted The interrupted flag value.\n   * @returns A new LlmResponse with the updated interrupted flag.\n   */\n  withInterrupted(interrupted: boolean): LlmResponse {\n    return new LlmResponse({\n      content: this.content,\n      groundingMetadata: this.groundingMetadata,\n      partial: this.partial,\n      turnComplete: this.turnComplete,\n      errorCode: this.errorCode,\n      errorMessage: this.errorMessage,\n      interrupted,\n      customMetadata: this.customMetadata\n    });\n  }\n\n  /**\n   * Creates a copy of this LlmResponse with the given custom metadata.\n   * @param customMetadata The custom metadata.\n   * @returns A new LlmResponse with the updated custom metadata.\n   */\n  withCustomMetadata(customMetadata: Record<string, any>): LlmResponse {\n    return new LlmResponse({\n      content: this.content,\n      groundingMetadata: this.groundingMetadata,\n      partial: this.partial,\n      turnComplete: this.turnComplete,\n      errorCode: this.errorCode,\n      errorMessage: this.errorMessage,\n      interrupted: this.interrupted,\n      customMetadata\n    });\n  }\n} ",
                  "src/models/types.ts": " \n\n/**\n * Function call type for LLM interactions\n */\nexport interface FunctionCall {\n  name: string;\n  args: Record<string, any>;\n  id?: string;\n}\n\n/**\n * Function response type for LLM interactions\n */\nexport interface FunctionResponse {\n  name: string;\n  response: Record<string, any>;\n  id?: string;\n}\n\n/**\n * Part type for Content\n */\nexport interface Part {\n  text?: string;\n  inlineData?: {\n    data: string;\n    mimeType: string;\n  };\n  functionCall?: FunctionCall;\n  functionResponse?: FunctionResponse;\n  codeExecutionResult?: {\n    [key: string]: any;\n  };\n  thought?: boolean;\n}\n\n/**\n * Content type used in LLM interactions\n */\nexport interface Content {\n  role: string;\n  parts: Part[];\n}\n\n/**\n * Function declaration type for Tools\n */\nexport interface FunctionDeclaration {\n  name: string;\n  description: string;\n  parameters: Record<string, any>;\n}\n\n/**\n * Tool type for LLM functions\n */\nexport interface Tool {\n  functionDeclarations: FunctionDeclaration[];\n}\n\n/**\n * Configuration for model thinking features\n */\nexport interface ThinkingConfig {\n  // Add any specific properties for thinking configuration\n  // This is a placeholder that matches the Python implementation\n  [key: string]: any;\n}\n\n/**\n * Config for generate content requests\n */\nexport interface GenerateContentConfig {\n  temperature?: number;\n  topP?: number;\n  topK?: number;\n  maxOutputTokens?: number;\n  candidateCount?: number;\n  stopSequences?: string[];\n  systemInstruction?: string;\n  tools: Tool[];\n  responseSchema?: any;\n  responseMimeType?: string;\n  thinkingConfig?: ThinkingConfig;\n}\n\n/**\n * Config for live connect requests\n */\nexport interface LiveConnectConfig {\n  voiceInput?: boolean;\n  // Add other live connect config parameters as needed\n}\n\n/**\n * Grounding metadata for responses\n */\nexport interface GroundingMetadata {\n  // Define grounding metadata structure based on usage\n}\n\n/**\n * Blob type for media data\n */\nexport interface Blob {\n  data: Uint8Array | string;\n  mimeType: string;\n}\n\n/**\n * Schema type for function parameters\n */\nexport interface Schema {\n  type?: string;\n  description?: string;\n  properties?: Record<string, Schema>;\n  items?: Schema | { type: string };\n  required?: string[];\n}\n\n/**\n * Message role enum for consistent role naming in messages\n */\nexport enum MessageRole {\n  USER = 'user',\n  ASSISTANT = 'assistant',\n  MODEL = 'model',\n  SYSTEM = 'system',\n  TOOL = 'tool'\n}\n\n/**\n * Message interface for communication between agents and sessions\n */\nexport interface Message {\n  id: string;\n  role: MessageRole | string;\n  parts: Part[];\n  timestamp: Date;\n  text: () => string;\n} ",
                  "src/models/index.ts": " \n\n/**\n * Defines the interface to support a model.\n */\n\n// Import all models\nimport { Claude } from './AnthropicLlm';\nimport { Gemini } from './GoogleLlm';\nimport { LlmRegistry } from './LlmRegistry';\n\n// Export base classes\nexport { BaseLlm } from './BaseLlm';\nexport { BaseLlmConnection } from './BaseLlmConnection';\nexport { LlmRequest } from './LlmRequest';\nexport { LlmResponse } from './LlmResponse';\nexport { LlmRegistry } from './LlmRegistry';\nexport { LiteLlm, TextChunk, FunctionChunk } from './LiteLlm';\nexport { Claude } from './AnthropicLlm';\nexport { Gemini } from './GoogleLlm';\nexport { GeminiLlmConnection } from './GeminiLlmConnection';\n\n// Export types\nexport * from './types';\n\n// Auto-register models\n// Register the Claude model\nLlmRegistry.register(Claude);\n// Register the Gemini model\nLlmRegistry.register(Gemini); ",
                  "tests/integration/testConfig.ts": "import * as dotenv from 'dotenv';\nimport * as path from 'path';\n\n/**\n * Load environment variables for tests\n */\nexport function loadEnvForTests(): void {\n  const dotenvPath = path.join(__dirname, '.env');\n  \n  try {\n    dotenv.config({ path: dotenvPath });\n  } catch (error) {\n    console.warn(`Missing .env file at ${dotenvPath}. See .env.example for an example.`);\n  }\n  \n  // Check for required environment variables\n  if (!process.env.GOOGLE_API_KEY) {\n    console.warn('Missing GOOGLE_API_KEY in the environment variables. GOOGLE_AI backend integration tests will fail.');\n  }\n  \n  const requiredCloudVars = [\n    'GOOGLE_CLOUD_PROJECT',\n    'GOOGLE_CLOUD_LOCATION'\n  ];\n  \n  for (const envVar of requiredCloudVars) {\n    if (!process.env[envVar]) {\n      console.warn(`Missing ${envVar} in the environment variables. Vertex backend integration tests will fail.`);\n    }\n  }\n}\n\n/**\n * Get the backend type for tests\n * @returns The backend type (GOOGLE_AI or VERTEX)\n */\nexport function getBackendType(): 'GOOGLE_AI' | 'VERTEX' | 'BOTH' {\n  const testBackend = process.env.TEST_BACKEND || 'BOTH';\n  \n  if (testBackend === 'GOOGLE_AI_ONLY') {\n    return 'GOOGLE_AI';\n  } else if (testBackend === 'VERTEX_ONLY') {\n    return 'VERTEX';\n  } else if (testBackend === 'BOTH') {\n    return 'BOTH';\n  } else {\n    throw new Error(`Invalid TEST_BACKEND value: ${testBackend}, should be one of [GOOGLE_AI_ONLY, VERTEX_ONLY, BOTH]`);\n  }\n}\n\n/**\n * Set the backend environment variable\n * @param backendType The backend type to set\n * @returns The original backend setting\n */\nexport function setBackendEnvironment(backendType: 'GOOGLE_AI' | 'VERTEX'): string | undefined {\n  const originalVal = process.env.GOOGLE_GENAI_USE_VERTEXAI;\n  \n  if (backendType === 'GOOGLE_AI') {\n    process.env.GOOGLE_GENAI_USE_VERTEXAI = '0';\n  } else {\n    process.env.GOOGLE_GENAI_USE_VERTEXAI = '1';\n  }\n  \n  return originalVal;\n}\n\n/**\n * Restore the backend environment variable\n * @param originalVal The original value to restore\n */\nexport function restoreBackendEnvironment(originalVal: string | undefined): void {\n  if (originalVal === undefined) {\n    delete process.env.GOOGLE_GENAI_USE_VERTEXAI;\n  } else {\n    process.env.GOOGLE_GENAI_USE_VERTEXAI = originalVal;\n  }\n}\n\n// Initialize environment variables\nloadEnvForTests(); "
                },
                "summary": {
                  "commit_sha": "795605a37e1141e37d86c9b3fa484a3a03e7e9a6",
                  "python_files_count": 9,
                  "typescript_files_count": 11,
                  "python_files": [
                    "src/google/adk/models/google_llm.py",
                    "tests/unittests/models/test_google_llm.py",
                    "src/google/adk/version.py",
                    "src/google/adk/utils/variant_utils.py",
                    "src/google/adk/models/base_llm.py",
                    "src/google/adk/models/base_llm_connection.py",
                    "src/google/adk/models/gemini_llm_connection.py",
                    "src/google/adk/models/llm_response.py",
                    "src/google/adk/models/llm_request.py"
                  ],
                  "typescript_files": [
                    "src/models/GoogleLlm.ts",
                    "tests/unittests/models/gemini.test.ts",
                    "tests/integration/models/googleLlm.test.ts",
                    "src/models/BaseLlm.ts",
                    "src/models/BaseLlmConnection.ts",
                    "src/models/GeminiLlmConnection.ts",
                    "src/models/LlmRequest.ts",
                    "src/models/LlmResponse.ts",
                    "src/models/types.ts",
                    "src/models/index.ts",
                    "tests/integration/testConfig.ts"
                  ]
                }
              }
          }
        },
        "conversation": [
          {
            "user_content": {
              "role": "user",
              "parts": [
                { "text": "Please use the translator agent to translate the changes ." }
              ]
            }
          }
        ]
      }
    ]
  }